{
  "version": 3,
  "sources": ["../../react-is/cjs/react-is.development.js", "../../react-is/index.js", "../../object-assign/index.js", "../../prop-types/lib/ReactPropTypesSecret.js", "../../prop-types/lib/has.js", "../../prop-types/checkPropTypes.js", "../../prop-types/factoryWithTypeCheckers.js", "../../prop-types/index.js", "../../@medplum/react-hooks/src/MedplumProvider/MedplumProvider.tsx", "../../@medplum/react-hooks/src/MedplumProvider/MedplumProvider.context.ts", "../../@medplum/react-hooks/src/useCachedBinaryUrl/useCachedBinaryUrl.ts", "../../@medplum/react-hooks/src/usePrevious/usePrevious.ts", "../../@medplum/react-hooks/src/useResource/useResource.ts", "../../@medplum/react-hooks/src/useSearch/useSearch.ts", "../../@medplum/react-hooks/src/useDebouncedValue/useDebouncedValue.ts", "../../@medplum/react-hooks/src/useSubscription/useSubscription.ts", "../../node_modules/rfc6902/pointer.js", "../../node_modules/rfc6902/util.js", "../../node_modules/rfc6902/diff.js", "../../node_modules/rfc6902/patch.js", "../../node_modules/rfc6902/index.js", "../../@medplum/react/src/index.ts", "../../@medplum/react/src/AddressDisplay/AddressDisplay.tsx", "../../@medplum/react/src/AddressInput/AddressInput.tsx", "../../@medplum/react/src/ElementsInput/ElementsInput.utils.ts", "../../@medplum/react/src/constants.ts", "../../@medplum/react/src/AnnotationInput/AnnotationInput.tsx", "../../@medplum/react/src/AppShell/AppShell.tsx", "../../@medplum/react/src/ErrorBoundary/ErrorBoundary.tsx", "../../node_modules/@tabler/icons-react/src/defaultAttributes.ts", "../../node_modules/@tabler/icons-react/src/createReactComponent.ts", "../../node_modules/@tabler/icons-react/src/icons/IconAdjustmentsHorizontal.ts", "../../node_modules/@tabler/icons-react/src/icons/IconAlertCircle.ts", "../../node_modules/@tabler/icons-react/src/icons/IconArrowDown.ts", "../../node_modules/@tabler/icons-react/src/icons/IconArrowRight.ts", "../../node_modules/@tabler/icons-react/src/icons/IconArrowUp.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBleachOff.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBleach.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBoxMultiple.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBracketsContain.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBucketOff.ts", "../../node_modules/@tabler/icons-react/src/icons/IconBucket.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCalendar.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCheck.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCheckbox.ts", "../../node_modules/@tabler/icons-react/src/icons/IconChevronDown.ts", "../../node_modules/@tabler/icons-react/src/icons/IconChevronUp.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCircleMinus.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCirclePlus.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCloudUpload.ts", "../../node_modules/@tabler/icons-react/src/icons/IconColumns.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCopy.ts", "../../node_modules/@tabler/icons-react/src/icons/IconCurrencyDollar.ts", "../../node_modules/@tabler/icons-react/src/icons/IconDots.ts", "../../node_modules/@tabler/icons-react/src/icons/IconEdit.ts", "../../node_modules/@tabler/icons-react/src/icons/IconEqualNot.ts", "../../node_modules/@tabler/icons-react/src/icons/IconEqual.ts", "../../node_modules/@tabler/icons-react/src/icons/IconFileAlert.ts", "../../node_modules/@tabler/icons-react/src/icons/IconFilePlus.ts", "../../node_modules/@tabler/icons-react/src/icons/IconFilter.ts", "../../node_modules/@tabler/icons-react/src/icons/IconGenderFemale.ts", "../../node_modules/@tabler/icons-react/src/icons/IconGenderMale.ts", "../../node_modules/@tabler/icons-react/src/icons/IconLogout.ts", "../../node_modules/@tabler/icons-react/src/icons/IconMathGreater.ts", "../../node_modules/@tabler/icons-react/src/icons/IconMathLower.ts", "../../node_modules/@tabler/icons-react/src/icons/IconMessage.ts", "../../node_modules/@tabler/icons-react/src/icons/IconPlus.ts", "../../node_modules/@tabler/icons-react/src/icons/IconRefresh.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSearch.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSettings.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSortAscending.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSortDescending.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSquare.ts", "../../node_modules/@tabler/icons-react/src/icons/IconStethoscope.ts", "../../node_modules/@tabler/icons-react/src/icons/IconSwitchHorizontal.ts", "../../node_modules/@tabler/icons-react/src/icons/IconTableExport.ts", "../../node_modules/@tabler/icons-react/src/icons/IconTrash.ts", "../../node_modules/@tabler/icons-react/src/icons/IconUserSquare.ts", "../../node_modules/@tabler/icons-react/src/icons/IconX.ts", "../../@medplum/react/src/Loading/Loading.tsx", "../../@medplum/react/src/AppShell/AppShell.module.css", "../../@medplum/react/src/AppShell/Header.tsx", "../../node_modules/clsx/dist/clsx.mjs", "../../@medplum/react/src/ResourceAvatar/ResourceAvatar.tsx", "../../@medplum/react/src/MedplumLink/MedplumLink.tsx", "../../@medplum/react/src/utils/dom.ts", "../../@medplum/react/src/ResourceAvatar/ResourceAvatar.utils.ts", "../../@medplum/react/src/AppShell/Header.module.css", "../../@medplum/react/src/AppShell/HeaderDropdown.tsx", "../../@medplum/react/src/HumanNameDisplay/HumanNameDisplay.tsx", "../../@medplum/react/src/AppShell/HeaderSearchInput.tsx", "../../@medplum/react/src/AsyncAutocomplete/AsyncAutocomplete.tsx", "../../@medplum/react/src/AsyncAutocomplete/AsyncAutocomplete.utils.ts", "../../@medplum/react/src/AppShell/HeaderSearchInput.module.css", "../../@medplum/react/src/AppShell/Navbar.tsx", "../../@medplum/react/src/BookmarkDialog/BookmarkDialog.tsx", "../../@medplum/react/src/Form/FormUtils.ts", "../../@medplum/react/src/Form/Form.tsx", "../../@medplum/react/src/ResourceTypeInput/ResourceTypeInput.tsx", "../../@medplum/react/src/CodeInput/CodeInput.tsx", "../../@medplum/react/src/ValueSetAutocomplete/ValueSetAutocomplete.tsx", "../../@medplum/react/src/AppShell/Navbar.module.css", "../../@medplum/react/src/AttachmentDisplay/AttachmentDisplay.tsx", "../../@medplum/react/src/DescriptionList/DescriptionList.module.css", "../../@medplum/react/src/DescriptionList/DescriptionList.tsx", "../../@medplum/react/src/AttachmentArrayDisplay/AttachmentArrayDisplay.tsx", "../../@medplum/react/src/AttachmentArrayInput/AttachmentArrayInput.tsx", "../../@medplum/react/src/AttachmentButton/AttachmentButton.tsx", "../../@medplum/react/src/AttachmentInput/AttachmentInput.tsx", "../../@medplum/react/src/BackboneElementDisplay/BackboneElementDisplay.tsx", "../../@medplum/react/src/ResourcePropertyDisplay/ResourcePropertyDisplay.tsx", "../../@medplum/react/src/CodeableConceptDisplay/CodeableConceptDisplay.tsx", "../../@medplum/react/src/CodingDisplay/CodingDisplay.tsx", "../../@medplum/react/src/ContactPointDisplay/ContactPointDisplay.tsx", "../../@medplum/react/src/ContactDetailDisplay/ContactDetailDisplay.tsx", "../../@medplum/react/src/IdentifierDisplay/IdentifierDisplay.tsx", "../../@medplum/react/src/MoneyDisplay/MoneyDisplay.tsx", "../../@medplum/react/src/QuantityDisplay/QuantityDisplay.tsx", "../../@medplum/react/src/RangeDisplay/RangeDisplay.tsx", "../../@medplum/react/src/RatioDisplay/RatioDisplay.tsx", "../../@medplum/react/src/ReferenceDisplay/ReferenceDisplay.tsx", "../../@medplum/react/src/ResourceArrayDisplay/ResourceArrayDisplay.tsx", "../../@medplum/react/src/ResourceArrayInput/ResourceArrayInput.utils.ts", "../../@medplum/react/src/SliceDisplay/SliceDisplay.tsx", "../../@medplum/react/src/utils/maybeWrapWithContext.tsx", "../../@medplum/react/src/ExtensionDisplay/ExtensionDisplay.tsx", "../../@medplum/react/src/ResourcePropertyDisplay/ResourcePropertyDisplay.utils.ts", "../../@medplum/react/src/BackboneElementInput/BackboneElementInput.tsx", "../../@medplum/react/src/ElementsInput/ElementsInput.tsx", "../../@medplum/react/src/CheckboxFormSection/CheckboxFormSection.tsx", "../../@medplum/react/src/utils/maybeWrapWithTooltip.tsx", "../../@medplum/react/src/FormSection/FormSection.module.css", "../../@medplum/react/src/FormSection/FormSection.tsx", "../../@medplum/react/src/utils/outcomes.ts", "../../@medplum/react/src/ResourceForm/ResourceForm.utils.ts", "../../@medplum/react/src/ResourcePropertyInput/ResourcePropertyInput.tsx", "../../@medplum/react/src/CodeableConceptInput/CodeableConceptInput.tsx", "../../@medplum/react/src/CodingInput/CodingInput.tsx", "../../@medplum/react/src/ContactDetailInput/ContactDetailInput.tsx", "../../@medplum/react/src/ContactPointInput/ContactPointInput.tsx", "../../@medplum/react/src/DateTimeInput/DateTimeInput.tsx", "../../@medplum/react/src/DateTimeInput/DateTimeInput.utils.ts", "../../@medplum/react/src/ExtensionInput/ExtensionInput.tsx", "../../@medplum/react/src/HumanNameInput/HumanNameInput.tsx", "../../@medplum/react/src/IdentifierInput/IdentifierInput.tsx", "../../@medplum/react/src/MoneyInput/MoneyInput.tsx", "../../@medplum/react/src/PeriodInput/PeriodInput.tsx", "../../@medplum/react/src/QuantityInput/QuantityInput.tsx", "../../@medplum/react/src/RangeInput/RangeInput.tsx", "../../@medplum/react/src/RatioInput/RatioInput.tsx", "../../@medplum/react/src/ReferenceInput/ReferenceInput.tsx", "../../@medplum/react/src/ResourceInput/ResourceInput.tsx", "../../@medplum/react/src/ResourceArrayInput/ResourceArrayInput.tsx", "../../@medplum/react/src/SliceInput/SliceInput.tsx", "../../@medplum/react/src/ResourceArrayInput/ResourceArrayInput.module.css", "../../@medplum/react/src/buttons/ArrayAddButton.tsx", "../../@medplum/react/src/buttons/ArrayRemoveButton.tsx", "../../@medplum/react/src/ResourcePropertyInput/ResourcePropertyInput.utils.ts", "../../@medplum/react/src/SensitiveTextarea/SensitiveTextarea.tsx", "../../@medplum/react/src/TimingInput/TimingInput.tsx", "../../@medplum/react/src/CalendarInput/CalendarInput.tsx", "../../@medplum/react/src/CalendarInput/CalendarInput.module.css", "../../@medplum/react/src/CalendarInput/CalendarInput.utils.ts", "../../@medplum/react/src/Container/Container.tsx", "../../@medplum/react/src/Container/Container.module.css", "../../@medplum/react/src/ResourceTimeline/ResourceTimeline.tsx", "../../@medplum/react/src/DiagnosticReportDisplay/DiagnosticReportDisplay.tsx", "../../@medplum/react/src/NoteDisplay/NoteDisplay.tsx", "../../@medplum/react/src/NoteDisplay/NoteDisplay.module.css", "../../@medplum/react/src/ResourceBadge/ResourceBadge.tsx", "../../@medplum/react/src/ResourceName/ResourceName.tsx", "../../@medplum/react/src/StatusBadge/StatusBadge.tsx", "../../@medplum/react/src/DiagnosticReportDisplay/DiagnosticReportDisplay.module.css", "../../@medplum/react/src/Panel/Panel.tsx", "../../@medplum/react/src/Panel/Panel.module.css", "../../@medplum/react/src/ResourceDiffTable/ResourceDiffTable.tsx", "../../@medplum/react/src/ResourceDiffTable/ResourceDiffTable.module.css", "../../@medplum/react/src/ResourceTable/ResourceTable.tsx", "../../@medplum/react/src/Timeline/Timeline.tsx", "../../@medplum/react/src/Timeline/Timeline.module.css", "../../@medplum/react/src/utils/date.ts", "../../@medplum/react/src/ResourceTimeline/ResourceTimeline.module.css", "../../@medplum/react/src/DefaultResourceTimeline/DefaultResourceTimeline.tsx", "../../@medplum/react/src/Document/Document.tsx", "../../@medplum/react/src/EncounterTimeline/EncounterTimeline.tsx", "../../@medplum/react/src/FhirPathTable/FhirPathTable.tsx", "../../@medplum/react/src/FhirPathDisplay/FhirPathDisplay.tsx", "../../@medplum/react/src/SearchControl/SearchControl.tsx", "../../@medplum/react/src/OperationOutcomeAlert/OperationOutcomeAlert.tsx", "../../@medplum/react/src/SearchExportDialog/SearchExportDialog.tsx", "../../@medplum/react/src/SearchFieldEditor/SearchFieldEditor.tsx", "../../@medplum/react/src/SearchControl/SearchUtils.tsx", "../../@medplum/react/src/SearchFilterEditor/SearchFilterEditor.tsx", "../../@medplum/react/src/SearchFilterValueInput/SearchFilterValueInput.tsx", "../../@medplum/react/src/SearchFilterValueDialog/SearchFilterValueDialog.tsx", "../../@medplum/react/src/SearchFilterValueDisplay/SearchFilterValueDisplay.tsx", "../../@medplum/react/src/SearchPopupMenu/SearchPopupMenu.tsx", "../../@medplum/react/src/SearchControl/SearchControl.module.css", "../../@medplum/react/src/SearchControl/SearchControlField.ts", "../../@medplum/react/src/Logo/Logo.tsx", "../../@medplum/react/src/MeasureReportDisplay/MeasureReportDisplay.tsx", "../../@medplum/react/src/MeasureReportDisplay/MeasureReportGroupDisplay/MeasureReportGroupDisplay.tsx", "../../@medplum/react/src/NotificationIcon/NotificationIcon.tsx", "../../@medplum/react/src/PatientSummary/PatientSummary.tsx", "../../@medplum/react/src/PatientSummary/Allergies.tsx", "../../@medplum/react/src/PatientSummary/AllergyDialog.tsx", "../../@medplum/react/src/PatientSummary/ConceptBadge.tsx", "../../@medplum/react/src/PatientSummary/Medications.tsx", "../../@medplum/react/src/PatientSummary/MedicationDialog.tsx", "../../@medplum/react/src/PatientSummary/ProblemList.tsx", "../../@medplum/react/src/PatientSummary/ConditionDialog.tsx", "../../@medplum/react/src/PatientSummary/SexualOrientation.tsx", "../../@medplum/react/src/PatientSummary/SmokingStatus.tsx", "../../@medplum/react/src/PatientSummary/Vitals.tsx", "../../@medplum/react/src/PatientSummary/Vitals.utils.ts", "../../@medplum/react/src/PatientTimeline/PatientTimeline.tsx", "../../@medplum/react/src/PlanDefinitionBuilder/PlanDefinitionBuilder.tsx", "../../@medplum/react/src/PlanDefinitionBuilder/PlanDefinitionBuilder.module.css", "../../@medplum/react/src/QuestionnaireBuilder/QuestionnaireBuilder.tsx", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireFormItem/QuestionnaireFormItem.tsx", "../../@medplum/react/src/utils/questionnaire.ts", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireForm.context.ts", "../../@medplum/react/src/QuestionnaireBuilder/QuestionnaireBuilder.module.css", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireForm.tsx", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireFormComponents/QuestionnaireFormPageSequence.tsx", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireFormItem/QuestionnaireRepeatableItem.tsx", "../../@medplum/react/src/QuestionnaireForm/QuestionnaireFormComponents/QuestionnaireFormGroup.tsx", "../../@medplum/react/src/ReferenceRangeEditor/ReferenceRangeEditor.tsx", "../../@medplum/react/src/ReferenceRangeEditor/ReferenceRangeEditor.module.css", "../../@medplum/react/src/RequestGroupDisplay/RequestGroupDisplay.tsx", "../../@medplum/react/src/ResourceBlame/ResourceBlame.tsx", "../../@medplum/react/src/utils/blame.ts", "../../@medplum/react/src/utils/diff.ts", "../../@medplum/react/src/ResourceBlame/ResourceBlame.module.css", "../../@medplum/react/src/ResourceBlame/ResourceBlame.utils.ts", "../../@medplum/react/src/ResourceDiff/ResourceDiff.tsx", "../../@medplum/react/src/ResourceDiff/ResourceDiff.module.css", "../../@medplum/react/src/ResourceForm/ResourceForm.tsx", "../../@medplum/react/src/ResourceForm/ResourceForm.module.css", "../../@medplum/react/src/ResourceHistoryTable/ResourceHistoryTable.tsx", "../../@medplum/react/src/Scheduler/Scheduler.tsx", "../../@medplum/react/src/Scheduler/Scheduler.module.css", "../../@medplum/react/src/ServiceRequestTimeline/ServiceRequestTimeline.tsx", "../../@medplum/react/src/SmartAppLaunchLink/SmartAppLaunchLink.tsx", "../../@medplum/react/src/auth/RegisterForm.tsx", "../../@medplum/react/src/auth/NewProjectForm.tsx", "../../@medplum/react/src/auth/NewUserForm.tsx", "../../@medplum/react/src/GoogleButton/GoogleButton.tsx", "../../@medplum/react/src/utils/script.ts", "../../@medplum/react/src/GoogleButton/GoogleButton.utils.ts", "../../@medplum/react/src/utils/recaptcha.ts", "../../@medplum/react/src/auth/SignInForm.tsx", "../../@medplum/react/src/auth/AuthenticationForm.tsx", "../../@medplum/react/src/auth/ChooseProfileForm.tsx", "../../@medplum/react/src/auth/ChooseScopeForm.tsx", "../../@medplum/react/src/auth/MfaForm.tsx", "../../@medplum/react/src/chat/BaseChat/BaseChat.tsx", "../../@medplum/react/src/chat/BaseChat/BaseChat.module.css", "../../@medplum/react/src/chat/ChatModal/ChatModal.tsx", "../../@medplum/react/src/chat/ChatModal/ChatModal.module.css", "../../@medplum/react/src/chat/ThreadChat/ThreadChat.tsx", "../../@mantine/store/src/store.ts", "../../@mantine/notifications/src/notifications.store.ts", "../../@babel/runtime/helpers/esm/setPrototypeOf.js", "../../@babel/runtime/helpers/esm/inheritsLoose.js", "../../react-transition-group/esm/CSSTransition.js", "../../dom-helpers/esm/hasClass.js", "../../dom-helpers/esm/addClass.js", "../../dom-helpers/esm/removeClass.js", "../../react-transition-group/esm/Transition.js", "../../react-transition-group/esm/config.js", "../../react-transition-group/esm/utils/PropTypes.js", "../../react-transition-group/esm/TransitionGroupContext.js", "../../react-transition-group/esm/utils/reflow.js", "../../react-transition-group/esm/ReplaceTransition.js", "../../@babel/runtime/helpers/esm/assertThisInitialized.js", "../../react-transition-group/esm/TransitionGroup.js", "../../react-transition-group/esm/utils/ChildMapping.js", "../../react-transition-group/esm/SwitchTransition.js", "../../@mantine/notifications/src/get-grouped-notifications/get-grouped-notifications.ts", "../../@mantine/notifications/src/get-notification-state-styles.ts", "../../@mantine/notifications/src/get-auto-close/get-auto-close.ts", "../../@mantine/notifications/src/NotificationContainer.tsx", "../../@mantine/notifications/esm/Notifications.module.css.mjs", "../../@mantine/notifications/src/Notifications.tsx"],
  "sourcesContent": ["/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", "import { MedplumClient, MedplumClientEventMap } from '@medplum/core';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { MedplumNavigateFunction, reactContext } from './MedplumProvider.context';\n\nexport interface MedplumProviderProps {\n  readonly medplum: MedplumClient;\n  readonly navigate?: MedplumNavigateFunction;\n  readonly children: ReactNode;\n}\n\nconst EVENTS_TO_TRACK = [\n  'change',\n  'storageInitialized',\n  'storageInitFailed',\n  'profileRefreshing',\n  'profileRefreshed',\n] satisfies (keyof MedplumClientEventMap)[];\n\n/**\n * The MedplumProvider component provides Medplum context state.\n *\n * Medplum context includes:\n *   1) medplum - Medplum client library\n *   2) profile - The current user profile (if signed in)\n * @param props - The MedplumProvider React props.\n * @returns The MedplumProvider React node.\n */\nexport function MedplumProvider(props: MedplumProviderProps): JSX.Element {\n  const medplum = props.medplum;\n  const navigate = props.navigate ?? defaultNavigate;\n\n  const [state, setState] = useState({\n    profile: medplum.getProfile(),\n    loading: medplum.isLoading(),\n  });\n\n  useEffect(() => {\n    function eventListener(): void {\n      setState((s) => ({\n        ...s,\n        profile: medplum.getProfile(),\n        loading: medplum.isLoading(),\n      }));\n    }\n\n    for (const event of EVENTS_TO_TRACK) {\n      medplum.addEventListener(event, eventListener);\n    }\n    return () => {\n      for (const event of EVENTS_TO_TRACK) {\n        medplum.removeEventListener(event, eventListener);\n      }\n    };\n  }, [medplum]);\n\n  const medplumContext = useMemo(\n    () => ({\n      ...state,\n      medplum,\n      navigate,\n    }),\n    [state, medplum, navigate]\n  );\n\n  return <reactContext.Provider value={medplumContext}>{props.children}</reactContext.Provider>;\n}\n\n/**\n * The default \"navigate\" function which simply uses window.location.href.\n * @param path - The path to navigate to.\n */\nfunction defaultNavigate(path: string): void {\n  window.location.assign(path);\n}\n", "import { MedplumClient, ProfileResource } from '@medplum/core';\nimport { createContext, useContext } from 'react';\n\nexport const reactContext = createContext(undefined as MedplumContext | undefined);\n\nexport type MedplumNavigateFunction = (path: string) => void;\n\nexport interface MedplumContext {\n  medplum: MedplumClient;\n  navigate: MedplumNavigateFunction;\n  profile?: ProfileResource;\n  loading: boolean;\n}\n\n/**\n * Returns the MedplumContext instance.\n * @returns The MedplumContext instance.\n */\nexport function useMedplumContext(): MedplumContext {\n  return useContext(reactContext) as MedplumContext;\n}\n\n/**\n * Returns the MedplumClient instance.\n * This is a shortcut for useMedplumContext().medplum.\n * @returns The MedplumClient instance.\n */\nexport function useMedplum(): MedplumClient {\n  return useMedplumContext().medplum;\n}\n\n/**\n * Returns the Medplum navigate function.\n * @returns The Medplum navigate function.\n */\nexport function useMedplumNavigate(): MedplumNavigateFunction {\n  return useMedplumContext().navigate;\n}\n\n/**\n * Returns the current Medplum user profile (if signed in).\n * This is a shortcut for useMedplumContext().profile.\n * @returns The current user profile.\n */\nexport function useMedplumProfile(): ProfileResource | undefined {\n  return useMedplumContext().profile;\n}\n", "import { useMemo } from 'react';\n\n// Maintain a cache of urls to avoid unnecessary re-download of attachments\n// The following is a workaround for the fact that each request to a resource containing a Binary data reference\n// returns a NEW signed S3 URL for each bypassing the native browser caching mechanism\n// resulting in unnecessary bandwidth consumption.\n// https://www.medplum.com/docs/fhir-datastore/binary-data#consuming-a-fhir-binary-in-an-application\n// https://github.com/medplum/medplum/issues/3815\n\n// The S3 presigned URLs expire after 1 hour with the default configuration and hard refreshes are not uncommon even in SPAs so this\n// could be a good way to get additional cache hits\n// This would require additional logic for initialization, saving, and purging of expired keys\nconst urls = new Map<string, string>();\n\nexport const useCachedBinaryUrl = (binaryUrl: string | undefined): string | undefined => {\n  return useMemo(() => {\n    if (!binaryUrl) {\n      return undefined;\n    }\n\n    const binaryResourceUrl = binaryUrl.split('?')[0];\n    if (!binaryResourceUrl) {\n      return binaryUrl;\n    }\n\n    // Check if the binaryUrl is a presigned S3 URL\n    let binaryUrlSearchParams: URLSearchParams;\n    try {\n      binaryUrlSearchParams = new URLSearchParams(new URL(binaryUrl).search);\n    } catch (_err) {\n      return binaryUrl;\n    }\n\n    if (!binaryUrlSearchParams.has('Key-Pair-Id') || !binaryUrlSearchParams.has('Signature')) {\n      return binaryUrl;\n    }\n\n    // https://stackoverflow.com/questions/23929145/how-to-test-if-a-given-time-stamp-is-in-seconds-or-milliseconds\n    const binaryUrlExpires = binaryUrlSearchParams.get('Expires');\n    if (!binaryUrlExpires || binaryUrlExpires.length > 13) {\n      // Expires is expected to be in seconds, not milliseconds\n      return binaryUrl;\n    }\n\n    const cachedUrl = urls.get(binaryResourceUrl);\n    if (cachedUrl) {\n      const searchParams = new URLSearchParams(new URL(cachedUrl).search);\n\n      // This is fairly brittle as it relies on the current structure of the Medplum returned URL\n      const expires = searchParams.get('Expires');\n\n      // `expires` is in seconds, Date.now() is in ms\n      // Add padding to mitigate expiration between time of check and time of use\n      if (expires && parseInt(expires, 10) * 1000 - 5_000 > Date.now()) {\n        return cachedUrl;\n      }\n    }\n\n    urls.set(binaryResourceUrl, binaryUrl);\n    return binaryUrl;\n  }, [binaryUrl]);\n};\n", "import { useEffect, useRef } from 'react';\n\n/**\n * React Hook to keep track of the passed-in value from the previous render of the containing component.\n * @param value - The value to track.\n * @returns The value passed in from the previous render.\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n", "import { deepEquals, isReference, isResource, MedplumClient, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, Reference, Resource } from '@medplum/fhirtypes';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider.context';\n\n/**\n * React Hook to use a FHIR reference.\n * Handles the complexity of resolving references and caching resources.\n * @param value - The resource or reference to resource.\n * @param setOutcome - Optional callback to set the OperationOutcome.\n * @returns The resolved resource.\n */\nexport function useResource<T extends Resource>(\n  value: Reference<T> | Partial<T> | undefined,\n  setOutcome?: (outcome: OperationOutcome) => void\n): T | undefined {\n  const medplum = useMedplum();\n  const [resource, setResource] = useState<T | undefined>(() => {\n    return getInitialResource(medplum, value);\n  });\n\n  const setResourceIfChanged = useCallback(\n    (r: T | undefined) => {\n      if (!deepEquals(r, resource)) {\n        setResource(r);\n      }\n    },\n    [resource]\n  );\n\n  useEffect(() => {\n    let subscribed = true;\n\n    const newValue = getInitialResource(medplum, value);\n    if (!newValue && isReference(value)) {\n      medplum\n        .readReference(value as Reference<T>)\n        .then((r) => {\n          if (subscribed) {\n            setResourceIfChanged(r);\n          }\n        })\n        .catch((err) => {\n          if (subscribed) {\n            setResourceIfChanged(undefined);\n            if (setOutcome) {\n              setOutcome(normalizeOperationOutcome(err));\n            }\n          }\n        });\n    } else {\n      setResourceIfChanged(newValue);\n    }\n\n    return (() => (subscribed = false)) as () => void;\n  }, [medplum, value, setResourceIfChanged, setOutcome]);\n\n  return resource;\n}\n\n/**\n * Returns the initial resource value based on the input value.\n * If the input value is a resource, returns the resource.\n * If the input value is a reference to a resource available in the cache, returns the resource.\n * Otherwise, returns undefined.\n * @param medplum - The medplum client.\n * @param value - The resource or reference to resource.\n * @returns An initial resource if available; undefined otherwise.\n */\nfunction getInitialResource<T extends Resource>(\n  medplum: MedplumClient,\n  value: Reference<T> | Partial<T> | undefined\n): T | undefined {\n  if (value) {\n    if (isResource(value)) {\n      return value as T;\n    }\n\n    if (isReference(value)) {\n      return medplum.getCachedReference(value as Reference<T>);\n    }\n  }\n\n  return undefined;\n}\n", "import { allOk, normalizeOperationOutcome, QueryTypes, ResourceArray } from '@medplum/core';\nimport { Bundle, ExtractResource, OperationOutcome, ResourceType } from '@medplum/fhirtypes';\nimport { useEffect, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider.context';\nimport { useDebouncedValue } from '../useDebouncedValue/useDebouncedValue';\n\ntype SearchFn = 'search' | 'searchOne' | 'searchResources';\nexport type SearchOptions = { debounceMs?: number };\n\nconst DEFAULT_DEBOUNCE_MS = 250;\n\n/**\n * React hook for searching FHIR resources.\n *\n * This is a convenience hook for calling the MedplumClient.search() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @param options - Optional options for configuring the search.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearch<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes,\n  options?: SearchOptions\n): [Bundle<ExtractResource<K>> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, Bundle<ExtractResource<K>>>('search', resourceType, query, options);\n}\n\n/**\n * React hook for searching for a single FHIR resource.\n *\n * This is a convenience hook for calling the MedplumClient.searchOne() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @param options - Optional options for configuring the search.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearchOne<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes,\n  options?: SearchOptions\n): [ExtractResource<K> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, ExtractResource<K>>('searchOne', resourceType, query, options);\n}\n\n/**\n * React hook for searching for an array of FHIR resources.\n *\n * This is a convenience hook for calling the MedplumClient.searchResources() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @param options - Optional options for configuring the search.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearchResources<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes,\n  options?: SearchOptions\n): [ResourceArray<ExtractResource<K>> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, ResourceArray<ExtractResource<K>>>('searchResources', resourceType, query, options);\n}\n\nfunction useSearchImpl<K extends ResourceType, SearchReturnType>(\n  searchFn: SearchFn,\n  resourceType: K,\n  query: QueryTypes | undefined,\n  options?: SearchOptions\n): [SearchReturnType | undefined, boolean, OperationOutcome | undefined] {\n  const medplum = useMedplum();\n  const [lastSearchKey, setLastSearchKey] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [result, setResult] = useState<SearchReturnType>();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n\n  const searchKey = medplum.fhirSearchUrl(resourceType, query).toString();\n  const [debouncedSearchKey] = useDebouncedValue(searchKey, options?.debounceMs ?? DEFAULT_DEBOUNCE_MS, {\n    leading: true,\n  });\n\n  useEffect(() => {\n    if (debouncedSearchKey !== lastSearchKey) {\n      setLastSearchKey(debouncedSearchKey);\n      medplum[searchFn](resourceType, query)\n        .then((res) => {\n          setLoading(false);\n          setResult(res as SearchReturnType);\n          setOutcome(allOk);\n        })\n        .catch((err) => {\n          setLoading(false);\n          setResult(undefined);\n          setOutcome(normalizeOperationOutcome(err));\n        });\n    }\n  }, [medplum, searchFn, resourceType, query, lastSearchKey, debouncedSearchKey]);\n\n  return [result, loading, outcome];\n}\n", "/*\n  This hook was forked from: https://github.com/mantinedev/mantine/blob/fbcee929e0b11782092f48c1e7af2a1d1c878823/packages/%40mantine/hooks/src/use-debounced-value/use-debounced-value.ts\n  and has the following license:\n\n  MIT License\n\n  Copyright (c) 2021 Vitaly Rtishchev\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport type UseDebouncedValueOptions = {\n  /** Whether the first update to `value` should be immediate or not */\n  leading?: boolean;\n};\n\n/**\n * This hook allows users to debounce an incoming value by a specified number of milliseconds.\n *\n * Users can also specify whether the first update to `value` in a sequence of rapid updates should be immediate, by specifying `leading: true` in the options.\n * The default value for `leading` is `false`.\n *\n * The return value is a tuple containing the debounced value at `arr[0]` and a function to cancel the pending debounced value change at `arr[1]`.\n *\n * @param value - The value to debounce.\n * @param waitMs - How long in milliseconds should.\n * @param options - Optional options for configuring the debounce.\n * @returns An array tuple of `[debouncedValue, cancelFn]`.\n */\nexport function useDebouncedValue<T = any>(\n  value: T,\n  waitMs: number,\n  options: UseDebouncedValueOptions = { leading: false }\n): [T, () => void] {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const mountedRef = useRef(false);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const cooldownRef = useRef(false);\n\n  const cancel = useCallback(() => window.clearTimeout(timeoutRef.current), []);\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setDebouncedValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = setTimeout(() => {\n          cooldownRef.current = false;\n          setDebouncedValue(value);\n        }, waitMs);\n      }\n    }\n  }, [value, options.leading, waitMs, cancel]);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, [cancel]);\n\n  return [debouncedValue, cancel] as const;\n}\n", "import { SubscriptionEmitter, SubscriptionEventMap, deepEquals } from '@medplum/core';\nimport { Bundle, Subscription } from '@medplum/fhirtypes';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider.context';\n\nconst SUBSCRIPTION_DEBOUNCE_MS = 3000;\n\nexport type UseSubscriptionOptions = {\n  subscriptionProps?: Partial<Subscription>;\n  onWebSocketOpen?: () => void;\n  onWebSocketClose?: () => void;\n  onSubscriptionConnect?: (subscriptionId: string) => void;\n  onSubscriptionDisconnect?: (subscriptionId: string) => void;\n  onError?: (err: Error) => void;\n};\n\n/**\n * Creates an in-memory `Subscription` resource with the given criteria on the Medplum server and calls the given callback when an event notification is triggered by a resource interaction over a WebSocket connection.\n *\n * Subscriptions created with this hook are lightweight, share a single WebSocket connection, and are automatically untracked and cleaned up when the containing component is no longer mounted.\n *\n * @param criteria - The FHIR search criteria to subscribe to.\n * @param callback - The callback to call when a notification event `Bundle` for this `Subscription` is received.\n * @param options - Optional options used to configure the created `Subscription`. See {@link UseSubscriptionOptions}\n *\n * --------------------------------------------------------------------------------------------------------------------------------\n *\n * `options` contains the following properties, all of which are optional:\n * - `subscriptionProps` - Allows the caller to pass a `Partial<Subscription>` to use as part of the creation\n * of the `Subscription` resource for this subscription. It enables the user namely to pass things like the `extension` property and to create\n * the `Subscription` with extensions such the {@link https://www.medplum.com/docs/subscriptions/subscription-extensions#interactions | Supported Interaction} extension which would enable to listen for `create` or `update` only events.\n * - `onWebsocketOpen` - Called when the WebSocket connection is established with Medplum server.\n * - `onWebsocketClose` - Called when the WebSocket connection disconnects.\n * - `onSubscriptionConnect` - Called when the corresponding subscription starts to receive updates after the subscription has been initialized and connected to.\n * - `onSubscriptionDisconnect` - Called when the corresponding subscription is destroyed and stops receiving updates from the server.\n * - `onError` - Called whenever an error occurs during the lifecycle of the managed subscription.\n */\nexport function useSubscription(\n  criteria: string | undefined,\n  callback: (bundle: Bundle) => void,\n  options?: UseSubscriptionOptions\n): void {\n  const medplum = useMedplum();\n  const [emitter, setEmitter] = useState<SubscriptionEmitter>();\n  // We don't memoize the entire options object since it contains callbacks and if the callbacks change identity, we don't want to trigger a resubscribe to criteria\n  const [memoizedSubProps, setMemoizedSubProps] = useState(options?.subscriptionProps);\n\n  const listeningRef = useRef(false);\n  const unsubTimerRef = useRef<ReturnType<typeof setTimeout>>();\n\n  const prevCriteriaRef = useRef<string | undefined>();\n  const prevMemoizedSubPropsRef = useRef<UseSubscriptionOptions['subscriptionProps']>();\n\n  const callbackRef = useRef<typeof callback>();\n  callbackRef.current = callback;\n\n  const onWebSocketOpenRef = useRef<UseSubscriptionOptions['onWebSocketOpen']>();\n  onWebSocketOpenRef.current = options?.onWebSocketOpen;\n\n  const onWebSocketCloseRef = useRef<UseSubscriptionOptions['onWebSocketClose']>();\n  onWebSocketCloseRef.current = options?.onWebSocketClose;\n\n  const onSubscriptionConnectRef = useRef<UseSubscriptionOptions['onSubscriptionConnect']>();\n  onSubscriptionConnectRef.current = options?.onSubscriptionConnect;\n\n  const onSubscriptionDisconnectRef = useRef<UseSubscriptionOptions['onSubscriptionDisconnect']>();\n  onSubscriptionDisconnectRef.current = options?.onSubscriptionDisconnect;\n\n  const onErrorRef = useRef<UseSubscriptionOptions['onError']>();\n  onErrorRef.current = options?.onError;\n\n  useEffect(() => {\n    // Deep equals checks referential equality first\n    if (!deepEquals(options?.subscriptionProps, memoizedSubProps)) {\n      setMemoizedSubProps(options?.subscriptionProps);\n    }\n  }, [memoizedSubProps, options]);\n\n  useEffect(() => {\n    if (unsubTimerRef.current) {\n      clearTimeout(unsubTimerRef.current);\n      unsubTimerRef.current = undefined;\n    }\n\n    let shouldSubscribe = false;\n    if (prevCriteriaRef.current !== criteria || !deepEquals(prevMemoizedSubPropsRef.current, memoizedSubProps)) {\n      shouldSubscribe = true;\n    }\n\n    if (shouldSubscribe && prevCriteriaRef.current) {\n      medplum.unsubscribeFromCriteria(prevCriteriaRef.current, prevMemoizedSubPropsRef.current);\n    }\n\n    // Set prev criteria and options to latest after checking them\n    prevCriteriaRef.current = criteria;\n    prevMemoizedSubPropsRef.current = memoizedSubProps;\n\n    // We do this after as to not immediately trigger re-render\n    if (shouldSubscribe && criteria) {\n      setEmitter(medplum.subscribeToCriteria(criteria, memoizedSubProps));\n    } else if (!criteria) {\n      setEmitter(undefined);\n    }\n\n    return () => {\n      unsubTimerRef.current = setTimeout(() => {\n        setEmitter(undefined);\n        if (criteria) {\n          medplum.unsubscribeFromCriteria(criteria, memoizedSubProps);\n        }\n      }, SUBSCRIPTION_DEBOUNCE_MS);\n    };\n  }, [medplum, criteria, memoizedSubProps]);\n\n  const emitterCallback = useCallback((event: SubscriptionEventMap['message']) => {\n    callbackRef.current?.(event.payload);\n  }, []);\n\n  const onWebSocketOpen = useCallback(() => {\n    onWebSocketOpenRef.current?.();\n  }, []);\n\n  const onWebSocketClose = useCallback(() => {\n    onWebSocketCloseRef.current?.();\n  }, []);\n\n  const onSubscriptionConnect = useCallback((event: SubscriptionEventMap['connect']) => {\n    onSubscriptionConnectRef.current?.(event.payload.subscriptionId);\n  }, []);\n\n  const onSubscriptionDisconnect = useCallback((event: SubscriptionEventMap['disconnect']) => {\n    onSubscriptionDisconnectRef.current?.(event.payload.subscriptionId);\n  }, []);\n\n  const onError = useCallback((event: SubscriptionEventMap['error']) => {\n    onErrorRef.current?.(event.payload);\n  }, []);\n\n  useEffect(() => {\n    if (!emitter) {\n      return () => undefined;\n    }\n    if (!listeningRef.current) {\n      emitter.addEventListener('message', emitterCallback);\n      emitter.addEventListener('open', onWebSocketOpen);\n      emitter.addEventListener('close', onWebSocketClose);\n      emitter.addEventListener('connect', onSubscriptionConnect);\n      emitter.addEventListener('disconnect', onSubscriptionDisconnect);\n      emitter.addEventListener('error', onError);\n      listeningRef.current = true;\n    }\n    return () => {\n      listeningRef.current = false;\n      emitter.removeEventListener('message', emitterCallback);\n      emitter.removeEventListener('open', onWebSocketOpen);\n      emitter.removeEventListener('close', onWebSocketClose);\n      emitter.removeEventListener('connect', onSubscriptionConnect);\n      emitter.removeEventListener('disconnect', onSubscriptionDisconnect);\n      emitter.removeEventListener('error', onError);\n    };\n  }, [\n    emitter,\n    emitterCallback,\n    onWebSocketOpen,\n    onWebSocketClose,\n    onSubscriptionConnect,\n    onSubscriptionDisconnect,\n    onError,\n  ]);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pointer = exports.escapeToken = exports.unescapeToken = void 0;\n/**\nUnescape token part of a JSON Pointer string\n\n`token` should *not* contain any '/' characters.\n\n> Evaluation of each reference token begins by decoding any escaped\n> character sequence.  This is performed by first transforming any\n> occurrence of the sequence '~1' to '/', and then transforming any\n> occurrence of the sequence '~0' to '~'.  By performing the\n> substitutions in this order, an implementation avoids the error of\n> turning '~01' first into '~1' and then into '/', which would be\n> incorrect (the string '~01' correctly becomes '~1' after\n> transformation).\n\nHere's my take:\n\n~1 is unescaped with higher priority than ~0 because it is a lower-order escape character.\nI say \"lower order\" because '/' needs escaping due to the JSON Pointer serialization technique.\nWhereas, '~' is escaped because escaping '/' uses the '~' character.\n*/\nfunction unescapeToken(token) {\n    return token.replace(/~1/g, '/').replace(/~0/g, '~');\n}\nexports.unescapeToken = unescapeToken;\n/** Escape token part of a JSON Pointer string\n\n> '~' needs to be encoded as '~0' and '/'\n> needs to be encoded as '~1' when these characters appear in a\n> reference token.\n\nThis is the exact inverse of `unescapeToken()`, so the reverse replacements must take place in reverse order.\n*/\nfunction escapeToken(token) {\n    return token.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\nexports.escapeToken = escapeToken;\n/**\nJSON Pointer representation\n*/\nvar Pointer = /** @class */ (function () {\n    function Pointer(tokens) {\n        if (tokens === void 0) { tokens = ['']; }\n        this.tokens = tokens;\n    }\n    /**\n    `path` *must* be a properly escaped string.\n    */\n    Pointer.fromJSON = function (path) {\n        var tokens = path.split('/').map(unescapeToken);\n        if (tokens[0] !== '')\n            throw new Error(\"Invalid JSON Pointer: \".concat(path));\n        return new Pointer(tokens);\n    };\n    Pointer.prototype.toString = function () {\n        return this.tokens.map(escapeToken).join('/');\n    };\n    /**\n    Returns an object with 'parent', 'key', and 'value' properties.\n    In the special case that this Pointer's path == \"\",\n    this object will be {parent: null, key: '', value: object}.\n    Otherwise, parent and key will have the property such that parent[key] == value.\n    */\n    Pointer.prototype.evaluate = function (object) {\n        var parent = null;\n        var key = '';\n        var value = object;\n        for (var i = 1, l = this.tokens.length; i < l; i++) {\n            parent = value;\n            key = this.tokens[i];\n            if (key == '__proto__' || key == 'constructor' || key == 'prototype') {\n                continue;\n            }\n            // not sure if this the best way to handle non-existant paths...\n            value = (parent || {})[key];\n        }\n        return { parent: parent, key: key, value: value };\n    };\n    Pointer.prototype.get = function (object) {\n        return this.evaluate(object).value;\n    };\n    Pointer.prototype.set = function (object, value) {\n        var endpoint = this.evaluate(object);\n        if (endpoint.parent) {\n            endpoint.parent[endpoint.key] = value;\n        }\n    };\n    Pointer.prototype.push = function (token) {\n        // mutable\n        this.tokens.push(token);\n    };\n    /**\n    `token` should be a String. It'll be coerced to one anyway.\n  \n    immutable (shallowly)\n    */\n    Pointer.prototype.add = function (token) {\n        var tokens = this.tokens.concat(String(token));\n        return new Pointer(tokens);\n    };\n    return Pointer;\n}());\nexports.Pointer = Pointer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.objectType = exports.hasOwnProperty = void 0;\nexports.hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction objectType(object) {\n    if (object === undefined) {\n        return 'undefined';\n    }\n    if (object === null) {\n        return 'null';\n    }\n    if (Array.isArray(object)) {\n        return 'array';\n    }\n    return typeof object;\n}\nexports.objectType = objectType;\nfunction isNonPrimitive(value) {\n    // loose-equality checking for null is faster than strict checking for each of null/undefined/true/false\n    // checking null first, then calling typeof, is faster than vice-versa\n    return value != null && typeof value == 'object';\n}\n/**\nRecursively copy a value.\n\n@param source - should be a JavaScript primitive, Array, Date, or (plain old) Object.\n@returns copy of source where every Array and Object have been recursively\n         reconstructed from their constituent elements\n*/\nfunction clone(source) {\n    if (!isNonPrimitive(source)) {\n        // short-circuiting is faster than a single return\n        return source;\n    }\n    // x.constructor == Array is the fastest way to check if x is an Array\n    if (source.constructor == Array) {\n        // construction via imperative for-loop is faster than source.map(arrayVsObject)\n        var length_1 = source.length;\n        // setting the Array length during construction is faster than just `[]` or `new Array()`\n        var arrayTarget = new Array(length_1);\n        for (var i = 0; i < length_1; i++) {\n            arrayTarget[i] = clone(source[i]);\n        }\n        return arrayTarget;\n    }\n    // Date\n    if (source.constructor == Date) {\n        var dateTarget = new Date(+source);\n        return dateTarget;\n    }\n    // Object\n    var objectTarget = {};\n    // declaring the variable (with const) inside the loop is faster\n    for (var key in source) {\n        // hasOwnProperty costs a bit of performance, but it's semantically necessary\n        // using a global helper is MUCH faster than calling source.hasOwnProperty(key)\n        if (exports.hasOwnProperty.call(source, key)) {\n            objectTarget[key] = clone(source[key]);\n        }\n    }\n    return objectTarget;\n}\nexports.clone = clone;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffAny = exports.diffObjects = exports.diffArrays = exports.intersection = exports.subtract = exports.isDestructive = void 0;\nvar util_1 = require(\"./util\");\nfunction isDestructive(_a) {\n    var op = _a.op;\n    return op === 'remove' || op === 'replace' || op === 'copy' || op === 'move';\n}\nexports.isDestructive = isDestructive;\n/**\nList the keys in `minuend` that are not in `subtrahend`.\n\nA key is only considered if it is both 1) an own-property (o.hasOwnProperty(k))\nof the object, and 2) has a value that is not undefined. This is to match JSON\nsemantics, where JSON object serialization drops keys with undefined values.\n\n@param minuend Object of interest\n@param subtrahend Object of comparison\n@returns Array of keys that are in `minuend` but not in `subtrahend`.\n*/\nfunction subtract(minuend, subtrahend) {\n    // initialize empty object; we only care about the keys, the values can be anything\n    var obj = {};\n    // build up obj with all the properties of minuend\n    for (var add_key in minuend) {\n        if (util_1.hasOwnProperty.call(minuend, add_key) && minuend[add_key] !== undefined) {\n            obj[add_key] = 1;\n        }\n    }\n    // now delete all the properties of subtrahend from obj\n    // (deleting a missing key has no effect)\n    for (var del_key in subtrahend) {\n        if (util_1.hasOwnProperty.call(subtrahend, del_key) && subtrahend[del_key] !== undefined) {\n            delete obj[del_key];\n        }\n    }\n    // finally, extract whatever keys remain in obj\n    return Object.keys(obj);\n}\nexports.subtract = subtract;\n/**\nList the keys that shared by all `objects`.\n\nThe semantics of what constitutes a \"key\" is described in {@link subtract}.\n\n@param objects Array of objects to compare\n@returns Array of keys that are in (\"own-properties\" of) every object in `objects`.\n*/\nfunction intersection(objects) {\n    var length = objects.length;\n    // prepare empty counter to keep track of how many objects each key occurred in\n    var counter = {};\n    // go through each object and increment the counter for each key in that object\n    for (var i = 0; i < length; i++) {\n        var object = objects[i];\n        for (var key in object) {\n            if (util_1.hasOwnProperty.call(object, key) && object[key] !== undefined) {\n                counter[key] = (counter[key] || 0) + 1;\n            }\n        }\n    }\n    // now delete all keys from the counter that were not seen in every object\n    for (var key in counter) {\n        if (counter[key] < length) {\n            delete counter[key];\n        }\n    }\n    // finally, extract whatever keys remain in the counter\n    return Object.keys(counter);\n}\nexports.intersection = intersection;\nfunction isArrayAdd(array_operation) {\n    return array_operation.op === 'add';\n}\nfunction isArrayRemove(array_operation) {\n    return array_operation.op === 'remove';\n}\nfunction appendArrayOperation(base, operation) {\n    return {\n        // the new operation must be pushed on the end\n        operations: base.operations.concat(operation),\n        cost: base.cost + 1,\n    };\n}\n/**\nCalculate the shortest sequence of operations to get from `input` to `output`,\nusing a dynamic programming implementation of the Levenshtein distance algorithm.\n\nTo get from the input ABC to the output AZ we could just delete all the input\nand say \"insert A, insert Z\" and be done with it. That's what we do if the\ninput is empty. But we can be smarter.\n\n          output\n               A   Z\n               -   -\n          [0]  1   2\ninput A |  1  [0]  1\n      B |  2  [1]  1\n      C |  3   2  [2]\n\n1) start at 0,0 (+0)\n2) keep A (+0)\n3) remove B (+1)\n4) replace C with Z (+1)\n\nIf the `input` (source) is empty, they'll all be in the top row, resulting in an\narray of 'add' operations.\nIf the `output` (target) is empty, everything will be in the left column,\nresulting in an array of 'remove' operations.\n\n@returns A list of add/remove/replace operations.\n*/\nfunction diffArrays(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // set up cost matrix (very simple initialization: just a map)\n    var memo = {\n        '0,0': { operations: [], cost: 0 },\n    };\n    /**\n    Calculate the cheapest sequence of operations required to get from\n    input.slice(0, i) to output.slice(0, j).\n    There may be other valid sequences with the same cost, but none cheaper.\n  \n    @param i The row in the layout above\n    @param j The column in the layout above\n    @returns An object containing a list of operations, along with the total cost\n             of applying them (+1 for each add/remove/replace operation)\n    */\n    function dist(i, j) {\n        // memoized\n        var memo_key = \"\".concat(i, \",\").concat(j);\n        var memoized = memo[memo_key];\n        if (memoized === undefined) {\n            // TODO: this !diff(...).length usage could/should be lazy\n            if (i > 0 && j > 0 && !diff(input[i - 1], output[j - 1], ptr.add(String(i - 1))).length) {\n                // equal (no operations => no cost)\n                memoized = dist(i - 1, j - 1);\n            }\n            else {\n                var alternatives = [];\n                if (i > 0) {\n                    // NOT topmost row\n                    var remove_base = dist(i - 1, j);\n                    var remove_operation = {\n                        op: 'remove',\n                        index: i - 1,\n                    };\n                    alternatives.push(appendArrayOperation(remove_base, remove_operation));\n                }\n                if (j > 0) {\n                    // NOT leftmost column\n                    var add_base = dist(i, j - 1);\n                    var add_operation = {\n                        op: 'add',\n                        index: i - 1,\n                        value: output[j - 1],\n                    };\n                    alternatives.push(appendArrayOperation(add_base, add_operation));\n                }\n                if (i > 0 && j > 0) {\n                    // TABLE MIDDLE\n                    // supposing we replaced it, compute the rest of the costs:\n                    var replace_base = dist(i - 1, j - 1);\n                    // okay, the general plan is to replace it, but we can be smarter,\n                    // recursing into the structure and replacing only part of it if\n                    // possible, but to do so we'll need the original value\n                    var replace_operation = {\n                        op: 'replace',\n                        index: i - 1,\n                        original: input[i - 1],\n                        value: output[j - 1],\n                    };\n                    alternatives.push(appendArrayOperation(replace_base, replace_operation));\n                }\n                // the only other case, i === 0 && j === 0, has already been memoized\n                // the meat of the algorithm:\n                // sort by cost to find the lowest one (might be several ties for lowest)\n                // [4, 6, 7, 1, 2].sort((a, b) => a - b) -> [ 1, 2, 4, 6, 7 ]\n                var best = alternatives.sort(function (a, b) { return a.cost - b.cost; })[0];\n                memoized = best;\n            }\n            memo[memo_key] = memoized;\n        }\n        return memoized;\n    }\n    // handle weird objects masquerading as Arrays that don't have proper length\n    // properties by using 0 for everything but positive numbers\n    var input_length = (isNaN(input.length) || input.length <= 0) ? 0 : input.length;\n    var output_length = (isNaN(output.length) || output.length <= 0) ? 0 : output.length;\n    var array_operations = dist(input_length, output_length).operations;\n    var padded_operations = array_operations.reduce(function (_a, array_operation) {\n        var operations = _a[0], padding = _a[1];\n        if (isArrayAdd(array_operation)) {\n            var padded_index = array_operation.index + 1 + padding;\n            var index_token = padded_index < (input_length + padding) ? String(padded_index) : '-';\n            var operation = {\n                op: array_operation.op,\n                path: ptr.add(index_token).toString(),\n                value: array_operation.value,\n            };\n            // padding++ // maybe only if array_operation.index > -1 ?\n            return [operations.concat(operation), padding + 1];\n        }\n        else if (isArrayRemove(array_operation)) {\n            var operation = {\n                op: array_operation.op,\n                path: ptr.add(String(array_operation.index + padding)).toString(),\n            };\n            // padding--\n            return [operations.concat(operation), padding - 1];\n        }\n        else { // replace\n            var replace_ptr = ptr.add(String(array_operation.index + padding));\n            var replace_operations = diff(array_operation.original, array_operation.value, replace_ptr);\n            return [operations.concat.apply(operations, replace_operations), padding];\n        }\n    }, [[], 0])[0];\n    return padded_operations;\n}\nexports.diffArrays = diffArrays;\nfunction diffObjects(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // if a key is in input but not output -> remove it\n    var operations = [];\n    subtract(input, output).forEach(function (key) {\n        operations.push({ op: 'remove', path: ptr.add(key).toString() });\n    });\n    // if a key is in output but not input -> add it\n    subtract(output, input).forEach(function (key) {\n        operations.push({ op: 'add', path: ptr.add(key).toString(), value: output[key] });\n    });\n    // if a key is in both, diff it recursively\n    intersection([input, output]).forEach(function (key) {\n        operations.push.apply(operations, diff(input[key], output[key], ptr.add(key)));\n    });\n    return operations;\n}\nexports.diffObjects = diffObjects;\n/**\n`diffAny()` returns an empty array if `input` and `output` are materially equal\n(i.e., would produce equivalent JSON); otherwise it produces an array of patches\nthat would transform `input` into `output`.\n\n> Here, \"equal\" means that the value at the target location and the\n> value conveyed by \"value\" are of the same JSON type, and that they\n> are considered equal by the following rules for that type:\n> o  strings: are considered equal if they contain the same number of\n>    Unicode characters and their code points are byte-by-byte equal.\n> o  numbers: are considered equal if their values are numerically\n>    equal.\n> o  arrays: are considered equal if they contain the same number of\n>    values, and if each value can be considered equal to the value at\n>    the corresponding position in the other array, using this list of\n>    type-specific rules.\n> o  objects: are considered equal if they contain the same number of\n>    members, and if each member can be considered equal to a member in\n>    the other object, by comparing their keys (as strings) and their\n>    values (using this list of type-specific rules).\n> o  literals (false, true, and null): are considered equal if they are\n>    the same.\n*/\nfunction diffAny(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // strict equality handles literals, numbers, and strings (a sufficient but not necessary cause)\n    if (input === output) {\n        return [];\n    }\n    var input_type = (0, util_1.objectType)(input);\n    var output_type = (0, util_1.objectType)(output);\n    if (input_type == 'array' && output_type == 'array') {\n        return diffArrays(input, output, ptr, diff);\n    }\n    if (input_type == 'object' && output_type == 'object') {\n        return diffObjects(input, output, ptr, diff);\n    }\n    // at this point we know that input and output are materially different;\n    // could be array -> object, object -> array, boolean -> undefined,\n    // number -> string, or some other combination, but nothing that can be split\n    // up into multiple patches: so `output` must replace `input` wholesale.\n    return [{ op: 'replace', path: ptr.toString(), value: output }];\n}\nexports.diffAny = diffAny;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\nvar pointer_1 = require(\"./pointer\");\nvar util_1 = require(\"./util\");\nvar diff_1 = require(\"./diff\");\nvar MissingError = /** @class */ (function (_super) {\n    __extends(MissingError, _super);\n    function MissingError(path) {\n        var _this = _super.call(this, \"Value required at path: \".concat(path)) || this;\n        _this.path = path;\n        _this.name = 'MissingError';\n        return _this;\n    }\n    return MissingError;\n}(Error));\nexports.MissingError = MissingError;\nvar TestError = /** @class */ (function (_super) {\n    __extends(TestError, _super);\n    function TestError(actual, expected) {\n        var _this = _super.call(this, \"Test failed: \".concat(actual, \" != \").concat(expected)) || this;\n        _this.actual = actual;\n        _this.expected = expected;\n        _this.name = 'TestError';\n        return _this;\n    }\n    return TestError;\n}(Error));\nexports.TestError = TestError;\nfunction _add(object, key, value) {\n    if (Array.isArray(object)) {\n        // `key` must be an index\n        if (key == '-') {\n            object.push(value);\n        }\n        else {\n            var index = parseInt(key, 10);\n            object.splice(index, 0, value);\n        }\n    }\n    else {\n        object[key] = value;\n    }\n}\nfunction _remove(object, key) {\n    if (Array.isArray(object)) {\n        // '-' syntax doesn't make sense when removing\n        var index = parseInt(key, 10);\n        object.splice(index, 1);\n    }\n    else {\n        // not sure what the proper behavior is when path = ''\n        delete object[key];\n    }\n}\n/**\n>  o  If the target location specifies an array index, a new value is\n>     inserted into the array at the specified index.\n>  o  If the target location specifies an object member that does not\n>     already exist, a new member is added to the object.\n>  o  If the target location specifies an object member that does exist,\n>     that member's value is replaced.\n*/\nfunction add(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, (0, util_1.clone)(operation.value));\n    return null;\n}\nexports.add = add;\n/**\n> The \"remove\" operation removes the value at the target location.\n> The target location MUST exist for the operation to be successful.\n*/\nfunction remove(object, operation) {\n    // endpoint has parent, key, and value properties\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    // not sure what the proper behavior is when path = ''\n    _remove(endpoint.parent, endpoint.key);\n    return null;\n}\nexports.remove = remove;\n/**\n> The \"replace\" operation replaces the value at the target location\n> with a new value.  The operation object MUST contain a \"value\" member\n> whose content specifies the replacement value.\n> The target location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to a \"remove\" operation for\n> a value, followed immediately by an \"add\" operation at the same\n> location with the replacement value.\n\nEven more simply, it's like the add operation with an existence check.\n*/\nfunction replace(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === null) {\n        return new MissingError(operation.path);\n    }\n    // this existence check treats arrays as a special case\n    if (Array.isArray(endpoint.parent)) {\n        if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\n            return new MissingError(operation.path);\n        }\n    }\n    else if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    endpoint.parent[endpoint.key] = (0, util_1.clone)(operation.value);\n    return null;\n}\nexports.replace = replace;\n/**\n> The \"move\" operation removes the value at a specified location and\n> adds it to the target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to move the value from.\n> This operation is functionally identical to a \"remove\" operation on\n> the \"from\" location, followed immediately by an \"add\" operation at\n> the target location with the value that was just removed.\n\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\n> location; i.e., a location cannot be moved into one of its children.\n\nTODO: throw if the check described in the previous paragraph fails.\n*/\nfunction move(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _remove(from_endpoint.parent, from_endpoint.key);\n    _add(endpoint.parent, endpoint.key, from_endpoint.value);\n    return null;\n}\nexports.move = move;\n/**\n> The \"copy\" operation copies the value at a specified location to the\n> target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to copy the value from.\n> The \"from\" location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to an \"add\" operation at the\n> target location using the value specified in the \"from\" member.\n\nAlternatively, it's like 'move' without the 'remove'.\n*/\nfunction copy(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, (0, util_1.clone)(from_endpoint.value));\n    return null;\n}\nexports.copy = copy;\n/**\n> The \"test\" operation tests that a value at the target location is\n> equal to a specified value.\n> The operation object MUST contain a \"value\" member that conveys the\n> value to be compared to the target location's value.\n> The target location MUST be equal to the \"value\" value for the\n> operation to be considered successful.\n*/\nfunction test(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // TODO: this diffAny(...).length usage could/should be lazy\n    if ((0, diff_1.diffAny)(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\n        return new TestError(endpoint.value, operation.value);\n    }\n    return null;\n}\nexports.test = test;\nvar InvalidOperationError = /** @class */ (function (_super) {\n    __extends(InvalidOperationError, _super);\n    function InvalidOperationError(operation) {\n        var _this = _super.call(this, \"Invalid operation: \".concat(operation.op)) || this;\n        _this.operation = operation;\n        _this.name = 'InvalidOperationError';\n        return _this;\n    }\n    return InvalidOperationError;\n}(Error));\nexports.InvalidOperationError = InvalidOperationError;\n/**\nSwitch on `operation.op`, applying the corresponding patch function for each\ncase to `object`.\n*/\nfunction apply(object, operation) {\n    // not sure why TypeScript can't infer typesafety of:\n    //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\n    // (seems like a bug)\n    switch (operation.op) {\n        case 'add': return add(object, operation);\n        case 'remove': return remove(object, operation);\n        case 'replace': return replace(object, operation);\n        case 'move': return move(object, operation);\n        case 'copy': return copy(object, operation);\n        case 'test': return test(object, operation);\n    }\n    return new InvalidOperationError(operation);\n}\nexports.apply = apply;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTests = exports.createPatch = exports.applyPatch = exports.Pointer = void 0;\nvar pointer_1 = require(\"./pointer\");\nObject.defineProperty(exports, \"Pointer\", { enumerable: true, get: function () { return pointer_1.Pointer; } });\nvar patch_1 = require(\"./patch\");\nvar diff_1 = require(\"./diff\");\n/**\nApply a 'application/json-patch+json'-type patch to an object.\n\n`patch` *must* be an array of operations.\n\n> Operation objects MUST have exactly one \"op\" member, whose value\n> indicates the operation to perform.  Its value MUST be one of \"add\",\n> \"remove\", \"replace\", \"move\", \"copy\", or \"test\"; other values are\n> errors.\n\nThis method mutates the target object in-place.\n\n@returns list of results, one for each operation: `null` indicated success,\n         otherwise, the result will be an instance of one of the Error classes:\n         MissingError, InvalidOperationError, or TestError.\n*/\nfunction applyPatch(object, patch) {\n    return patch.map(function (operation) { return (0, patch_1.apply)(object, operation); });\n}\nexports.applyPatch = applyPatch;\nfunction wrapVoidableDiff(diff) {\n    function wrappedDiff(input, output, ptr) {\n        var custom_patch = diff(input, output, ptr);\n        // ensure an array is always returned\n        return Array.isArray(custom_patch) ? custom_patch : (0, diff_1.diffAny)(input, output, ptr, wrappedDiff);\n    }\n    return wrappedDiff;\n}\n/**\nProduce a 'application/json-patch+json'-type patch to get from one object to\nanother.\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\n`diff` is called on each pair of comparable non-primitive nodes in the\n`input`/`output` object trees, producing nested patches. Return `undefined`\nto fall back to default behaviour.\n\nReturns list of operations to perform on `input` to produce `output`.\n*/\nfunction createPatch(input, output, diff) {\n    var ptr = new pointer_1.Pointer();\n    // a new Pointer gets a default path of [''] if not specified\n    return (diff ? wrapVoidableDiff(diff) : diff_1.diffAny)(input, output, ptr);\n}\nexports.createPatch = createPatch;\n/**\nCreate a test operation based on `input`'s current evaluation of the JSON\nPointer `path`; if such a pointer cannot be resolved, returns undefined.\n*/\nfunction createTest(input, path) {\n    var endpoint = pointer_1.Pointer.fromJSON(path).evaluate(input);\n    if (endpoint !== undefined) {\n        return { op: 'test', path: path, value: endpoint.value };\n    }\n}\n/**\nProduce an 'application/json-patch+json'-type list of tests, to verify that\nexisting values in an object are identical to the those captured at some\ncheckpoint (whenever this function is called).\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\nReturns list of test operations.\n*/\nfunction createTests(input, patch) {\n    var tests = new Array();\n    patch.filter(diff_1.isDestructive).forEach(function (operation) {\n        var pathTest = createTest(input, operation.path);\n        if (pathTest)\n            tests.push(pathTest);\n        if ('from' in operation) {\n            var fromTest = createTest(input, operation.from);\n            if (fromTest)\n                tests.push(fromTest);\n        }\n    });\n    return tests;\n}\nexports.createTests = createTests;\n", "// Re-export all hooks from @medplum/react-hooks\nexport * from '@medplum/react-hooks';\n\n// Export all components\nexport * from './AddressDisplay/AddressDisplay';\nexport * from './AddressInput/AddressInput';\nexport * from './AnnotationInput/AnnotationInput';\nexport * from './AppShell/AppShell';\nexport * from './AppShell/Header';\nexport * from './AppShell/Navbar';\nexport * from './AsyncAutocomplete/AsyncAutocomplete';\nexport * from './AttachmentArrayDisplay/AttachmentArrayDisplay';\nexport * from './AttachmentArrayInput/AttachmentArrayInput';\nexport * from './AttachmentButton/AttachmentButton';\nexport * from './AttachmentDisplay/AttachmentDisplay';\nexport * from './AttachmentInput/AttachmentInput';\nexport * from './BackboneElementDisplay/BackboneElementDisplay';\nexport * from './BackboneElementInput/BackboneElementInput';\nexport * from './CalendarInput/CalendarInput';\nexport * from './CheckboxFormSection/CheckboxFormSection';\nexport * from './CodeInput/CodeInput';\nexport * from './CodeableConceptDisplay/CodeableConceptDisplay';\nexport * from './CodeableConceptInput/CodeableConceptInput';\nexport * from './CodingDisplay/CodingDisplay';\nexport * from './CodingInput/CodingInput';\nexport * from './ContactDetailDisplay/ContactDetailDisplay';\nexport * from './ContactDetailInput/ContactDetailInput';\nexport * from './ContactPointDisplay/ContactPointDisplay';\nexport * from './ContactPointInput/ContactPointInput';\nexport * from './Container/Container';\nexport * from './DateTimeInput/DateTimeInput';\nexport * from './DateTimeInput/DateTimeInput.utils';\nexport * from './DefaultResourceTimeline/DefaultResourceTimeline';\nexport * from './DescriptionList/DescriptionList';\nexport * from './DiagnosticReportDisplay/DiagnosticReportDisplay';\nexport * from './Document/Document';\nexport * from './EncounterTimeline/EncounterTimeline';\nexport * from './ErrorBoundary/ErrorBoundary';\nexport * from './FhirPathTable/FhirPathTable';\nexport * from './Form/Form';\nexport * from './Form/FormUtils';\nexport * from './FormSection/FormSection';\nexport * from './HumanNameDisplay/HumanNameDisplay';\nexport * from './HumanNameInput/HumanNameInput';\nexport * from './IdentifierDisplay/IdentifierDisplay';\nexport * from './IdentifierInput/IdentifierInput';\nexport * from './Loading/Loading';\nexport * from './Logo/Logo';\nexport * from './MeasureReportDisplay/MeasureReportDisplay';\nexport * from './MedplumLink/MedplumLink';\nexport * from './MoneyDisplay/MoneyDisplay';\nexport * from './MoneyInput/MoneyInput';\nexport * from './NoteDisplay/NoteDisplay';\nexport * from './NotificationIcon/NotificationIcon';\nexport * from './OperationOutcomeAlert/OperationOutcomeAlert';\nexport * from './Panel/Panel';\nexport * from './PatientSummary/PatientSummary';\nexport * from './PatientTimeline/PatientTimeline';\nexport * from './PlanDefinitionBuilder/PlanDefinitionBuilder';\nexport * from './QuantityDisplay/QuantityDisplay';\nexport * from './QuantityInput/QuantityInput';\nexport * from './QuestionnaireBuilder/QuestionnaireBuilder';\nexport * from './QuestionnaireForm/QuestionnaireForm';\nexport * from './QuestionnaireForm/QuestionnaireForm.context';\nexport * from './RangeDisplay/RangeDisplay';\nexport * from './RangeInput/RangeInput';\nexport * from './RatioInput/RatioInput';\nexport * from './ReferenceDisplay/ReferenceDisplay';\nexport * from './ReferenceInput/ReferenceInput';\nexport * from './ReferenceRangeEditor/ReferenceRangeEditor';\nexport * from './RequestGroupDisplay/RequestGroupDisplay';\nexport * from './ResourceArrayDisplay/ResourceArrayDisplay';\nexport * from './ResourceArrayInput/ResourceArrayInput';\nexport * from './ResourceAvatar/ResourceAvatar';\nexport * from './ResourceBadge/ResourceBadge';\nexport * from './ResourceBlame/ResourceBlame';\nexport * from './ResourceDiff/ResourceDiff';\nexport * from './ResourceForm/ResourceForm';\nexport * from './ResourceForm/ResourceForm.utils';\nexport * from './ResourceHistoryTable/ResourceHistoryTable';\nexport * from './ResourceInput/ResourceInput';\nexport * from './ResourceName/ResourceName';\nexport * from './ResourcePropertyDisplay/ResourcePropertyDisplay';\nexport * from './ResourcePropertyInput/ResourcePropertyInput';\nexport * from './ResourcePropertyInput/ResourcePropertyInput.utils';\nexport * from './ResourceTable/ResourceTable';\nexport * from './ResourceTimeline/ResourceTimeline';\nexport * from './Scheduler/Scheduler';\nexport * from './SearchControl/SearchControl';\nexport * from './SearchControl/SearchControlField';\nexport * from './SearchControl/SearchUtils';\nexport * from './SearchFieldEditor/SearchFieldEditor';\nexport * from './SearchFilterEditor/SearchFilterEditor';\nexport * from './ServiceRequestTimeline/ServiceRequestTimeline';\nexport * from './SmartAppLaunchLink/SmartAppLaunchLink';\nexport * from './StatusBadge/StatusBadge';\nexport * from './Timeline/Timeline';\nexport * from './TimingInput/TimingInput';\nexport * from './ValueSetAutocomplete/ValueSetAutocomplete';\nexport * from './auth/RegisterForm';\nexport * from './auth/SignInForm';\nexport * from './chat/BaseChat/BaseChat';\nexport * from './chat/ChatModal/ChatModal';\nexport * from './chat/ThreadChat/ThreadChat';\nexport * from './utils/date';\nexport * from './utils/outcomes';\nexport * from './utils/questionnaire';\nexport * from './utils/recaptcha';\nexport * from './utils/script';\n", "import { formatAddress } from '@medplum/core';\nimport { Address } from '@medplum/fhirtypes';\n\nexport interface AddressDisplayProps {\n  readonly value?: Address;\n}\n\nexport function AddressDisplay(props: AddressDisplayProps): JSX.Element | null {\n  const address = props.value;\n  if (!address) {\n    return null;\n  }\n\n  return <>{formatAddress(address)}</>;\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { Address } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\n\nfunction getLine(address: Address, index: number): string {\n  return address.line && address.line.length > index ? address.line[index] : '';\n}\n\nfunction setLine(address: Address, index: number, str: string): Address {\n  const line: string[] = address.line || [];\n  while (line.length <= index) {\n    line.push('');\n  }\n  line[index] = str;\n  return { ...address, line };\n}\n\nexport type AddressInputProps = ComplexTypeInputProps<Address>;\n\nexport function AddressInput(props: AddressInputProps): JSX.Element {\n  const [value, setValue] = useState<Address>(props.defaultValue || {});\n\n  const valueRef = useRef<Address>();\n  valueRef.current = value;\n\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [useProps, typeProps, line1Props, line2Props, cityProps, stateProps, postalCodeProps] = useMemo(\n    () =>\n      ['use', 'type', 'line1', 'line2', 'city', 'state', 'postalCode'].map((field) =>\n        getExtendedProps(props.path + '.' + field)\n      ),\n    [getExtendedProps, props.path]\n  );\n\n  // TODO{profiles} is it worth the complexity of subbing in an autocomplete input when\n  // a binding is defined in a profile? If so, it should go in a new wrapper around TextInput\n  // e.g. US Core Patient Profile\n\n  function setValueWrapper(newValue: Address): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setUse(use: 'home' | 'work' | 'temp' | 'old' | 'billing'): void {\n    setValueWrapper({ ...valueRef.current, use });\n  }\n\n  function setType(type: 'postal' | 'physical' | 'both'): void {\n    setValueWrapper({ ...valueRef.current, type });\n  }\n\n  function setLine1(line1: string): void {\n    setValueWrapper(setLine(valueRef.current || {}, 0, line1));\n  }\n\n  function setLine2(line2: string): void {\n    setValueWrapper(setLine(valueRef.current || {}, 1, line2));\n  }\n\n  function setCity(city: string): void {\n    setValueWrapper({ ...valueRef.current, city });\n  }\n\n  function setState(state: string): void {\n    setValueWrapper({ ...valueRef.current, state });\n  }\n\n  function setPostalCode(postalCode: string): void {\n    setValueWrapper({ ...valueRef.current, postalCode });\n  }\n\n  return (\n    <Group gap=\"xs\" wrap=\"nowrap\" grow>\n      <NativeSelect\n        disabled={props.disabled || useProps?.readonly}\n        data-testid=\"address-use\"\n        defaultValue={value.use}\n        onChange={(e) => setUse(e.currentTarget.value as 'home' | 'work' | 'temp' | 'old' | 'billing')}\n        data={['', 'home', 'work', 'temp', 'old', 'billing']}\n      />\n      <NativeSelect\n        disabled={props.disabled || typeProps?.readonly}\n        data-testid=\"address-type\"\n        defaultValue={value.type}\n        onChange={(e) => setType(e.currentTarget.value as 'postal' | 'physical' | 'both')}\n        data={['', 'postal', 'physical', 'both']}\n      />\n      <TextInput\n        disabled={props.disabled || line1Props?.readonly}\n        placeholder=\"Line 1\"\n        defaultValue={getLine(value, 0)}\n        onChange={(e) => setLine1(e.currentTarget.value)}\n      />\n      <TextInput\n        disabled={props.disabled || line2Props?.readonly}\n        placeholder=\"Line 2\"\n        defaultValue={getLine(value, 1)}\n        onChange={(e) => setLine2(e.currentTarget.value)}\n      />\n      <TextInput\n        disabled={props.disabled || cityProps?.readonly}\n        placeholder=\"City\"\n        defaultValue={value.city}\n        onChange={(e) => setCity(e.currentTarget.value)}\n      />\n      <TextInput\n        disabled={props.disabled || stateProps?.readonly}\n        placeholder=\"State\"\n        defaultValue={value.state}\n        onChange={(e) => setState(e.currentTarget.value)}\n      />\n      <TextInput\n        disabled={props.disabled || postalCodeProps?.readonly}\n        placeholder=\"Postal Code\"\n        defaultValue={value.postalCode}\n        onChange={(e) => setPostalCode(e.currentTarget.value)}\n      />\n    </Group>\n  );\n}\n", "import { ExtendedInternalSchemaElement, ElementsContextType, isPopulated } from '@medplum/core';\nimport { createContext } from 'react';\nimport { DEFAULT_IGNORED_NON_NESTED_PROPERTIES, DEFAULT_IGNORED_PROPERTIES } from '../constants';\n\nexport const ElementsContext = createContext<ElementsContextType>({\n  path: '',\n  profileUrl: undefined,\n  elements: Object.create(null),\n  elementsByPath: Object.create(null),\n  getExtendedProps: () => {\n    return { readonly: false, hidden: false };\n  },\n  accessPolicyResource: undefined,\n  debugMode: false,\n  isDefaultContext: true,\n});\nElementsContext.displayName = 'ElementsContext';\n\nexport const EXTENSION_KEYS = ['extension', 'modifierExtension'];\nexport const IGNORED_PROPERTIES = ['id', ...DEFAULT_IGNORED_PROPERTIES].filter(\n  (prop) => !EXTENSION_KEYS.includes(prop)\n);\n\nexport function getElementsToRender(\n  inputElements: Record<string, ExtendedInternalSchemaElement>\n): [string, ExtendedInternalSchemaElement][] {\n  const result = Object.entries(inputElements).filter(([key, element]) => {\n    if (!isPopulated(element.type)) {\n      return false;\n    }\n\n    if (element.max === 0) {\n      return false;\n    }\n\n    // toLowerCase to handle Extension.url as well as Extension.extension.url, etc.\n    if (element.path.toLowerCase().endsWith('extension.url') && element.fixed) {\n      return false;\n    }\n\n    if (EXTENSION_KEYS.includes(key) && !isPopulated(element.slicing?.slices)) {\n      // an extension property without slices has no nested extensions\n      return false;\n    } else if (IGNORED_PROPERTIES.includes(key)) {\n      return false;\n    } else if (DEFAULT_IGNORED_NON_NESTED_PROPERTIES.includes(key) && element.path.split('.').length === 2) {\n      return false;\n    }\n\n    // Profiles can include nested elements in addition to their containing element, e.g.:\n    // identifier, identifier.use, identifier.system\n    // Skip nested elements, e.g. identifier.use, since they are handled by the containing element\n    if (key.includes('.')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return result;\n}\n", "export const DEFAULT_IGNORED_PROPERTIES = ['meta', 'implicitRules', 'contained', 'extension', 'modifierExtension'];\n\n// Ignored only when they are top-level properties\n// e.g. Patient.language is ignored, but Patient.communication.language is not ignored\nexport const DEFAULT_IGNORED_NON_NESTED_PROPERTIES = ['language', 'text'];\n", "import { TextInput } from '@mantine/core';\nimport { createReference } from '@medplum/core';\nimport { Annotation } from '@medplum/fhirtypes';\nimport { useMedplumProfile } from '@medplum/react-hooks';\nimport { useState } from 'react';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface AnnotationInputProps extends ComplexTypeInputProps<Annotation> {}\n\nexport function AnnotationInput(props: AnnotationInputProps): JSX.Element {\n  const author = useMedplumProfile();\n  const [value, setValue] = useState<Annotation>(props.defaultValue || ({} as Annotation));\n\n  function setText(text: string): void {\n    const newValue: Annotation = text\n      ? {\n          text,\n          authorReference: author && createReference(author),\n          time: new Date().toISOString(),\n        }\n      : ({} as Annotation);\n\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <TextInput\n      disabled={props.disabled}\n      name={props.name}\n      placeholder=\"Annotation text\"\n      defaultValue={value.text}\n      onChange={(e) => setText(e.currentTarget.value)}\n    />\n  );\n}\n", "import { AppShell as MantineAppShell } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { useMedplum, useMedplumProfile } from '@medplum/react-hooks';\nimport { ReactNode, Suspense, useEffect, useState } from 'react';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { Loading } from '../Loading/Loading';\nimport classes from './AppShell.module.css';\nimport { Header } from './Header';\nimport { Navbar, NavbarMenu } from './Navbar';\n\nexport interface AppShellProps {\n  readonly logo: ReactNode;\n  readonly pathname?: string;\n  readonly searchParams?: URLSearchParams;\n  readonly headerSearchDisabled?: boolean;\n  readonly version?: string;\n  readonly menus?: NavbarMenu[];\n  readonly children: ReactNode;\n  readonly displayAddBookmark?: boolean;\n  readonly resourceTypeSearchDisabled?: boolean;\n  readonly notifications?: ReactNode;\n}\n\nexport function AppShell(props: AppShellProps): JSX.Element {\n  const [navbarOpen, setNavbarOpen] = useState(localStorage['navbarOpen'] === 'true');\n  const medplum = useMedplum();\n  const profile = useMedplumProfile();\n\n  useEffect(() => {\n    function eventListener(): void {\n      showNotification({ id: 'offline', color: 'red', message: 'No connection to server', autoClose: false });\n    }\n    medplum.addEventListener('offline', eventListener);\n    return () => medplum.removeEventListener('offline', eventListener);\n  }, [medplum]);\n\n  function setNavbarOpenWrapper(open: boolean): void {\n    localStorage['navbarOpen'] = open.toString();\n    setNavbarOpen(open);\n  }\n\n  function closeNavbar(): void {\n    setNavbarOpenWrapper(false);\n  }\n\n  function toggleNavbar(): void {\n    setNavbarOpenWrapper(!navbarOpen);\n  }\n\n  if (medplum.isLoading()) {\n    return <Loading />;\n  }\n\n  return (\n    <MantineAppShell\n      header={{ height: 60 }}\n      navbar={{\n        width: 250,\n        breakpoint: 'sm',\n        collapsed: {\n          desktop: !profile || !navbarOpen,\n          mobile: !profile || !navbarOpen,\n        },\n      }}\n      padding={0}\n    >\n      {profile && (\n        <Header\n          pathname={props.pathname}\n          searchParams={props.searchParams}\n          headerSearchDisabled={props.headerSearchDisabled}\n          logo={props.logo}\n          version={props.version}\n          navbarToggle={toggleNavbar}\n          notifications={props.notifications}\n        />\n      )}\n      {profile && navbarOpen ? (\n        <Navbar\n          pathname={props.pathname}\n          searchParams={props.searchParams}\n          menus={props.menus}\n          closeNavbar={closeNavbar}\n          displayAddBookmark={props.displayAddBookmark}\n          resourceTypeSearchDisabled={props.resourceTypeSearchDisabled}\n        />\n      ) : undefined}\n      <MantineAppShell.Main className={classes.main}>\n        <ErrorBoundary>\n          <Suspense fallback={<Loading />}>{props.children}</Suspense>\n        </ErrorBoundary>\n      </MantineAppShell.Main>\n    </MantineAppShell>\n  );\n}\n", "import { Alert } from '@mantine/core';\nimport { normalizeErrorString } from '@medplum/core';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport { Component, ErrorInfo, ReactNode } from 'react';\n\nexport interface ErrorBoundaryProps {\n  readonly children: ReactNode;\n}\n\nexport interface ErrorBoundaryState {\n  readonly error?: Error;\n  readonly lastLocation: string;\n}\n\n/**\n * ErrorBoundary is a React component that handles errors in its child components.\n * See: https://reactjs.org/docs/error-boundaries.html\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  readonly state: ErrorBoundaryState;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { lastLocation: window.location.toString() };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error, lastLocation: window.location.toString() };\n  }\n\n  componentDidUpdate(_prevProps: ErrorBoundaryProps, _prevState: ErrorBoundaryState): void {\n    if (window.location.toString() !== this.state.lastLocation) {\n      this.setState({\n        lastLocation: window.location.toString(),\n        error: undefined,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps: ErrorBoundaryProps, nextState: ErrorBoundaryState): boolean {\n    if (this.props.children !== nextProps.children) {\n      return true;\n    }\n    if (nextState.error && !this.state.error) {\n      return true;\n    }\n    if (this.state.lastLocation !== window.location.toString()) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  render(): ReactNode {\n    if (this.state.error) {\n      return (\n        <Alert icon={<IconAlertCircle size={16} />} title=\"Something went wrong\" color=\"red\">\n          {normalizeErrorString(this.state.error)}\n        </Alert>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n", "export default {\n  outline: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: 'currentColor',\n    strokeWidth: 2,\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n  },\n  filled: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor',\n    stroke: 'none',\n  },\n};\n", "import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'adjustments-horizontal', 'IconAdjustmentsHorizontal', [[\"path\",{\"d\":\"M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 6l8 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M16 6l4 0\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M4 12l2 0\",\"key\":\"svg-4\"}],[\"path\",{\"d\":\"M10 12l10 0\",\"key\":\"svg-5\"}],[\"path\",{\"d\":\"M17 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\",\"key\":\"svg-6\"}],[\"path\",{\"d\":\"M4 18l11 0\",\"key\":\"svg-7\"}],[\"path\",{\"d\":\"M19 18l1 0\",\"key\":\"svg-8\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'alert-circle', 'IconAlertCircle', [[\"path\",{\"d\":\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M12 8v4\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 16h.01\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'arrow-down', 'IconArrowDown', [[\"path\",{\"d\":\"M12 5l0 14\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M18 13l-6 6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M6 13l6 6\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'arrow-right', 'IconArrowRight', [[\"path\",{\"d\":\"M5 12l14 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M13 18l6 -6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M13 6l6 6\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'arrow-up', 'IconArrowUp', [[\"path\",{\"d\":\"M12 5l0 14\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M18 11l-6 -6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M6 11l6 -6\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'bleach-off', 'IconBleachOff', [[\"path\",{\"d\":\"M5 19h14m1.986 -1.977a2 2 0 0 0 -.146 -.773l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.815 1.405m-1.488 2.568l-4.797 8.277a2 2 0 0 0 1.75 2.75\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M3 3l18 18\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'bleach', 'IconBleach', [[\"path\",{\"d\":\"M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'box-multiple', 'IconBoxMultiple', [[\"path\",{\"d\":\"M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'brackets-contain', 'IconBracketsContain', [[\"path\",{\"d\":\"M7 4h-4v16h4\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M17 4h4v16h-4\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M8 16h.01\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M12 16h.01\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M16 16h.01\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'bucket-off', 'IconBucketOff', [[\"path\",{\"d\":\"M5.029 5.036c-.655 .58 -1.029 1.25 -1.029 1.964c0 2.033 3.033 3.712 6.96 3.967m3.788 -.21c3.064 -.559 5.252 -2.029 5.252 -3.757c0 -2.21 -3.582 -4 -8 -4c-1.605 0 -3.1 .236 -4.352 .643\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.1 -.3 .252 -.812 .457 -1.535m.862 -3.146c.262 -.975 .735 -2.76 1.418 -5.354a7.45 7.45 0 0 0 .263 -1.965\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M3 3l18 18\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'bucket', 'IconBucket', [[\"path\",{\"d\":\"M12 7m-8 0a8 4 0 1 0 16 0a8 4 0 1 0 -16 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.333 -1 1.246 -4.345 2.737 -10.035a7.45 7.45 0 0 0 .263 -1.965\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'calendar', 'IconCalendar', [[\"path\",{\"d\":\"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M16 3v4\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M8 3v4\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M4 11h16\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M11 15h1\",\"key\":\"svg-4\"}],[\"path\",{\"d\":\"M12 15v3\",\"key\":\"svg-5\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'check', 'IconCheck', [[\"path\",{\"d\":\"M5 12l5 5l10 -10\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'checkbox', 'IconCheckbox', [[\"path\",{\"d\":\"M9 11l3 3l8 -8\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'chevron-down', 'IconChevronDown', [[\"path\",{\"d\":\"M6 9l6 6l6 -6\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'chevron-up', 'IconChevronUp', [[\"path\",{\"d\":\"M6 15l6 -6l6 6\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'circle-minus', 'IconCircleMinus', [[\"path\",{\"d\":\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M9 12l6 0\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'circle-plus', 'IconCirclePlus', [[\"path\",{\"d\":\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M9 12h6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 9v6\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'cloud-upload', 'IconCloudUpload', [[\"path\",{\"d\":\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M9 15l3 -3l3 3\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 12l0 9\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'columns', 'IconColumns', [[\"path\",{\"d\":\"M4 6l5.5 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 10l5.5 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M4 14l5.5 0\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M4 18l5.5 0\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M14.5 6l5.5 0\",\"key\":\"svg-4\"}],[\"path\",{\"d\":\"M14.5 10l5.5 0\",\"key\":\"svg-5\"}],[\"path\",{\"d\":\"M14.5 14l5.5 0\",\"key\":\"svg-6\"}],[\"path\",{\"d\":\"M14.5 18l5.5 0\",\"key\":\"svg-7\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'copy', 'IconCopy', [[\"path\",{\"d\":\"M7 7m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4.012 16.737a2.005 2.005 0 0 1 -1.012 -1.737v-10c0 -1.1 .9 -2 2 -2h10c.75 0 1.158 .385 1.5 1\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'currency-dollar', 'IconCurrencyDollar', [[\"path\",{\"d\":\"M16.7 8a3 3 0 0 0 -2.7 -2h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1 -2.7 -2\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M12 3v3m0 12v3\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'dots', 'IconDots', [[\"path\",{\"d\":\"M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'edit', 'IconEdit', [[\"path\",{\"d\":\"M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M16 5l3 3\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'equal-not', 'IconEqualNot', [[\"path\",{\"d\":\"M5 10h14\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 14h14\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M5 19l14 -14\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'equal', 'IconEqual', [[\"path\",{\"d\":\"M5 10h14\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 14h14\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'file-alert', 'IconFileAlert', [[\"path\",{\"d\":\"M14 3v4a1 1 0 0 0 1 1h4\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 17l.01 0\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M12 11l0 3\",\"key\":\"svg-3\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'file-plus', 'IconFilePlus', [[\"path\",{\"d\":\"M14 3v4a1 1 0 0 0 1 1h4\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M12 11l0 6\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M9 14l6 0\",\"key\":\"svg-3\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'filter', 'IconFilter', [[\"path\",{\"d\":\"M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'gender-female', 'IconGenderFemale', [[\"path\",{\"d\":\"M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M12 14v7\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M9 18h6\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'gender-male', 'IconGenderMale', [[\"path\",{\"d\":\"M10 14m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M19 5l-5.4 5.4\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M19 5h-5\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M19 5v5\",\"key\":\"svg-3\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'logout', 'IconLogout', [[\"path\",{\"d\":\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M9 12h12l-3 -3\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M18 15l3 -3\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'math-greater', 'IconMathGreater', [[\"path\",{\"d\":\"M5 18l14 -6l-14 -6\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'math-lower', 'IconMathLower', [[\"path\",{\"d\":\"M19 18l-14 -6l14 -6\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'message', 'IconMessage', [[\"path\",{\"d\":\"M8 9h8\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M8 13h6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'plus', 'IconPlus', [[\"path\",{\"d\":\"M12 5l0 14\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 12l14 0\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'refresh', 'IconRefresh', [[\"path\",{\"d\":\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'search', 'IconSearch', [[\"path\",{\"d\":\"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M21 21l-6 -6\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'settings', 'IconSettings', [[\"path\",{\"d\":\"M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0\",\"key\":\"svg-1\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'sort-ascending', 'IconSortAscending', [[\"path\",{\"d\":\"M4 6l7 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 12l7 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M4 18l9 0\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M15 9l3 -3l3 3\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M18 6l0 12\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'sort-descending', 'IconSortDescending', [[\"path\",{\"d\":\"M4 6l9 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M4 12l7 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M4 18l7 0\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M15 15l3 3l3 -3\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M18 6l0 12\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'square', 'IconSquare', [[\"path\",{\"d\":\"M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z\",\"key\":\"svg-0\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'stethoscope', 'IconStethoscope', [[\"path\",{\"d\":\"M6 4h-1a2 2 0 0 0 -2 2v3.5h0a5.5 5.5 0 0 0 11 0v-3.5a2 2 0 0 0 -2 -2h-1\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M8 15a6 6 0 1 0 12 0v-3\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M11 3v2\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M6 3v2\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M20 10m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'switch-horizontal', 'IconSwitchHorizontal', [[\"path\",{\"d\":\"M16 3l4 4l-4 4\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M10 7l10 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M8 13l-4 4l4 4\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M4 17l9 0\",\"key\":\"svg-3\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'table-export', 'IconTableExport', [[\"path\",{\"d\":\"M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M3 10h18\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M10 3v18\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M16 19h6\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M19 16l3 3l-3 3\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'trash', 'IconTrash', [[\"path\",{\"d\":\"M4 7l16 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M10 11l0 6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M14 11l0 6\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\",\"key\":\"svg-3\"}],[\"path\",{\"d\":\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\",\"key\":\"svg-4\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'user-square', 'IconUserSquare', [[\"path\",{\"d\":\"M9 10a3 3 0 1 0 6 0a3 3 0 0 0 -6 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M6 21v-1a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v1\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M3 5a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-14z\",\"key\":\"svg-2\"}]]);", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'x', 'IconX', [[\"path\",{\"d\":\"M18 6l-12 12\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M6 6l12 12\",\"key\":\"svg-1\"}]]);", "import { Center, Loader } from '@mantine/core';\n\nexport function Loading(): JSX.Element {\n  return (\n    <Center style={{ width: '100%', height: '100vh' }}>\n      <Loader />\n    </Center>\n  );\n}\n", ".main {\n  flex: 1;\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  padding-bottom: var(--mantine-spacing-lg);\n  overflow-x: auto;\n}\n", "import { Group, AppShell as MantineAppShell, Menu, Text, UnstyledButton } from '@mantine/core';\nimport { formatHumanName } from '@medplum/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport { useMedplumProfile } from '@medplum/react-hooks';\nimport { IconChevronDown } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport classes from './Header.module.css';\nimport { HeaderDropdown } from './HeaderDropdown';\nimport { HeaderSearchInput } from './HeaderSearchInput';\n\nexport interface HeaderProps {\n  readonly pathname?: string;\n  readonly searchParams?: URLSearchParams;\n  readonly headerSearchDisabled?: boolean;\n  readonly logo: ReactNode;\n  readonly version?: string;\n  readonly navbarToggle: () => void;\n  readonly notifications?: ReactNode;\n}\n\nexport function Header(props: HeaderProps): JSX.Element {\n  const profile = useMedplumProfile();\n  const [userMenuOpened, setUserMenuOpened] = useState(false);\n\n  return (\n    <MantineAppShell.Header p={8} style={{ zIndex: 101 }}>\n      <Group justify=\"space-between\">\n        <Group gap=\"xs\">\n          <UnstyledButton className={classes.logoButton} onClick={props.navbarToggle}>\n            {props.logo}\n          </UnstyledButton>\n          {!props.headerSearchDisabled && (\n            <HeaderSearchInput pathname={props.pathname} searchParams={props.searchParams} />\n          )}\n        </Group>\n        <Group gap=\"lg\" pr=\"sm\">\n          {props.notifications}\n          <Menu\n            width={260}\n            shadow=\"xl\"\n            position=\"bottom-end\"\n            transitionProps={{ transition: 'pop-top-right' }}\n            opened={userMenuOpened}\n            onClose={() => setUserMenuOpened(false)}\n          >\n            <Menu.Target>\n              <UnstyledButton\n                className={cx(classes.user, { [classes.userActive]: userMenuOpened })}\n                onClick={() => setUserMenuOpened((o) => !o)}\n              >\n                <Group gap={7}>\n                  <ResourceAvatar value={profile} radius=\"xl\" size={24} />\n                  <Text size=\"sm\" className={classes.userName}>\n                    {formatHumanName(profile?.name?.[0] as HumanName)}\n                  </Text>\n                  <IconChevronDown size={12} stroke={1.5} />\n                </Group>\n              </UnstyledButton>\n            </Menu.Target>\n            <Menu.Dropdown>\n              <HeaderDropdown version={props.version} />\n            </Menu.Dropdown>\n          </Menu>\n        </Group>\n      </Group>\n    </MantineAppShell.Header>\n  );\n}\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import { Avatar, AvatarProps } from '@mantine/core';\nimport { getDisplayString, getImageSrc } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { useCachedBinaryUrl, useResource } from '@medplum/react-hooks';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { getInitials } from './ResourceAvatar.utils';\n\nexport interface ResourceAvatarProps extends AvatarProps {\n  readonly value?: Reference | Resource;\n  readonly link?: boolean;\n}\n\nexport function ResourceAvatar(props: ResourceAvatarProps): JSX.Element {\n  const resource = useResource(props.value);\n  const text = resource ? getDisplayString(resource) : (props.alt ?? '');\n  const initials = getInitials(text);\n  const uncachedImageUrl = (resource && getImageSrc(resource)) ?? props.src;\n  const imageUrl = useCachedBinaryUrl(uncachedImageUrl ?? undefined);\n  const radius = props.radius ?? 'xl';\n\n  const avatarProps = { ...props, value: undefined, link: undefined };\n\n  if (props.link) {\n    return (\n      <MedplumLink to={resource}>\n        <Avatar src={imageUrl} alt={text} radius={radius} {...avatarProps}>\n          {initials}\n        </Avatar>\n      </MedplumLink>\n    );\n  }\n\n  return (\n    <Avatar src={imageUrl} alt={text} radius={radius} {...avatarProps}>\n      {initials}\n    </Avatar>\n  );\n}\n", "import { Anchor, TextProps } from '@mantine/core';\nimport { isReference, isResource } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplumNavigate } from '@medplum/react-hooks';\nimport { MouseEvent, MouseEventHandler, ReactNode } from 'react';\nimport { killEvent } from '../utils/dom';\n\nexport interface MedplumLinkProps extends TextProps {\n  readonly to?: Resource | Reference | string;\n  readonly suffix?: string;\n  readonly label?: string;\n  readonly onClick?: MouseEventHandler;\n  readonly children: ReactNode;\n}\n\nexport function MedplumLink(props: MedplumLinkProps): JSX.Element {\n  const navigate = useMedplumNavigate();\n  const { to, suffix, label, onClick, children, ...rest } = props;\n\n  let href = getHref(to);\n  if (suffix) {\n    href += '/' + suffix;\n  }\n\n  return (\n    <Anchor\n      href={href}\n      aria-label={label}\n      onClick={(e: MouseEvent) => {\n        killEvent(e);\n        if (onClick) {\n          onClick(e);\n        } else if (to) {\n          navigate(href);\n        }\n      }}\n      {...rest}\n    >\n      {children}\n    </Anchor>\n  );\n}\n\nfunction getHref(to: Resource | Reference | string | undefined): string {\n  if (to) {\n    if (typeof to === 'string') {\n      return getStringHref(to);\n    } else if (isResource(to)) {\n      return getResourceHref(to);\n    } else if (isReference(to)) {\n      return getReferenceHref(to);\n    }\n  }\n  return '#';\n}\n\nfunction getStringHref(to: string): string {\n  if (to.startsWith('http://') || to.startsWith('https://') || to.startsWith('/')) {\n    return to;\n  }\n  return '/' + to;\n}\n\nfunction getResourceHref(to: Resource): string {\n  return `/${to.resourceType}/${to.id}`;\n}\n\nfunction getReferenceHref(to: Reference): string {\n  return `/${to.reference}`;\n}\n", "import { SyntheticEvent } from 'react';\n\n/**\n * Kills a browser event.\n * Prevents default behavior.\n * Stops event propagation.\n * @param e - The event.\n */\nexport function killEvent(e: Event | SyntheticEvent): void {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\n/**\n * Returns true if the element is a checkbox or a table cell containing a checkbox.\n * Table cells containing checkboxes are commonly accidentally clicked.\n * @param el - The HTML DOM element.\n * @returns True if the element is a checkbox or a table cell containing a checkbox.\n */\nexport function isCheckboxCell(el: Element): boolean {\n  if (isCheckboxElement(el)) {\n    return true;\n  }\n\n  if (el instanceof HTMLTableCellElement) {\n    const children = el.children;\n    if (children.length === 1 && isCheckboxElement(children[0])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isCheckboxElement(el: Element): boolean {\n  return el instanceof HTMLInputElement && el.type === 'checkbox';\n}\n", "export function getInitials(input: string): string {\n  const words = input.split(' ').filter(Boolean);\n  if (words.length > 1) {\n    return words[0][0] + words[words.length - 1][0];\n  }\n  if (words.length === 1) {\n    return words[0][0];\n  }\n  return '';\n}\n", ".logoButton {\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  transition: background-color 100ms ease;\n\n  &:hover {\n    background-color: var(--mantine-primary-color-light-hover);\n  }\n}\n\n.user {\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  transition: background-color 100ms ease;\n\n  &:hover {\n    background-color: var(--mantine-primary-color-light-hover);\n  }\n}\n\n.userName {\n  font-weight: 500;\n  line-height: 1px;\n  margin-right: 3px;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    display: none;\n  }\n}\n\n.userActive {\n  background-color: var(--mantine-primary-color-light-hover);\n}\n", "import {\n  Avatar,\n  Group,\n  MantineColorScheme,\n  Menu,\n  SegmentedControl,\n  Stack,\n  Text,\n  useMantineColorScheme,\n} from '@mantine/core';\nimport { ProfileResource, getReferenceString } from '@medplum/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport { useMedplumContext } from '@medplum/react-hooks';\nimport { IconLogout, IconSettings, IconSwitchHorizontal } from '@tabler/icons-react';\nimport { HumanNameDisplay } from '../HumanNameDisplay/HumanNameDisplay';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\n\nexport interface HeaderDropdownProps {\n  readonly version?: string;\n}\n\nexport function HeaderDropdown(props: HeaderDropdownProps): JSX.Element {\n  const context = useMedplumContext();\n  const { medplum, profile, navigate } = context;\n  const logins = medplum.getLogins();\n  const { colorScheme, setColorScheme } = useMantineColorScheme();\n\n  return (\n    <>\n      <Stack align=\"center\" p=\"xl\">\n        <ResourceAvatar size=\"xl\" radius={100} value={context.profile} />\n        <HumanNameDisplay value={context.profile?.name?.[0] as HumanName} />\n        <Text c=\"dimmed\" size=\"xs\">\n          {medplum.getActiveLogin()?.project.display}\n        </Text>\n      </Stack>\n      {logins.length > 1 && <Menu.Divider />}\n      {logins.map(\n        (login) =>\n          login.profile.reference !== getReferenceString(context.profile as ProfileResource) && (\n            <Menu.Item\n              key={login.profile.reference}\n              onClick={() => {\n                medplum\n                  .setActiveLogin(login)\n                  .then(() => window.location.reload())\n                  .catch(console.log);\n              }}\n            >\n              <Group>\n                <Avatar radius=\"xl\" />\n                <div style={{ flex: 1 }}>\n                  <Text size=\"sm\" fw={500}>\n                    {login.profile.display}\n                  </Text>\n                  <Text c=\"dimmed\" size=\"xs\">\n                    {login.project.display}\n                  </Text>\n                </div>\n              </Group>\n            </Menu.Item>\n          )\n      )}\n      <Menu.Divider />\n      <Group justify=\"center\">\n        <SegmentedControl\n          size=\"xs\"\n          value={colorScheme}\n          onChange={(newValue) => setColorScheme(newValue as MantineColorScheme)}\n          data={[\n            { label: 'Light', value: 'light' },\n            { label: 'Dark', value: 'dark' },\n            { label: 'Auto', value: 'auto' },\n          ]}\n        />\n      </Group>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconSwitchHorizontal size={14} stroke={1.5} />} onClick={() => navigate('/signin')}>\n        Add another account\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconSettings size={14} stroke={1.5} />}\n        onClick={() => navigate(`/${getReferenceString(profile as ProfileResource)}`)}\n      >\n        Account settings\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconLogout size={14} stroke={1.5} />}\n        onClick={async () => {\n          await medplum.signOut();\n          navigate('/signin');\n        }}\n      >\n        Sign out\n      </Menu.Item>\n      <Text size=\"xs\" c=\"dimmed\" ta=\"center\">\n        {props.version}\n      </Text>\n    </>\n  );\n}\n", "import { formatHumanName, HumanNameFormatOptions } from '@medplum/core';\nimport { HumanName } from '@medplum/fhirtypes';\n\nexport interface HumanNameDisplayProps {\n  readonly value?: HumanName;\n  readonly options?: HumanNameFormatOptions;\n}\n\nexport function HumanNameDisplay(props: HumanNameDisplayProps): JSX.Element | null {\n  const name = props.value;\n  if (!name) {\n    return null;\n  }\n\n  return <>{formatHumanName(name, props.options)}</>;\n}\n", "import { Group, Text } from '@mantine/core';\nimport { formatHumanName, getDisplayString, getReferenceString, isUUID } from '@medplum/core';\nimport { Patient, ServiceRequest } from '@medplum/fhirtypes';\nimport { useMedplum, useMedplumNavigate } from '@medplum/react-hooks';\nimport { IconSearch } from '@tabler/icons-react';\nimport { forwardRef, useCallback } from 'react';\nimport { AsyncAutocomplete, AsyncAutocompleteOption } from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport classes from './HeaderSearchInput.module.css';\n\nexport type HeaderSearchTypes = Patient | ServiceRequest;\n\ninterface SearchGraphQLResponse {\n  readonly data: {\n    readonly Patients1: Patient[] | undefined;\n    readonly Patients2: Patient[] | undefined;\n    readonly ServiceRequestList: ServiceRequest[] | undefined;\n  };\n}\n\nfunction toOption(resource: HeaderSearchTypes): AsyncAutocompleteOption<HeaderSearchTypes> {\n  return {\n    value: resource.id as string,\n    label: getDisplayString(resource),\n    resource,\n  };\n}\n\nexport interface HeaderSearchInputProps {\n  readonly pathname?: string;\n  readonly searchParams?: URLSearchParams;\n}\n\nexport function HeaderSearchInput(props: HeaderSearchInputProps): JSX.Element {\n  const navigate = useMedplumNavigate();\n  const medplum = useMedplum();\n\n  const loadData = useCallback(\n    async (input: string, signal: AbortSignal): Promise<HeaderSearchTypes[]> => {\n      const query = buildGraphQLQuery(input);\n      const options = { signal };\n      const response = (await medplum.graphql(query, undefined, undefined, options)) as SearchGraphQLResponse;\n      return getResourcesFromResponse(response, input);\n    },\n    [medplum]\n  );\n\n  const handleSelect = useCallback(\n    (item: HeaderSearchTypes[]): void => {\n      if (item.length > 0) {\n        navigate(`/${getReferenceString(item[0])}`);\n      }\n    },\n    [navigate]\n  );\n\n  return (\n    <AsyncAutocomplete\n      key={`${props.pathname}?${props.searchParams}`}\n      size=\"sm\"\n      radius=\"md\"\n      className={classes.searchInput}\n      leftSection={<IconSearch size={16} />}\n      placeholder=\"Search\"\n      itemComponent={ItemComponent}\n      toOption={toOption}\n      onChange={handleSelect}\n      loadOptions={loadData}\n      maxValues={0}\n      clearable={false}\n    />\n  );\n}\n\nconst ItemComponent = forwardRef<HTMLDivElement, AsyncAutocompleteOption<HeaderSearchTypes>>(\n  ({ resource, active: _active, ...others }: AsyncAutocompleteOption<HeaderSearchTypes>, ref) => {\n    let helpText: string | undefined = undefined;\n\n    if (resource.resourceType === 'Patient') {\n      helpText = resource.birthDate;\n    } else if (resource.resourceType === 'ServiceRequest') {\n      helpText = resource.subject?.display;\n    }\n\n    return (\n      <div ref={ref} {...others}>\n        <Group wrap=\"nowrap\">\n          <ResourceAvatar value={resource} />\n          <div>\n            <Text>{getDisplayString(resource)}</Text>\n            <Text size=\"xs\" c=\"dimmed\">\n              {helpText}\n            </Text>\n          </div>\n        </Group>\n      </div>\n    );\n  }\n);\n\nfunction buildGraphQLQuery(input: string): string {\n  const escaped = JSON.stringify(input);\n  if (isUUID(input)) {\n    return `{\n      Patients1: PatientList(_id: ${escaped}, _count: 1) {\n        resourceType\n        id\n        identifier {\n          system\n          value\n        }\n        name {\n          given\n          family\n        }\n        birthDate\n      }\n      ServiceRequestList(_id: ${escaped}, _count: 1) {\n        resourceType\n        id\n        identifier {\n          system\n          value\n        }\n        subject {\n          display\n        }\n      }\n    }`.replace(/\\s+/g, ' ');\n  }\n  return `{\n    Patients1: PatientList(name: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      name {\n        given\n        family\n      }\n      birthDate\n    }\n    Patients2: PatientList(identifier: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      name {\n        given\n        family\n      }\n      birthDate\n    }\n    ServiceRequestList(identifier: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      subject {\n        display\n      }\n    }\n  }`.replace(/\\s+/g, ' ');\n}\n\n/**\n * Returns a de-duped and sorted list of resources from the search response.\n * The search request is actually 3+ separate searches, which can include duplicates.\n * This function combines the results, de-dupes, and sorts by relevance.\n * @param response - The response from a search query.\n * @param query - The user entered search query.\n * @returns The resources to display in the autocomplete.\n */\nfunction getResourcesFromResponse(response: SearchGraphQLResponse, query: string): HeaderSearchTypes[] {\n  const resources = [];\n  if (response.data.Patients1) {\n    resources.push(...response.data.Patients1);\n  }\n  if (response.data.Patients2) {\n    resources.push(...response.data.Patients2);\n  }\n  if (response.data.ServiceRequestList) {\n    resources.push(...response.data.ServiceRequestList);\n  }\n  return sortByRelevance(dedupeResources(resources), query).slice(0, 5);\n}\n\n/**\n * Removes duplicate resources from an array by ID.\n * @param resources - The array of resources with possible duplicates.\n * @returns The array of resources with no duplicates.\n */\nfunction dedupeResources(resources: HeaderSearchTypes[]): HeaderSearchTypes[] {\n  const ids = new Set<string>();\n  const result = [];\n\n  for (const resource of resources) {\n    if (!ids.has(resource.id as string)) {\n      ids.add(resource.id as string);\n      result.push(resource);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Sorts an array of resources by relevance.\n * @param resources - The candidate resources.\n * @param query - The user entered search string.\n * @returns The sorted array of resources.\n */\nfunction sortByRelevance(resources: HeaderSearchTypes[], query: string): HeaderSearchTypes[] {\n  return resources.sort((a: HeaderSearchTypes, b: HeaderSearchTypes) => {\n    return getResourceScore(b, query) - getResourceScore(a, query);\n  });\n}\n\n/**\n * Calculates a relevance score of a candidate resource.\n * Higher scores are better.\n * @param resource - The candidate resource.\n * @param query - The user entered search string.\n * @returns The relevance score of the candidate resource.\n */\nfunction getResourceScore(resource: HeaderSearchTypes, query: string): number {\n  let bestScore = 0;\n\n  if (resource.identifier) {\n    for (const identifier of resource.identifier) {\n      bestScore = Math.max(bestScore, getStringScore(identifier.value, query));\n    }\n  }\n\n  if (resource.resourceType === 'Patient' && resource.name) {\n    for (const name of resource.name) {\n      bestScore = Math.max(bestScore, getStringScore(formatHumanName(name), query));\n    }\n  }\n\n  return bestScore;\n}\n\n/**\n * Calculates a relevance score of a candidate display string.\n * Higher scores are better.\n * @param str - The candidate display string.\n * @param query - The user entered search string.\n * @returns The relevance score of the candidate string.\n */\nfunction getStringScore(str: string | undefined, query: string): number {\n  if (!str) {\n    return 0;\n  }\n  const index = str.toLowerCase().indexOf(query.toLowerCase());\n  if (index < 0) {\n    return 0;\n  }\n  return 100 - index;\n}\n", "import {\n  Combobox,\n  ComboboxItem,\n  ComboboxProps,\n  Group,\n  Loader,\n  Pill,\n  PillsInput,\n  ScrollAreaAutosize,\n  useCombobox,\n} from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { normalizeErrorString } from '@medplum/core';\nimport { KeyboardEvent, ReactNode, SyntheticEvent, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { killEvent } from '../utils/dom';\nimport { IconCheck } from '@tabler/icons-react';\nimport { AsyncAutocompleteTestIds } from './AsyncAutocomplete.utils';\n\nexport interface AsyncAutocompleteOption<T> extends ComboboxItem {\n  readonly active?: boolean;\n  readonly resource: T;\n}\n\nexport interface AsyncAutocompleteProps<T>\n  extends Omit<ComboboxProps, 'data' | 'defaultValue' | 'loadOptions' | 'onChange' | 'onCreate' | 'searchable'> {\n  readonly name?: string;\n  readonly label?: ReactNode;\n  readonly description?: ReactNode;\n  readonly error?: ReactNode;\n  readonly defaultValue?: T | T[];\n  readonly toOption: (item: T) => AsyncAutocompleteOption<T>;\n  readonly loadOptions: (input: string, signal: AbortSignal) => Promise<T[]>;\n  readonly itemComponent?: (props: AsyncAutocompleteOption<T>) => JSX.Element | ReactNode;\n  readonly pillComponent?: (props: {\n    item: AsyncAutocompleteOption<T>;\n    disabled?: boolean;\n    onRemove: () => void;\n  }) => JSX.Element;\n  readonly emptyComponent?: (props: { search: string }) => JSX.Element | ReactNode;\n  readonly onChange: (item: T[]) => void;\n  readonly onCreate?: (input: string) => T;\n  readonly creatable?: boolean;\n  readonly clearable?: boolean;\n  readonly required?: boolean;\n  readonly className?: string;\n  readonly placeholder?: string;\n  readonly leftSection?: ReactNode;\n  readonly maxValues?: number;\n  readonly optionsDropdownMaxHeight?: number;\n  readonly minInputLength?: number; // minimum number of input characters required before executing loadOptions\n}\n\nexport function AsyncAutocomplete<T>(props: AsyncAutocompleteProps<T>): JSX.Element {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n    onDropdownOpen: () => combobox.updateSelectedOptionIndex('active'),\n  });\n  const {\n    name,\n    label,\n    description,\n    error,\n    defaultValue,\n    toOption,\n    loadOptions,\n    itemComponent,\n    pillComponent,\n    emptyComponent,\n    onChange,\n    onCreate,\n    creatable,\n    clearable,\n    required,\n    placeholder,\n    leftSection,\n    maxValues,\n    optionsDropdownMaxHeight = 320,\n    minInputLength = 0,\n    ...rest\n  } = props;\n  const disabled = rest.disabled; // leave in rest so it also propagates to ComboBox\n  const defaultItems = toDefaultItems(defaultValue);\n  const [search, setSearch] = useState('');\n  const [timer, setTimer] = useState<number>();\n  const [abortController, setAbortController] = useState<AbortController>();\n  const [autoSubmit, setAutoSubmit] = useState<boolean>();\n  const [selected, setSelected] = useState<AsyncAutocompleteOption<T>[]>(defaultItems.map(toOption));\n  const [options, setOptions] = useState<AsyncAutocompleteOption<T>[]>([]);\n  const ItemComponent = itemComponent ?? DefaultItemComponent;\n  const PillComponent = pillComponent ?? DefaultPillComponent;\n  const EmptyComponent = emptyComponent ?? DefaultEmptyComponent;\n\n  const searchRef = useRef<string>();\n  searchRef.current = search;\n\n  const lastLoadOptionsRef = useRef<AsyncAutocompleteProps<T>['loadOptions']>();\n  const lastValueRef = useRef<string>();\n\n  const timerRef = useRef<number>();\n  timerRef.current = timer;\n\n  const abortControllerRef = useRef<AbortController>();\n  abortControllerRef.current = abortController;\n\n  const autoSubmitRef = useRef<boolean>();\n  autoSubmitRef.current = autoSubmit;\n\n  const optionsRef = useRef<AsyncAutocompleteOption<T>[]>();\n  optionsRef.current = options;\n\n  const handleTimer = useCallback((): void => {\n    setTimer(undefined);\n\n    if (searchRef.current === lastValueRef.current && loadOptions === lastLoadOptionsRef.current) {\n      // Same search input and loadOptions function, move on\n      return;\n    }\n    if ((searchRef.current?.length ?? 0) < minInputLength) {\n      return;\n    }\n\n    lastValueRef.current = searchRef.current;\n    lastLoadOptionsRef.current = loadOptions;\n\n    const newAbortController = new AbortController();\n    setAbortController(newAbortController);\n\n    loadOptions(searchRef.current ?? '', newAbortController.signal)\n      .then((newValues: T[]) => {\n        if (!newAbortController.signal.aborted) {\n          setOptions(newValues.map(toOption));\n          if (autoSubmitRef.current) {\n            if (newValues.length > 0) {\n              onChange(newValues.slice(0, 1));\n            }\n            setAutoSubmit(false);\n          } else if (newValues.length > 0) {\n            combobox.openDropdown();\n          }\n        }\n      })\n      .catch((err) => {\n        if (!(newAbortController.signal.aborted || err.message.includes('aborted'))) {\n          showNotification({ color: 'red', message: normalizeErrorString(err) });\n        }\n      })\n      .finally(() => {\n        if (!newAbortController.signal.aborted) {\n          setAbortController(undefined);\n        }\n      });\n  }, [combobox, loadOptions, onChange, toOption, minInputLength]);\n\n  const handleSearchChange = useCallback(\n    (e: SyntheticEvent): void => {\n      if ((options && options.length > 0) || creatable) {\n        combobox.openDropdown();\n      }\n\n      combobox.updateSelectedOptionIndex();\n      setSearch((e.currentTarget as HTMLInputElement).value);\n\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n        setAbortController(undefined);\n      }\n\n      if (timerRef.current !== undefined) {\n        window.clearTimeout(timerRef.current);\n      }\n\n      const newTimer = window.setTimeout(() => handleTimer(), 100);\n      setTimer(newTimer);\n    },\n    [combobox, options, creatable, handleTimer]\n  );\n\n  const addSelected = useCallback(\n    (newValue: string): void => {\n      const alreadySelected = selected.some((v) => v.value === newValue);\n      const newSelected = alreadySelected ? selected.filter((v) => v.value !== newValue) : [...selected];\n      let option = options?.find((option) => option.value === newValue);\n      if (!option && creatable !== false && onCreate) {\n        const createdResource = onCreate(newValue);\n        option = toOption(createdResource);\n      }\n\n      if (option) {\n        // when maxValues is 0, still fire the onChange when an item is selected\n        if (maxValues === 0) {\n          onChange([option.resource]);\n\n          // and clear selected if necessary\n          if (selected.length > 0) {\n            setSelected([]);\n          }\n          return;\n        }\n\n        if (!alreadySelected) {\n          newSelected.push(option);\n        }\n      }\n\n      if (maxValues !== undefined) {\n        while (newSelected.length > maxValues) {\n          // Remove from the front\n          newSelected.shift();\n        }\n      }\n\n      onChange(newSelected.map((v) => v.resource));\n      setSelected(newSelected);\n    },\n    [creatable, options, selected, maxValues, onChange, onCreate, toOption]\n  );\n\n  const handleValueSelect = useMemo(() => {\n    if (disabled) {\n      return undefined;\n    }\n\n    return (val: string): void => {\n      if (disabled) {\n        return;\n      }\n      if (maxValues === 1) {\n        setSearch('');\n        setOptions([]);\n        combobox.closeDropdown();\n      }\n      lastValueRef.current = undefined;\n      if (val === '$create') {\n        addSelected(search);\n      } else {\n        addSelected(val);\n      }\n    };\n  }, [addSelected, combobox, disabled, maxValues, search]);\n\n  const handleValueRemove = useCallback(\n    (item: AsyncAutocompleteOption<T>): void => {\n      const newSelected = selected.filter((v) => v.value !== item.value);\n      onChange(newSelected.map((v) => v.resource));\n      setSelected(newSelected);\n    },\n    [selected, onChange]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent): void => {\n      if (e.key === 'Enter') {\n        if (timer || abortController) {\n          // The user pressed enter, but we don't have results yet.\n          // We need to wait for the results to come in.\n          setAutoSubmit(true);\n        }\n      } else if (e.key === 'Backspace' && search.length === 0) {\n        killEvent(e);\n        handleValueRemove(selected[selected.length - 1]);\n      }\n    },\n    [abortController, handleValueRemove, search.length, selected, timer]\n  );\n\n  useEffect(() => {\n    return () => {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n    };\n  }, []);\n\n  // Based on Mantine MultiSelect:\n  // https://github.com/mantinedev/mantine/blob/master/packages/%40mantine/core/src/components/MultiSelect/MultiSelect.tsx\n  const clearButton = !disabled && clearable && selected.length > 0 && (\n    <Combobox.ClearButton\n      title=\"Clear all\"\n      size={16}\n      onClear={() => {\n        setSearch('');\n        setSelected([]);\n        onChange([]);\n        combobox.closeDropdown();\n      }}\n    />\n  );\n\n  return (\n    <Combobox store={combobox} onOptionSubmit={handleValueSelect} withinPortal={true} shadow=\"xl\" {...rest}>\n      <Combobox.DropdownTarget>\n        <PillsInput\n          label={label}\n          description={description}\n          error={error}\n          className={props.className}\n          leftSection={leftSection}\n          rightSection={abortController ? <Loader size={16} /> : clearButton}\n          required={required}\n          disabled={disabled}\n        >\n          <Pill.Group data-testid={AsyncAutocompleteTestIds.selectedItems}>\n            {selected.map((item) => (\n              <PillComponent\n                key={item.value}\n                item={item}\n                disabled={disabled}\n                onRemove={() => handleValueRemove(item)}\n              />\n            ))}\n            {!disabled && (maxValues === undefined || maxValues === 0 || selected.length < maxValues) && (\n              <Combobox.EventsTarget>\n                <PillsInput.Field\n                  role=\"searchbox\"\n                  name={name}\n                  value={search}\n                  placeholder={placeholder}\n                  onFocus={handleSearchChange}\n                  onBlur={() => {\n                    combobox.closeDropdown();\n                    setSearch('');\n                  }}\n                  onKeyDown={handleKeyDown}\n                  onChange={handleSearchChange}\n                />\n              </Combobox.EventsTarget>\n            )}\n          </Pill.Group>\n        </PillsInput>\n      </Combobox.DropdownTarget>\n\n      <Combobox.Dropdown hidden={options.length === 0} data-testid={AsyncAutocompleteTestIds.options}>\n        <Combobox.Options>\n          <ScrollAreaAutosize type=\"scroll\" mah={optionsDropdownMaxHeight}>\n            {options.map((item) => {\n              const active = selected.some((v) => v.value === item.value);\n              return (\n                <Combobox.Option value={item.value} key={item.value} active={active}>\n                  <ItemComponent {...item} active={active} />\n                </Combobox.Option>\n              );\n            })}\n\n            {creatable && search.trim().length > 0 && (\n              <Combobox.Option value=\"$create\">+ Create {search}</Combobox.Option>\n            )}\n\n            {!creatable && search.trim().length > 0 && options.length === 0 && <EmptyComponent search={search} />}\n          </ScrollAreaAutosize>\n        </Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n\nfunction toDefaultItems<T>(defaultValue: T | T[] | undefined): T[] {\n  if (!defaultValue) {\n    return [];\n  }\n  if (Array.isArray(defaultValue)) {\n    return defaultValue;\n  }\n  return [defaultValue];\n}\n\nfunction DefaultItemComponent<T>(props: AsyncAutocompleteOption<T>): JSX.Element {\n  return (\n    <Group gap=\"xs\">\n      {props.active && <IconCheck size={12} />}\n      <span>{props.label}</span>\n    </Group>\n  );\n}\n\nfunction DefaultPillComponent<T>({\n  item,\n  disabled,\n  onRemove,\n}: {\n  item: AsyncAutocompleteOption<T>;\n  disabled?: boolean;\n  onRemove: () => void;\n}): JSX.Element {\n  return (\n    <Pill withRemoveButton={!disabled} onRemove={onRemove}>\n      {item.label}\n    </Pill>\n  );\n}\n\nfunction DefaultEmptyComponent(): JSX.Element {\n  return <Combobox.Empty>Nothing found</Combobox.Empty>;\n}\n", "export const AsyncAutocompleteTestIds = { selectedItems: 'selected-items', options: 'options' };\n", ".searchInput {\n  input {\n    width: 220px;\n    transition: width 0.1s ease-in-out;\n  }\n\n  input:focus {\n    width: 400px;\n  }\n\n  @media (max-width: 800px) {\n    input {\n      width: 150px;\n    }\n    input:focus {\n      width: 150px;\n    }\n  }\n}\n", "import { Button, AppShell as MantineAppShell, ScrollArea, Space, Text } from '@mantine/core';\nimport { useMedplumNavigate } from '@medplum/react-hooks';\nimport { IconPlus } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { Fragment, MouseEventHandler, ReactNode, SyntheticEvent, useState } from 'react';\nimport { BookmarkDialog } from '../BookmarkDialog/BookmarkDialog';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\nimport classes from './Navbar.module.css';\n\nexport interface NavbarLink {\n  readonly icon?: JSX.Element;\n  readonly label?: string;\n  readonly href: string;\n}\n\nexport interface NavbarMenu {\n  readonly title?: string;\n  readonly links?: NavbarLink[];\n}\n\nexport interface NavbarProps {\n  readonly pathname?: string;\n  readonly searchParams?: URLSearchParams;\n  readonly menus?: NavbarMenu[];\n  readonly closeNavbar: () => void;\n  readonly displayAddBookmark?: boolean;\n  readonly resourceTypeSearchDisabled?: boolean;\n}\n\nexport function Navbar(props: NavbarProps): JSX.Element {\n  const navigate = useMedplumNavigate();\n  const activeLink = getActiveLink(props.pathname, props.searchParams, props.menus);\n  const [bookmarkDialogVisible, setBookmarkDialogVisible] = useState(false);\n\n  function onLinkClick(e: SyntheticEvent, to: string): void {\n    e.stopPropagation();\n    e.preventDefault();\n    navigate(to);\n    if (window.innerWidth < 768) {\n      props.closeNavbar();\n    }\n  }\n\n  function navigateResourceType(resourceType: string | undefined): void {\n    if (resourceType) {\n      navigate(`/${resourceType}`);\n    }\n  }\n\n  return (\n    <>\n      <MantineAppShell.Navbar>\n        <ScrollArea p=\"xs\">\n          {!props.resourceTypeSearchDisabled && (\n            <MantineAppShell.Section mb=\"sm\">\n              <ResourceTypeInput\n                key={window.location.pathname}\n                name=\"resourceType\"\n                placeholder=\"Resource Type\"\n                maxValues={0}\n                onChange={(newValue) => navigateResourceType(newValue)}\n              />\n            </MantineAppShell.Section>\n          )}\n          <MantineAppShell.Section grow>\n            {props.menus?.map((menu) => (\n              <Fragment key={`menu-${menu.title}`}>\n                <Text className={classes.menuTitle}>{menu.title}</Text>\n                {menu.links?.map((link) => (\n                  <NavbarLink\n                    key={link.href}\n                    to={link.href}\n                    active={link.href === activeLink?.href}\n                    onClick={(e) => onLinkClick(e, link.href)}\n                  >\n                    <NavLinkIcon to={link.href} icon={link.icon} />\n                    <span>{link.label}</span>\n                  </NavbarLink>\n                ))}\n              </Fragment>\n            ))}\n            {props.displayAddBookmark && (\n              <Button\n                variant=\"subtle\"\n                size=\"xs\"\n                mt=\"xl\"\n                leftSection={<IconPlus size=\"0.75rem\" />}\n                onClick={() => setBookmarkDialogVisible(true)}\n              >\n                Add Bookmark\n              </Button>\n            )}\n          </MantineAppShell.Section>\n        </ScrollArea>\n      </MantineAppShell.Navbar>\n      {props.pathname && props.searchParams && (\n        <BookmarkDialog\n          pathname={props.pathname}\n          searchParams={props.searchParams}\n          visible={bookmarkDialogVisible}\n          onOk={() => setBookmarkDialogVisible(false)}\n          onCancel={() => setBookmarkDialogVisible(false)}\n        />\n      )}\n    </>\n  );\n}\n\ninterface NavbarLinkProps {\n  readonly to: string;\n  readonly active: boolean;\n  readonly onClick: MouseEventHandler;\n  readonly children: ReactNode;\n}\n\nfunction NavbarLink(props: NavbarLinkProps): JSX.Element {\n  return (\n    <MedplumLink\n      onClick={props.onClick}\n      to={props.to}\n      className={cx(classes.link, { [classes.linkActive]: props.active })}\n    >\n      {props.children}\n    </MedplumLink>\n  );\n}\n\ninterface NavLinkIconProps {\n  readonly to: string;\n  readonly icon?: JSX.Element;\n}\n\nfunction NavLinkIcon(props: NavLinkIconProps): JSX.Element {\n  if (props.icon) {\n    return props.icon;\n  }\n  return <Space w={30} />;\n}\n\n/**\n * Returns the best \"active\" link for the menu.\n * In most cases, the navbar links are simple, and an exact match can determine which link is active.\n * However, we ignore some search parameters to support pagination.\n * But we cannot ignore all search parameters, to support separate links based on search filters.\n * So in the end, we use a simple scoring system based on the number of matching query search params.\n * @param currentPathname - The web browser current pathname.\n * @param currentSearchParams - The web browser current search parameters.\n * @param menus - Collection of navbar menus and links.\n * @returns The active link if one is found.\n */\nfunction getActiveLink(\n  currentPathname: string | undefined,\n  currentSearchParams: URLSearchParams | undefined,\n  menus: NavbarMenu[] | undefined\n): NavbarLink | undefined {\n  if (!currentPathname || !currentSearchParams || !menus) {\n    return undefined;\n  }\n\n  let bestLink = undefined;\n  let bestScore = 0;\n\n  for (const menu of menus) {\n    if (menu.links) {\n      for (const link of menu.links) {\n        const score = getLinkScore(currentPathname, currentSearchParams, link.href);\n        if (score > bestScore) {\n          bestScore = score;\n          bestLink = link;\n        }\n      }\n    }\n  }\n\n  return bestLink;\n}\n\n/**\n * Calculates a score for a link.\n * Zero means \"does not match at all\".\n * One means \"matches the pathname only\".\n * Additional increases for each matching search parameter.\n * Ignores pagination parameters \"_count\" and \"_offset\".\n * @param currentPathname - The web browser current pathname.\n * @param currentSearchParams - The web browser current search parameters.\n * @param linkHref - A candidate link href.\n * @returns The link score.\n */\nfunction getLinkScore(currentPathname: string, currentSearchParams: URLSearchParams, linkHref: string): number {\n  const linkUrl = new URL(linkHref, 'https://example.com');\n  if (currentPathname !== linkUrl.pathname) {\n    return 0;\n  }\n  const ignoredParams = ['_count', '_offset'];\n  for (const [key, value] of linkUrl.searchParams.entries()) {\n    if (ignoredParams.includes(key)) {\n      continue;\n    }\n    if (currentSearchParams.get(key) !== value) {\n      return 0;\n    }\n  }\n  let count = 1;\n  for (const [key, value] of currentSearchParams.entries()) {\n    if (ignoredParams.includes(key)) {\n      continue;\n    }\n    if (linkUrl.searchParams.get(key) === value) {\n      count++;\n    }\n  }\n  return count;\n}\n", "import { Button, Group, Modal, NativeSelect, Stack, TextInput } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { deepClone, normalizeErrorString } from '@medplum/core';\nimport { UserConfiguration } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { Form } from '../Form/Form';\n\ninterface BookmarkDialogProps {\n  readonly pathname: string;\n  readonly searchParams: URLSearchParams;\n  readonly visible: boolean;\n  readonly onOk: () => void;\n  readonly onCancel: () => void;\n  readonly defaultValue?: string;\n}\nexport function BookmarkDialog(props: BookmarkDialogProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const config = medplum.getUserConfiguration() as UserConfiguration;\n\n  function submitHandler(formData: Record<string, string>): void {\n    const { menuname, bookmarkname: name } = formData;\n    const target = `${props.pathname}?${props.searchParams.toString()}`;\n    const newConfig = deepClone(config) as UserConfiguration;\n    const menu = newConfig.menu?.find(({ title }) => title === menuname);\n\n    menu?.link?.push({ name, target });\n    medplum\n      .updateResource(newConfig)\n      .then((res) => {\n        // refresh current config menu\n        config.menu = res.menu;\n        medplum.dispatchEvent({ type: 'change' });\n        showNotification({ color: 'green', message: 'Success' });\n        props.onOk();\n      })\n      .catch((err: any) => {\n        showNotification({ color: 'red', message: normalizeErrorString(err) });\n      });\n  }\n\n  return (\n    <Modal\n      title=\"Add Bookmark\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={props.onCancel}\n    >\n      <Form onSubmit={submitHandler}>\n        <Stack>\n          <SelectMenu config={config}></SelectMenu>\n          <TextInput label=\"Bookmark Name\" type=\"text\" name=\"bookmarkname\" placeholder=\"Bookmark Name\" withAsterisk />\n          <Group justify=\"flex-end\">\n            <Button mt=\"sm\" type=\"submit\">\n              OK\n            </Button>\n          </Group>\n        </Stack>\n      </Form>\n    </Modal>\n  );\n}\n\ninterface SelectMenuProps {\n  readonly config: UserConfiguration | undefined;\n}\n\nfunction SelectMenu(props: SelectMenuProps): JSX.Element {\n  function userConfigToMenu(config: UserConfiguration | undefined): string[] {\n    return config?.menu?.map((menu) => menu.title) as [];\n  }\n  const menus = userConfigToMenu(props.config);\n\n  return <NativeSelect name=\"menuname\" defaultValue={menus[0]} label=\"Select Menu Option\" data={menus} withAsterisk />;\n}\n", "/**\n * Parses an HTML form and returns the result as a JavaScript object.\n * @param form - The HTML form element.\n * @returns Form values in key value pairs.\n */\nexport function parseForm(form: HTMLFormElement): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  for (const element of Array.from(form.elements)) {\n    if (element instanceof HTMLInputElement) {\n      parseInputElement(result, element);\n    } else if (element instanceof HTMLTextAreaElement) {\n      result[element.name] = element.value;\n    } else if (element instanceof HTMLSelectElement) {\n      parseSelectElement(result, element);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Parses an HTML input element.\n * Sets the name/value pair in the result,\n * but only if the element is enabled and checked.\n * @param result - The result builder.\n * @param el - The input element.\n */\nfunction parseInputElement(result: Record<string, string>, el: HTMLInputElement): void {\n  if (el.disabled) {\n    // Ignore disabled elements\n    return;\n  }\n\n  if ((el.type === 'checkbox' || el.type === 'radio') && !el.checked) {\n    // Ignore unchecked radio or checkbox elements\n    return;\n  }\n\n  result[el.name] = el.value;\n}\n\n/**\n * Parses an HTML select element.\n * Sets the name/value pair if one is selected.\n * @param result - The result builder.\n * @param el - The select element.\n */\nfunction parseSelectElement(result: Record<string, string>, el: HTMLSelectElement): void {\n  result[el.name] = el.value;\n}\n", "import { CSSProperties, ReactNode, SyntheticEvent } from 'react';\nimport { parseForm } from './FormUtils';\n\nexport interface FormProps {\n  readonly onSubmit?: (formData: Record<string, string>) => void;\n  readonly style?: CSSProperties;\n  readonly children?: ReactNode;\n  readonly testid?: string;\n}\n\nexport function Form(props: FormProps): JSX.Element {\n  return (\n    <form\n      style={props.style}\n      data-testid={props.testid}\n      onSubmit={(e: SyntheticEvent) => {\n        e.preventDefault();\n        const formData = parseForm(e.target as HTMLFormElement);\n        if (props.onSubmit) {\n          props.onSubmit(formData);\n        }\n      }}\n    >\n      {props.children}\n    </form>\n  );\n}\n", "import { ResourceType } from '@medplum/fhirtypes';\nimport { useCallback, useState } from 'react';\nimport { CodeInput } from '../CodeInput/CodeInput';\n\nexport interface ResourceTypeInputProps {\n  readonly name: string;\n  readonly placeholder?: string;\n  readonly defaultValue?: ResourceType;\n  readonly autoFocus?: boolean;\n  readonly testId?: string;\n  readonly maxValues?: number;\n  readonly onChange?: (value: ResourceType | undefined) => void;\n  readonly disabled?: boolean;\n}\n\nexport function ResourceTypeInput(props: ResourceTypeInputProps): JSX.Element {\n  const [resourceType, setResourceType] = useState<string | undefined>(props.defaultValue);\n  const onChange = props.onChange;\n\n  const setResourceTypeWrapper = useCallback(\n    (newResourceType: string | undefined) => {\n      setResourceType(newResourceType);\n      if (onChange) {\n        onChange(newResourceType as ResourceType);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <CodeInput\n      disabled={props.disabled}\n      data-autofocus={props.autoFocus}\n      data-testid={props.testId}\n      defaultValue={resourceType}\n      onChange={setResourceTypeWrapper}\n      name={props.name}\n      placeholder={props.placeholder}\n      binding=\"https://medplum.com/fhir/ValueSet/resource-types\"\n      creatable={false}\n      maxValues={props.maxValues ?? 1}\n      clearable={false}\n      withHelpText={false}\n    />\n  );\n}\n", "import { ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { ValueSetAutocomplete, ValueSetAutocompleteProps } from '../ValueSetAutocomplete/ValueSetAutocomplete';\n\nexport interface CodeInputProps extends Omit<ValueSetAutocompleteProps, 'defaultValue' | 'onChange'> {\n  readonly defaultValue?: string;\n  readonly onChange: ((value: string | undefined) => void) | undefined;\n}\n\nexport function CodeInput(props: CodeInputProps): JSX.Element {\n  const { defaultValue, onChange, withHelpText, ...rest } = props;\n  const [value, setValue] = useState<string | undefined>(defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newValue = newValues[0];\n    const newCode = valueSetElementToCode(newValue);\n    setValue(newCode);\n    if (onChange) {\n      onChange(newCode);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      defaultValue={codeToValueSetElement(value)}\n      onChange={handleChange}\n      withHelpText={withHelpText ?? true}\n      {...rest}\n    />\n  );\n}\n\nfunction codeToValueSetElement(code: string | undefined): ValueSetExpansionContains | undefined {\n  return code ? { code } : undefined;\n}\n\nfunction valueSetElementToCode(element: ValueSetExpansionContains | undefined): string | undefined {\n  return element?.code;\n}\n", "import { Group, Text } from '@mantine/core';\nimport { ValueSetExpandParams } from '@medplum/core';\nimport { ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { forwardRef, useCallback } from 'react';\nimport {\n  AsyncAutocomplete,\n  AsyncAutocompleteOption,\n  AsyncAutocompleteProps,\n} from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { IconCheck } from '@tabler/icons-react';\n\nexport interface ValueSetAutocompleteProps\n  extends Omit<AsyncAutocompleteProps<ValueSetExpansionContains>, 'loadOptions' | 'toKey' | 'toOption'> {\n  readonly binding: string | undefined;\n  readonly creatable?: boolean;\n  readonly clearable?: boolean;\n  readonly expandParams?: Partial<ValueSetExpandParams>;\n  readonly withHelpText?: boolean;\n}\n\nfunction toKey(element: ValueSetExpansionContains): string {\n  if (typeof element.code === 'string') {\n    return element.code;\n  }\n  return JSON.stringify(element);\n}\n\nfunction getDisplay(item: ValueSetExpansionContains): string {\n  if (typeof item.display === 'string') {\n    return item.display;\n  }\n  return toKey(item);\n}\n\nfunction toOption(element: ValueSetExpansionContains): AsyncAutocompleteOption<ValueSetExpansionContains> {\n  return {\n    value: toKey(element),\n    label: getDisplay(element),\n    resource: element,\n  };\n}\n\nfunction createValue(input: string): ValueSetExpansionContains {\n  return {\n    code: input,\n    display: input,\n  };\n}\n\n/**\n * A low-level component to autocomplete based on a FHIR Valueset.\n * This is the base component for CodeableConceptInput, CodingInput, and CodeInput.\n * @param props - The ValueSetAutocomplete React props.\n * @returns The ValueSetAutocomplete React node.\n */\nexport function ValueSetAutocomplete(props: ValueSetAutocompleteProps): JSX.Element {\n  const medplum = useMedplum();\n  const { binding, creatable, clearable, expandParams, withHelpText, ...rest } = props;\n\n  const loadValues = useCallback(\n    async (input: string, signal: AbortSignal): Promise<ValueSetExpansionContains[]> => {\n      if (!binding) {\n        return [];\n      }\n      const valueSet = await medplum.valueSetExpand(\n        {\n          ...expandParams,\n          url: binding,\n          filter: input,\n        },\n        { signal }\n      );\n      const valueSetElements = valueSet.expansion?.contains ?? [];\n      const newData: ValueSetExpansionContains[] = [];\n      for (const valueSetElement of valueSetElements) {\n        if (valueSetElement.code && !newData.some((item) => item.code === valueSetElement.code)) {\n          newData.push(valueSetElement);\n        }\n      }\n\n      return newData;\n    },\n    [medplum, expandParams, binding]\n  );\n\n  return (\n    <AsyncAutocomplete\n      {...rest}\n      creatable={creatable ?? true}\n      clearable={clearable ?? true}\n      toOption={toOption}\n      loadOptions={loadValues}\n      onCreate={createValue}\n      itemComponent={withHelpText ? ItemComponent : undefined}\n    />\n  );\n}\n\nconst ItemComponent = forwardRef<HTMLDivElement, AsyncAutocompleteOption<ValueSetExpansionContains>>(\n  ({ label, resource, active, ...others }: AsyncAutocompleteOption<ValueSetExpansionContains>, ref) => {\n    return (\n      <div ref={ref} {...others}>\n        <Group wrap=\"nowrap\" gap=\"xs\">\n          {active && <IconCheck size={12} />}\n          <div>\n            <Text>{label}</Text>\n            <Text size=\"xs\" c=\"dimmed\">\n              {`${resource.system}#${resource.code}`}\n            </Text>\n          </div>\n        </Group>\n      </div>\n    );\n  }\n);\n", ".menuTitle {\n  margin: 20px 0 4px 6px;\n  font-size: 9px;\n  font-weight: normal;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n}\n\n.link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: var(--mantine-font-size-sm);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-1));\n  padding: 8px 12px;\n  border-radius: var(--mantine-radius-sm);\n  font-weight: 500;\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    text-decoration: none;\n\n    & svg {\n      color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    }\n  }\n\n  & svg {\n    color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));\n    margin-right: var(--mantine-spacing-sm);\n    stroke-width: 1.5;\n    width: 18px;\n    height: 18px;\n  }\n}\n\n.linkActive {\n  color: var(--mantine-primary-color-filled);\n  background-color: light-dark(var(--mantine-primary-color-light), var(--mantine-primary-color-dark));\n\n  &:hover {\n    color: var(--mantine-primary-color-filled-hover);\n    background-color: light-dark(var(--mantine-primary-color-light-hover), var(--mantine-primary-color-dark-hover));\n\n    & svg {\n      color: var(--mantine-color-blue-light-color);\n    }\n  }\n\n  & svg {\n    color: var(--mantine-color-blue-light-color);\n  }\n}\n", "import { Anchor } from '@mantine/core';\nimport { Attachment } from '@medplum/fhirtypes';\nimport { useCachedBinaryUrl } from '@medplum/react-hooks';\n\nexport interface AttachmentDisplayProps {\n  readonly value?: Attachment;\n  readonly maxWidth?: number;\n}\n\nexport function AttachmentDisplay(props: AttachmentDisplayProps): JSX.Element | null {\n  const { contentType, url: uncachedUrl, title } = props.value ?? {};\n  const url = useCachedBinaryUrl(uncachedUrl);\n\n  if (!url) {\n    return null;\n  }\n\n  return (\n    <div data-testid=\"attachment-display\">\n      {contentType?.startsWith('image/') && (\n        <img data-testid=\"attachment-image\" style={{ maxWidth: props.maxWidth }} src={url} alt={title} />\n      )}\n      {contentType?.startsWith('video/') && (\n        <video data-testid=\"attachment-video\" style={{ maxWidth: props.maxWidth }} controls={true}>\n          <source type={contentType} src={url} />\n        </video>\n      )}\n      {(contentType?.startsWith('text/') ||\n        contentType === 'application/json' ||\n        contentType === 'application/pdf') && (\n        <div data-testid=\"attachment-iframe\" style={{ maxWidth: props.maxWidth, minHeight: 400 }}>\n          <iframe\n            width=\"100%\"\n            height=\"400\"\n            src={url + '#navpanes=0'}\n            allowFullScreen={true}\n            frameBorder={0}\n            seamless={true}\n          />\n        </div>\n      )}\n      <div data-testid=\"download-link\" style={{ padding: '2px 16px 16px 16px' }}>\n        <Anchor\n          // use the `uncachedUrl` to download the file as the cached URL may expire by the time the user clicks the download link\n          href={uncachedUrl}\n          data-testid=\"attachment-details\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          download={getDownloadName(title)}\n        >\n          {title || 'Download'}\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\nfunction getDownloadName(title: string | undefined): string | undefined {\n  // Title often contains the filename by convention\n  return title?.includes('.') ? title : undefined;\n}\n", ".root {\n  display: grid;\n  grid-template-columns: 30% 70%;\n  margin: 0;\n\n  & > dt,\n  & > dd {\n    padding: var(--mantine-spacing-sm);\n    border-top: 0.1px solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n    margin: 0;\n  }\n\n  & > dt:first-of-type,\n  & > dd:first-of-type {\n    border-top: 0;\n    padding-top: 0;\n  }\n\n  & > dt:last-of-type,\n  & > dd:last-of-type {\n    padding-bottom: 0;\n  }\n}\n\n.compact {\n  grid-template-columns: auto 1fr;\n\n  & > dt,\n  & > dd {\n    padding: 0 0 var(--mantine-spacing-xs);\n    border-top: 0;\n  }\n\n  & > dt {\n    padding-right: var(--mantine-spacing-xs);\n  }\n\n  & > dd {\n    padding-left: var(--mantine-spacing-xs);\n  }\n\n  & > dt:last-of-type,\n  & > dd:last-of-type {\n    padding-bottom: 0;\n  }\n}\n", "import cx from 'clsx';\nimport { ReactNode } from 'react';\nimport classes from './DescriptionList.module.css';\n\nexport interface DescriptionListProps {\n  readonly children: ReactNode;\n  readonly compact?: boolean;\n}\n\nexport function DescriptionList(props: DescriptionListProps): JSX.Element {\n  const { children, compact } = props;\n  return <dl className={cx(classes.root, { [classes.compact]: compact })}>{children}</dl>;\n}\n\nexport interface DescriptionListEntryProps {\n  readonly term: string;\n  readonly children: ReactNode;\n}\n\nexport function DescriptionListEntry(props: DescriptionListEntryProps): JSX.Element {\n  return (\n    <>\n      <dt>{props.term}</dt>\n      <dd>{props.children}</dd>\n    </>\n  );\n}\n", "import { Attachment } from '@medplum/fhirtypes';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { DescriptionListEntry } from '../DescriptionList/DescriptionList';\nimport { InternalSchemaElement, getPathDisplayName, isPopulated } from '@medplum/core';\n\nexport interface AttachmentArrayDisplayProps {\n  readonly path?: string;\n  readonly values?: Attachment[];\n  readonly maxWidth?: number;\n  readonly includeDescriptionListEntry?: boolean;\n  readonly property?: InternalSchemaElement;\n}\n\nexport function AttachmentArrayDisplay(props: AttachmentArrayDisplayProps): JSX.Element {\n  const attachmentElements = props.values?.map((v, index) => (\n    <div key={'attatchment-' + index}>\n      <AttachmentDisplay value={v} maxWidth={props.maxWidth} />\n    </div>\n  ));\n\n  let content: JSX.Element;\n  if (props.includeDescriptionListEntry) {\n    if (props.property === undefined) {\n      throw new Error('props.property is required when includeDescriptionListEntry is true');\n    }\n\n    if (!isPopulated(props.path)) {\n      throw new Error('props.path is required when includeDescriptionListEntry is true');\n    }\n\n    // Since arrays are responsible for rendering their own DescriptionListEntry, we must find the key\n    const key = props.path.split('.').pop() as string;\n    content = <DescriptionListEntry term={getPathDisplayName(key)}>{attachmentElements}</DescriptionListEntry>;\n  } else {\n    content = <>{attachmentElements}</>;\n  }\n  return content;\n}\n", "import { ActionIcon } from '@mantine/core';\nimport { Attachment } from '@medplum/fhirtypes';\nimport { IconCircleMinus, IconCloudUpload } from '@tabler/icons-react';\nimport { MouseEvent, useRef, useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { killEvent } from '../utils/dom';\n\nexport interface AttachmentArrayInputProps {\n  readonly name: string;\n  readonly defaultValue?: Attachment[];\n  readonly arrayElement?: boolean;\n  readonly onChange?: (value: Attachment[]) => void;\n  readonly disabled?: boolean;\n}\n\nexport function AttachmentArrayInput(props: AttachmentArrayInputProps): JSX.Element {\n  const [values, setValues] = useState<Attachment[]>(props.defaultValue ?? []);\n\n  const valuesRef = useRef<Attachment[]>();\n  valuesRef.current = values;\n\n  function setValuesWrapper(newValues: Attachment[]): void {\n    setValues(newValues);\n    if (props.onChange) {\n      props.onChange(newValues);\n    }\n  }\n\n  return (\n    <table style={{ width: '100%' }}>\n      <colgroup>\n        <col width=\"97%\" />\n        <col width=\"3%\" />\n      </colgroup>\n      <tbody>\n        {values.map((v: Attachment, index: number) => (\n          <tr key={`${index}-${values.length}`}>\n            <td>\n              <AttachmentDisplay value={v} maxWidth={200} />\n            </td>\n            <td>\n              <ActionIcon\n                disabled={props.disabled}\n                title=\"Remove\"\n                variant=\"subtle\"\n                size=\"sm\"\n                color=\"gray\"\n                onClick={(e: MouseEvent) => {\n                  killEvent(e);\n                  const copy = values.slice();\n                  copy.splice(index, 1);\n                  setValuesWrapper(copy);\n                }}\n              >\n                <IconCircleMinus />\n              </ActionIcon>\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td></td>\n          <td>\n            <AttachmentButton\n              disabled={props.disabled}\n              onUpload={(attachment: Attachment) => {\n                setValuesWrapper([...(valuesRef.current as Attachment[]), attachment]);\n              }}\n            >\n              {(props) => (\n                <ActionIcon {...props} title=\"Add\" variant=\"subtle\" size=\"sm\" color={props.disabled ? 'gray' : 'green'}>\n                  <IconCloudUpload />\n                </ActionIcon>\n              )}\n            </AttachmentButton>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n", "import { normalizeOperationOutcome } from '@medplum/core';\nimport { Attachment, OperationOutcome, Reference } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ChangeEvent, MouseEvent, ReactNode, useRef } from 'react';\nimport { killEvent } from '../utils/dom';\n\nexport interface AttachmentButtonProps {\n  readonly securityContext?: Reference;\n  readonly onUpload: (attachment: Attachment) => void;\n  readonly onUploadStart?: () => void;\n  readonly onUploadProgress?: (e: ProgressEvent) => void;\n  readonly onUploadError?: (outcome: OperationOutcome) => void;\n  children(props: { disabled?: boolean; onClick(e: MouseEvent): void }): ReactNode;\n  readonly disabled?: boolean;\n}\n\nexport function AttachmentButton(props: AttachmentButtonProps): JSX.Element {\n  const medplum = useMedplum();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  function onClick(e: MouseEvent): void {\n    killEvent(e);\n    fileInputRef.current?.click();\n  }\n\n  function onFileChange(e: ChangeEvent): void {\n    killEvent(e);\n    const files = (e.target as HTMLInputElement).files;\n    if (files) {\n      Array.from(files).forEach(processFile);\n    }\n  }\n\n  /**\n   * Processes a single file.\n   * @param file - The file descriptor.\n   */\n  function processFile(file: File): void {\n    if (!file) {\n      return;\n    }\n\n    const fileName = file.name;\n    if (!fileName) {\n      return;\n    }\n\n    if (props.onUploadStart) {\n      props.onUploadStart();\n    }\n\n    medplum\n      .createAttachment({\n        data: file,\n        contentType: file.type || 'application/octet-stream',\n        filename: file.name,\n        securityContext: props.securityContext,\n        onProgress: props.onUploadProgress,\n      })\n      .then((attachment: Attachment) => props.onUpload(attachment))\n      .catch((err) => {\n        if (props.onUploadError) {\n          props.onUploadError(normalizeOperationOutcome(err));\n        }\n      });\n  }\n\n  return (\n    <>\n      <input\n        disabled={props.disabled}\n        type=\"file\"\n        data-testid=\"upload-file-input\"\n        style={{ display: 'none' }}\n        ref={fileInputRef}\n        onChange={(e) => onFileChange(e)}\n      />\n      {props.children({ onClick, disabled: props.disabled })}\n    </>\n  );\n}\n", "import { Button } from '@mantine/core';\nimport { Attachment, Reference } from '@medplum/fhirtypes';\nimport { MouseEvent, useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { killEvent } from '../utils/dom';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface AttachmentInputProps extends ComplexTypeInputProps<Attachment> {\n  readonly arrayElement?: boolean;\n  readonly securityContext?: Reference;\n  readonly onChange?: (value: Attachment | undefined) => void;\n}\n\nexport function AttachmentInput(props: AttachmentInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Attachment | undefined): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  if (value) {\n    return (\n      <>\n        <AttachmentDisplay value={value} maxWidth={200} />\n        <Button\n          disabled={props.disabled}\n          onClick={(e: MouseEvent) => {\n            killEvent(e);\n            setValueWrapper(undefined);\n          }}\n        >\n          Remove\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <AttachmentButton disabled={props.disabled} securityContext={props.securityContext} onUpload={setValueWrapper}>\n      {(props) => <Button {...props}>Upload...</Button>}\n    </AttachmentButton>\n  );\n}\n", "import {\n  buildElementsContext,\n  ElementsContextType,\n  getPathDisplayName,\n  isEmpty,\n  tryGetDataType,\n  TypedValue,\n} from '@medplum/core';\nimport { DEFAULT_IGNORED_NON_NESTED_PROPERTIES, DEFAULT_IGNORED_PROPERTIES } from '../constants';\nimport { DescriptionList, DescriptionListEntry } from '../DescriptionList/DescriptionList';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { useContext, useMemo } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { maybeWrapWithContext } from '../utils/maybeWrapWithContext';\nimport { AccessPolicyResource } from '@medplum/fhirtypes';\n\nconst EXTENSION_KEYS = ['extension', 'modifierExtension'];\nconst IGNORED_PROPERTIES = DEFAULT_IGNORED_PROPERTIES.filter((prop) => !EXTENSION_KEYS.includes(prop));\n\nexport interface BackboneElementDisplayProps {\n  readonly value: TypedValue;\n  /** The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension. */\n  readonly path: string;\n  readonly compact?: boolean;\n  readonly ignoreMissingValues?: boolean;\n  readonly link?: boolean;\n  /** (optional) Profile URL of the structure definition represented by the backbone element */\n  readonly profileUrl?: string;\n  /**\n   * (optional) If provided, inputs specified in `accessPolicyResource.hiddenFields` are not shown.\n   */\n  readonly accessPolicyResource?: AccessPolicyResource;\n}\n\nexport function BackboneElementDisplay(props: BackboneElementDisplayProps): JSX.Element | null {\n  const typedValue = props.value;\n  const { value, type: typeName } = typedValue;\n  const parentElementsContext = useContext(ElementsContext);\n  const profileUrl = props.profileUrl ?? parentElementsContext?.profileUrl;\n  const typeSchema = useMemo(() => tryGetDataType(typeName, profileUrl), [profileUrl, typeName]);\n\n  const newElementsContext: ElementsContextType | undefined = useMemo(() => {\n    if (!typeSchema) {\n      return undefined;\n    }\n    return buildElementsContext({\n      parentContext: parentElementsContext,\n      elements: typeSchema.elements,\n      path: props.path,\n      profileUrl: typeSchema.url,\n      accessPolicyResource: props.accessPolicyResource,\n    });\n  }, [typeSchema, parentElementsContext, props.path, props.accessPolicyResource]);\n\n  if (isEmpty(value)) {\n    return null;\n  }\n\n  if (!typeSchema) {\n    return <div>{typeName}&nbsp;not implemented</div>;\n  }\n\n  if (\n    typeof value === 'object' &&\n    'name' in value &&\n    Object.keys(value).length === 1 &&\n    typeof value.name === 'string'\n  ) {\n    // Special case for common BackboneElement pattern\n    // Where there is an object with a single property 'name'\n    // Just display the name value.\n    return <div>{value.name}</div>;\n  }\n\n  // Since this component may create a new ElementsContext, compute the effective context for use in this component\n  const elementsContext = newElementsContext ?? parentElementsContext;\n\n  return maybeWrapWithContext(\n    ElementsContext.Provider,\n    newElementsContext,\n    <DescriptionList compact={props.compact}>\n      {Object.entries(elementsContext.elements).map(([key, property]) => {\n        if (EXTENSION_KEYS.includes(key) && isEmpty(property.slicing?.slices)) {\n          // an extension property without slices has no nested extensions\n          return null;\n        } else if (IGNORED_PROPERTIES.includes(key)) {\n          return null;\n        } else if (DEFAULT_IGNORED_NON_NESTED_PROPERTIES.includes(key) && property.path.split('.').length === 2) {\n          return null;\n        }\n\n        // Profiles can include nested elements in addition to their containing element, e.g.:\n        // identifier, identifier.use, identifier.system\n        // Skip nested elements, e.g. identifier.use, since they are handled by the containing element\n        if (key.includes('.')) {\n          return null;\n        }\n\n        const [propertyValue, propertyType] = getValueAndType(typedValue, key, elementsContext.profileUrl);\n        if ((props.ignoreMissingValues || property.max === 0) && isEmpty(propertyValue)) {\n          return null;\n        }\n\n        if (props.path.endsWith('.extension') && (key === 'url' || key === 'id')) {\n          return null;\n        }\n\n        // Array values provide their own DescriptionListEntry wrapper(s)\n        const isArrayProperty = property.max > 1 || property.isArray;\n        const resourcePropertyDisplay = (\n          <ResourcePropertyDisplay\n            key={key}\n            property={property}\n            propertyType={propertyType}\n            path={props.path + '.' + key}\n            value={propertyValue}\n            ignoreMissingValues={props.ignoreMissingValues}\n            includeArrayDescriptionListEntry={isArrayProperty}\n            link={props.link}\n          />\n        );\n\n        if (isArrayProperty) {\n          return resourcePropertyDisplay;\n        }\n\n        return (\n          <DescriptionListEntry key={key} term={getPathDisplayName(key)}>\n            {resourcePropertyDisplay}\n          </DescriptionListEntry>\n        );\n      })}\n    </DescriptionList>\n  );\n}\n", "import { ActionIcon, Box, CopyButton, Tooltip } from '@mantine/core';\nimport {\n  InternalSchemaElement,\n  PropertyType,\n  formatDateTime,\n  formatPeriod,\n  formatTiming,\n  isEmpty,\n} from '@medplum/core';\nimport { IconCheck, IconCopy } from '@tabler/icons-react';\nimport { AddressDisplay } from '../AddressDisplay/AddressDisplay';\nimport { AttachmentArrayDisplay } from '../AttachmentArrayDisplay/AttachmentArrayDisplay';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { BackboneElementDisplay } from '../BackboneElementDisplay/BackboneElementDisplay';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { CodingDisplay } from '../CodingDisplay/CodingDisplay';\nimport { ContactDetailDisplay } from '../ContactDetailDisplay/ContactDetailDisplay';\nimport { ContactPointDisplay } from '../ContactPointDisplay/ContactPointDisplay';\nimport { HumanNameDisplay } from '../HumanNameDisplay/HumanNameDisplay';\nimport { IdentifierDisplay } from '../IdentifierDisplay/IdentifierDisplay';\nimport { MoneyDisplay } from '../MoneyDisplay/MoneyDisplay';\nimport { QuantityDisplay } from '../QuantityDisplay/QuantityDisplay';\nimport { RangeDisplay } from '../RangeDisplay/RangeDisplay';\nimport { RatioDisplay } from '../RatioDisplay/RatioDisplay';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { ResourceArrayDisplay } from '../ResourceArrayDisplay/ResourceArrayDisplay';\nimport { ExtensionDisplay } from '../ExtensionDisplay/ExtensionDisplay';\nimport { ElementDefinitionType } from '@medplum/fhirtypes';\n\nexport interface ResourcePropertyDisplayProps {\n  readonly property?: InternalSchemaElement;\n  /** The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension. */\n  readonly path?: string;\n  readonly propertyType: string;\n  readonly value: any;\n  readonly arrayElement?: boolean;\n  readonly maxWidth?: number;\n  readonly ignoreMissingValues?: boolean;\n  readonly link?: boolean;\n  /** (Optional) The `ElemendDefinitionType` to display the property against. Used when displaying extensions.  */\n  readonly elementDefinitionType?: ElementDefinitionType;\n  /** (Optional) If true and `property` is an array, output is wrapped with a DescriptionListEntry */\n  readonly includeArrayDescriptionListEntry?: boolean;\n}\n\n/**\n * Low-level component that renders a property from a given resource, given type information.\n * @param props - The ResourcePropertyDisplay React props.\n * @returns The ResourcePropertyDisplay React node.\n */\nexport function ResourcePropertyDisplay(props: ResourcePropertyDisplayProps): JSX.Element | null {\n  const { property, propertyType, value } = props;\n\n  const isIdProperty = property?.path?.endsWith('.id');\n  if (isIdProperty) {\n    return (\n      <Box component=\"div\" style={{ display: 'flex', gap: 3, alignItems: 'center' }}>\n        {value}\n        {!isEmpty(value) && (\n          <CopyButton value={value} timeout={2000}>\n            {({ copied, copy }) => (\n              <Tooltip label={copied ? 'Copied' : 'Copy'} withArrow position=\"right\">\n                <ActionIcon variant=\"subtle\" color={copied ? 'teal' : 'gray'} onClick={copy}>\n                  {copied ? <IconCheck size=\"1rem\" /> : <IconCopy size=\"1rem\" />}\n                </ActionIcon>\n              </Tooltip>\n            )}\n          </CopyButton>\n        )}\n      </Box>\n    );\n  }\n\n  if (property && (property.isArray || property.max > 1) && !props.arrayElement) {\n    if (propertyType === PropertyType.Attachment) {\n      return (\n        <AttachmentArrayDisplay\n          values={value}\n          maxWidth={props.maxWidth}\n          includeDescriptionListEntry={props.includeArrayDescriptionListEntry}\n          property={property}\n          path={props.path}\n        />\n      );\n    }\n    return (\n      <ResourceArrayDisplay\n        path={props.path}\n        property={property}\n        propertyType={propertyType}\n        values={value}\n        includeDescriptionListEntry={props.includeArrayDescriptionListEntry}\n        ignoreMissingValues={props.ignoreMissingValues}\n        link={props.link}\n      />\n    );\n  }\n\n  switch (propertyType) {\n    case PropertyType.boolean:\n      return <>{value === undefined ? '' : Boolean(value).toString()}</>;\n    case PropertyType.SystemString:\n    case PropertyType.string:\n      return <div style={{ whiteSpace: 'pre-wrap' }}>{value}</div>;\n    case PropertyType.code:\n    case PropertyType.date:\n    case PropertyType.decimal:\n    case PropertyType.id:\n    case PropertyType.integer:\n    case PropertyType.positiveInt:\n    case PropertyType.unsignedInt:\n    case PropertyType.uri:\n    case PropertyType.url:\n      return <>{value}</>;\n    case PropertyType.canonical:\n      return <ReferenceDisplay value={{ reference: value }} link={props.link} />;\n    case PropertyType.dateTime:\n    case PropertyType.instant:\n      return <>{formatDateTime(value)}</>;\n    case PropertyType.markdown:\n      return <pre>{value}</pre>;\n    case PropertyType.Address:\n      return <AddressDisplay value={value} />;\n    case PropertyType.Annotation:\n      return <>{value?.text}</>;\n    case PropertyType.Attachment:\n      return <AttachmentDisplay value={value} maxWidth={props.maxWidth} />;\n    case PropertyType.CodeableConcept:\n      return <CodeableConceptDisplay value={value} />;\n    case PropertyType.Coding:\n      return <CodingDisplay value={value} />;\n    case PropertyType.ContactDetail:\n      return <ContactDetailDisplay value={value} />;\n    case PropertyType.ContactPoint:\n      return <ContactPointDisplay value={value} />;\n    case PropertyType.HumanName:\n      return <HumanNameDisplay value={value} />;\n    case PropertyType.Identifier:\n      return <IdentifierDisplay value={value} />;\n    case PropertyType.Money:\n      return <MoneyDisplay value={value} />;\n    case PropertyType.Period:\n      return <>{formatPeriod(value)}</>;\n    case PropertyType.Quantity:\n    case PropertyType.Duration:\n      return <QuantityDisplay value={value} />;\n    case PropertyType.Range:\n      return <RangeDisplay value={value} />;\n    case PropertyType.Ratio:\n      return <RatioDisplay value={value} />;\n    case PropertyType.Reference:\n      return <ReferenceDisplay value={value} link={props.link} />;\n    case PropertyType.Timing:\n      return <>{formatTiming(value)}</>;\n    case PropertyType.Dosage:\n    case PropertyType.UsageContext:\n      if (!props.path) {\n        throw Error(`Displaying property of type ${props.propertyType} requires path`);\n      }\n      return (\n        <BackboneElementDisplay\n          path={props.path}\n          value={{ type: propertyType, value }}\n          compact={true}\n          ignoreMissingValues={props.ignoreMissingValues}\n        />\n      );\n    case PropertyType.Extension:\n      if (!props.path) {\n        throw Error(`Displaying property of type ${props.propertyType} requires path`);\n      }\n      return (\n        <ExtensionDisplay\n          path={props.path}\n          value={value}\n          compact={true}\n          ignoreMissingValues={props.ignoreMissingValues}\n          elementDefinitionType={props.elementDefinitionType}\n        />\n      );\n    default:\n      if (!property) {\n        throw Error(`Displaying property of type ${props.propertyType} requires element schema`);\n      }\n      if (!props.path) {\n        throw Error(`Displaying property of type ${props.propertyType} requires path`);\n      }\n      return (\n        <BackboneElementDisplay\n          path={props.path}\n          value={{ type: property.type[0].code, value }}\n          compact={true}\n          ignoreMissingValues={props.ignoreMissingValues}\n        />\n      );\n  }\n}\n", "import { formatCodeableConcept } from '@medplum/core';\nimport { CodeableConcept } from '@medplum/fhirtypes';\n\nexport interface CodeableConceptDisplayProps {\n  readonly value?: CodeableConcept;\n}\n\nexport function CodeableConceptDisplay(props: CodeableConceptDisplayProps): JSX.Element {\n  return <>{formatCodeableConcept(props.value)}</>;\n}\n", "import { formatCoding } from '@medplum/core';\nimport { Coding } from '@medplum/fhirtypes';\n\nexport interface CodingDisplayProps {\n  readonly value?: Coding;\n}\n\nexport function CodingDisplay(props: CodingDisplayProps): JSX.Element {\n  return <>{formatCoding(props.value)}</>;\n}\n", "import { ContactPoint } from '@medplum/fhirtypes';\n\nexport interface ContactPointDisplayProps {\n  readonly value?: ContactPoint;\n}\n\nexport function ContactPointDisplay(props: ContactPointDisplayProps): JSX.Element | null {\n  const contactPoint = props.value;\n  if (!contactPoint) {\n    return null;\n  }\n\n  const builder = [];\n\n  if (contactPoint.value) {\n    builder.push(contactPoint.value);\n  }\n\n  if (contactPoint.use || contactPoint.system) {\n    builder.push(' [');\n\n    if (contactPoint.use) {\n      builder.push(contactPoint.use);\n    }\n\n    if (contactPoint.use && contactPoint.system) {\n      builder.push(' ');\n    }\n\n    if (contactPoint.system) {\n      builder.push(contactPoint.system);\n    }\n\n    builder.push(']');\n  }\n\n  return <>{builder.join('').trim()}</>;\n}\n", "import { ContactDetail } from '@medplum/fhirtypes';\nimport { ContactPointDisplay } from '../ContactPointDisplay/ContactPointDisplay';\n\nexport interface ContactDetailDisplayProps {\n  readonly value?: ContactDetail;\n}\n\nexport function ContactDetailDisplay(props: ContactDetailDisplayProps): JSX.Element | null {\n  const contactDetail = props.value;\n  if (!contactDetail) {\n    return null;\n  }\n\n  return (\n    <>\n      {contactDetail.name}\n      {contactDetail.name && ': '}\n      {contactDetail.telecom?.map((telecom) => (\n        <ContactPointDisplay key={`telecom-${contactDetail.name}-${telecom.value}`} value={telecom} />\n      ))}\n    </>\n  );\n}\n", "import { Identifier } from '@medplum/fhirtypes';\n\nexport interface IdentifierDisplayProps {\n  readonly value?: Identifier;\n}\n\nexport function IdentifierDisplay(props: IdentifierDisplayProps): JSX.Element {\n  return (\n    <div>\n      {props.value?.system}: {props.value?.value}\n    </div>\n  );\n}\n", "import { formatMoney } from '@medplum/core';\nimport { Money } from '@medplum/fhirtypes';\n\nexport interface MoneyDisplayProps {\n  readonly value?: Money;\n}\n\nexport function MoneyDisplay(props: MoneyDisplayProps): JSX.Element | null {\n  return <>{formatMoney(props.value)}</>;\n}\n", "import { formatQuantity } from '@medplum/core';\nimport { Quantity } from '@medplum/fhirtypes';\n\nexport interface QuantityDisplayProps {\n  readonly value?: Quantity;\n}\n\nexport function QuantityDisplay(props: QuantityDisplayProps): JSX.Element | null {\n  return <>{formatQuantity(props.value)}</>;\n}\n", "import { formatRange } from '@medplum/core';\nimport { Range } from '@medplum/fhirtypes';\n\nexport interface RangeDisplayProps {\n  readonly value?: Range;\n}\n\nexport function RangeDisplay(props: RangeDisplayProps): JSX.Element | null {\n  return <>{formatRange(props.value)}</>;\n}\n", "import { Ratio } from '@medplum/fhirtypes';\nimport { QuantityDisplay } from '../QuantityDisplay/QuantityDisplay';\n\nexport interface RatioDisplayProps {\n  readonly value?: Ratio;\n}\n\nexport function RatioDisplay(props: RatioDisplayProps): JSX.Element | null {\n  const value = props.value;\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <>\n      <QuantityDisplay value={value.numerator} />\n      &nbsp;/&nbsp;\n      <QuantityDisplay value={value.denominator} />\n    </>\n  );\n}\n", "import { stringify } from '@medplum/core';\nimport { Reference } from '@medplum/fhirtypes';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface ReferenceDisplayProps {\n  readonly value?: Reference;\n  readonly link?: boolean;\n}\n\nexport function ReferenceDisplay(props: ReferenceDisplayProps): JSX.Element | null {\n  if (!props.value) {\n    return null;\n  }\n\n  const displayString = props.value.display || props.value.reference || stringify(props.value);\n\n  // The \"link\" prop defaults to \"true\"; undefined is treated as \"true\"\n  // To disable the link, it must be explicitly \"false\"\n  if (props.link !== false && props.value.reference) {\n    return <MedplumLink to={props.value}>{displayString}</MedplumLink>;\n  } else {\n    return <>{displayString}</>;\n  }\n}\n", "import { InternalSchemaElement, SliceDefinitionWithTypes, getPathDisplayName, isPopulated } from '@medplum/core';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { useState, useContext, useEffect, useMemo } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { prepareSlices, assignValuesIntoSlices } from '../ResourceArrayInput/ResourceArrayInput.utils';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { SliceDisplay } from '../SliceDisplay/SliceDisplay';\nimport { DescriptionListEntry } from '../DescriptionList/DescriptionList';\n\nexport interface ResourceArrayDisplayProps {\n  /** The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension. */\n  readonly path?: string;\n  readonly property: InternalSchemaElement;\n  readonly propertyType: string;\n  readonly values: any[];\n  readonly ignoreMissingValues?: boolean;\n  readonly link?: boolean;\n  readonly includeDescriptionListEntry?: boolean;\n}\n\nexport function ResourceArrayDisplay(props: ResourceArrayDisplayProps): JSX.Element | null {\n  const { property, propertyType } = props;\n  const medplum = useMedplum();\n  const values = useMemo<any[]>(() => (Array.isArray(props.values) ? props.values : []), [props.values]);\n  const [loading, setLoading] = useState(true);\n  const [slices, setSlices] = useState<SliceDefinitionWithTypes[]>([]);\n  const [slicedValues, setSlicedValues] = useState<any[][]>(() => [values]);\n  const ctx = useContext(ElementsContext);\n\n  useEffect(() => {\n    prepareSlices({\n      medplum,\n      property,\n    })\n      .then((slices) => {\n        setSlices(slices);\n        const slicedValues = assignValuesIntoSlices(values, slices, property.slicing, ctx.profileUrl);\n        setSlicedValues(slicedValues);\n        setLoading(false);\n      })\n      .catch((reason) => {\n        console.error(reason);\n        setLoading(false);\n      });\n  }, [medplum, property, ctx.profileUrl, setSlicedValues, values]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  let nonSliceContent: JSX.Element | undefined;\n  const showNonSliceValues = property.type[0]?.code !== 'Extension';\n  if (showNonSliceValues) {\n    const nonSliceValues = slicedValues[slices.length];\n    const nonSliceElements = nonSliceValues.map((value, valueIndex) => (\n      <div key={`${valueIndex}-${nonSliceValues.length}`}>\n        <ResourcePropertyDisplay\n          path={props.path}\n          arrayElement={true}\n          property={property}\n          propertyType={propertyType}\n          value={value}\n          ignoreMissingValues={props.ignoreMissingValues}\n          link={props.link}\n        />\n      </div>\n    ));\n\n    if (props.includeDescriptionListEntry) {\n      // Since arrays are responsible for rendering their own DescriptionListEntry, we must find the key\n      if (!isPopulated(props.path)) {\n        throw new Error('props.path is required when includeDescriptionListEntry is true');\n      }\n      const key = props.path.split('.').pop() as string;\n      nonSliceContent = <DescriptionListEntry term={getPathDisplayName(key)}>{nonSliceElements}</DescriptionListEntry>;\n    } else {\n      nonSliceContent = <>{nonSliceElements}</>;\n    }\n  }\n\n  return (\n    <>\n      {slices.map((slice, sliceIndex) => {\n        if (!props.path) {\n          throw Error(`Displaying a resource property with slices of type ${props.propertyType} requires path`);\n        }\n        let sliceDisplay = (\n          <SliceDisplay\n            key={slice.name}\n            path={props.path}\n            slice={slice}\n            property={property}\n            value={slicedValues[sliceIndex]}\n            ignoreMissingValues={props.ignoreMissingValues}\n            link={props.link}\n          />\n        );\n\n        if (props.includeDescriptionListEntry) {\n          sliceDisplay = (\n            <DescriptionListEntry key={slice.name} term={getPathDisplayName(slice.name)}>\n              {sliceDisplay}\n            </DescriptionListEntry>\n          );\n        }\n        return sliceDisplay;\n      })}\n\n      {nonSliceContent}\n    </>\n  );\n}\n", "import {\n  InternalSchemaElement,\n  MedplumClient,\n  SliceDefinitionWithTypes,\n  SlicingRules,\n  getValueSliceName,\n  isPopulated,\n  isSliceDefinitionWithTypes,\n  tryGetProfile,\n} from '@medplum/core';\n\nexport function assignValuesIntoSlices<T>(\n  values: T[],\n  slices: SliceDefinitionWithTypes[],\n  slicing: SlicingRules | undefined,\n  profileUrl: string | undefined\n): T[][] {\n  if (!isPopulated(slicing?.slices)) {\n    return [values];\n  }\n\n  // store values in an array of arrays: one for each slice plus another for non-sliced values\n  const slicedValues: T[][] = new Array(slices.length + 1);\n  for (let i = 0; i < slicedValues.length; i++) {\n    slicedValues[i] = [];\n  }\n\n  for (const value of values) {\n    const sliceName = getValueSliceName(value, slices, slicing.discriminator, profileUrl);\n\n    let sliceIndex = sliceName ? slices.findIndex((slice) => slice.name === sliceName) : -1;\n    // -1 can come from either findIndex or the ternary else\n    if (sliceIndex === -1) {\n      sliceIndex = slices.length;\n    }\n    slicedValues[sliceIndex].push(value);\n  }\n\n  return slicedValues;\n}\n\nexport async function prepareSlices({\n  medplum,\n  property,\n}: {\n  medplum: MedplumClient;\n  property: InternalSchemaElement;\n}): Promise<SliceDefinitionWithTypes[]> {\n  return new Promise((resolve, reject) => {\n    if (!property.slicing) {\n      resolve([]);\n      return;\n    }\n\n    const supportedSlices: SliceDefinitionWithTypes[] = [];\n    const profileUrls: (string | undefined)[] = [];\n    const promises: Promise<void>[] = [];\n    for (const slice of property.slicing.slices) {\n      if (!isSliceDefinitionWithTypes(slice)) {\n        console.debug('Unsupported slice definition', slice);\n        continue;\n      }\n\n      let profileUrl: string | undefined;\n      // If elements are not defined for the slice, look for a profile\n      if (!isPopulated(slice.elements)) {\n        profileUrl = slice.type[0]?.profile?.[0];\n      }\n\n      // important to keep these three arrays the same length;\n      supportedSlices.push(slice);\n      profileUrls.push(profileUrl);\n      if (profileUrl) {\n        promises.push(medplum.requestProfileSchema(profileUrl));\n      }\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        for (let i = 0; i < supportedSlices.length; i++) {\n          const slice = supportedSlices[i];\n          const profileUrl = profileUrls[i];\n          if (profileUrl) {\n            const typeSchema = tryGetProfile(profileUrl);\n            slice.typeSchema = typeSchema;\n          }\n        }\n        resolve(supportedSlices);\n      })\n      .catch(reject);\n  });\n}\n", "import {\n  SliceDefinitionWithTypes,\n  InternalSchemaElement,\n  ElementsContextType,\n  buildElementsContext,\n  isPopulated,\n} from '@medplum/core';\nimport { useContext, useMemo } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { maybeWrapWithContext } from '../utils/maybeWrapWithContext';\n\nexport interface SliceDisplayProps {\n  readonly path: string;\n  readonly slice: SliceDefinitionWithTypes;\n  readonly property: InternalSchemaElement;\n  readonly value: any[];\n  readonly ignoreMissingValues?: boolean;\n  readonly link?: boolean;\n}\n\nexport function SliceDisplay(props: SliceDisplayProps): JSX.Element {\n  const { slice, property } = props;\n\n  const sliceElements = slice.typeSchema?.elements ?? slice.elements;\n\n  const parentContext = useContext(ElementsContext);\n\n  const contextValue: ElementsContextType | undefined = useMemo(() => {\n    if (isPopulated(sliceElements)) {\n      return buildElementsContext({\n        parentContext: parentContext,\n        elements: sliceElements,\n        path: props.path,\n        profileUrl: slice.typeSchema?.url,\n      });\n    }\n    return undefined;\n  }, [parentContext, props.path, slice.typeSchema?.url, sliceElements]);\n\n  return maybeWrapWithContext(\n    ElementsContext.Provider,\n    contextValue,\n    <>\n      {props.value.map((value, valueIndex) => {\n        return (\n          <div key={`${valueIndex}-${props.value.length}`}>\n            <ResourcePropertyDisplay\n              property={property}\n              path={props.path}\n              arrayElement={true}\n              elementDefinitionType={slice.type[0]}\n              propertyType={slice.type[0].code}\n              value={value}\n              ignoreMissingValues={props.ignoreMissingValues}\n              link={props.link}\n            />\n          </div>\n        );\n      })}\n    </>\n  );\n}\n", "import { Context } from 'react';\n\nexport function maybeWrapWithContext<T>(\n  ContextProvider: Context<T>['Provider'],\n  contextValue: T | undefined,\n  contents: JSX.Element\n): JSX.Element {\n  if (contextValue !== undefined) {\n    return <ContextProvider value={contextValue}>{contents}</ContextProvider>;\n  }\n\n  return contents;\n}\n", "import {\n  ElementType,\n  InternalTypeSchema,\n  getDataType,\n  isPopulated,\n  isProfileLoaded,\n  tryGetProfile,\n} from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { BackboneElementDisplay } from '../BackboneElementDisplay/BackboneElementDisplay';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\n\nexport type ExtensionDisplayProps = {\n  /** The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension. */\n  readonly path: string;\n  readonly elementDefinitionType?: ElementType;\n  readonly value: any;\n  readonly ignoreMissingValues?: boolean;\n  readonly link?: boolean;\n  readonly compact?: boolean;\n};\n\nexport function ExtensionDisplay(props: ExtensionDisplayProps): JSX.Element | null {\n  const { elementDefinitionType } = props;\n\n  const medplum = useMedplum();\n  const ctx = useContext(ElementsContext);\n  const [typeSchema, setTypeSchema] = useState<InternalTypeSchema>(getDataType('Extension'));\n  const profileUrl: string | undefined = useMemo(() => {\n    if (!isPopulated(elementDefinitionType?.profile)) {\n      return undefined;\n    }\n\n    return elementDefinitionType.profile[0] satisfies string;\n  }, [elementDefinitionType]);\n  const [loadingProfile, setLoadingProfile] = useState(profileUrl !== undefined);\n\n  useEffect(() => {\n    if (profileUrl) {\n      setLoadingProfile(true);\n      medplum\n        .requestProfileSchema(profileUrl)\n        .then(() => {\n          const profile = tryGetProfile(profileUrl);\n          setLoadingProfile(false);\n          if (profile) {\n            setTypeSchema(profile);\n          }\n        })\n        .catch((reason) => {\n          setLoadingProfile(false);\n          console.warn(reason);\n        });\n    }\n  }, [medplum, profileUrl]);\n\n  if (profileUrl && (loadingProfile || !isProfileLoaded(profileUrl))) {\n    return <div>Loading...</div>;\n  }\n\n  const valueElement = typeSchema.elements['value[x]'];\n  const extensionHasValue = valueElement?.max !== 0;\n  if (extensionHasValue) {\n    const [propertyValue, propertyType] = getValueAndType(\n      { type: 'Extension', value: props.value },\n      'value[x]',\n      profileUrl ?? ctx.profileUrl\n    );\n    return <ResourcePropertyDisplay propertyType={propertyType} value={propertyValue} />;\n  }\n\n  return (\n    <BackboneElementDisplay\n      path={props.path}\n      value={{ type: typeSchema.type as string, value: props.value }}\n      compact={props.compact}\n      ignoreMissingValues={props.ignoreMissingValues}\n      link={props.link}\n      profileUrl={profileUrl}\n    />\n  );\n}\n", "import {\n  getTypedPropertyValue,\n  getTypedPropertyValueWithSchema,\n  InternalSchemaElement,\n  TypedValue,\n} from '@medplum/core';\n\n/**\n * Returns the value of the property and the property type.\n * Some property definitions support multiple types.\n * For example, \"Observation.value[x]\" can be \"valueString\", \"valueInteger\", \"valueQuantity\", etc.\n * According to the spec, there can only be one property for a given element definition.\n * This function returns the value and the type.\n * @param context - The base context (usually a FHIR resource).\n * @param path - The property path.\n * @param profileUrl - The property path.\n * @returns The value of the property and the property type.\n */\nexport function getValueAndType(context: TypedValue, path: string, profileUrl?: string): [any, string] {\n  const typedResult = getTypedPropertyValue(context, path, { profileUrl });\n  if (!typedResult) {\n    return [undefined, 'undefined'];\n  }\n\n  if (Array.isArray(typedResult)) {\n    return [typedResult.map((e) => e.value), typedResult[0].type];\n  }\n\n  return [typedResult.value, typedResult.type];\n}\n\n/**\n * Returns the value of the property and the property type.\n * Some property definitions support multiple types.\n * For example, \"Observation.value[x]\" can be \"valueString\", \"valueInteger\", \"valueQuantity\", etc.\n * According to the spec, there can only be one property for a given element definition.\n * This function returns the value and the type.\n * @param typedValue - The base context (usually a FHIR resource).\n * @param path - The property path.\n * @param element - The property element definition.\n * @returns The value of the property and the property type.\n */\nexport function getValueAndTypeFromElement(\n  typedValue: TypedValue,\n  path: string,\n  element: InternalSchemaElement\n): [any, string] {\n  const typedResult = getTypedPropertyValueWithSchema(typedValue, path, element);\n  if (!typedResult) {\n    return [undefined, 'undefined'];\n  }\n\n  if (Array.isArray(typedResult)) {\n    return [typedResult.map((e) => e.value), typedResult[0].type];\n  }\n\n  return [typedResult.value, typedResult.type];\n}\n", "import { ElementsContextType, buildElementsContext, tryGetDataType } from '@medplum/core';\nimport { AccessPolicyResource } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { ElementsInput } from '../ElementsInput/ElementsInput';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { BaseInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { maybeWrapWithContext } from '../utils/maybeWrapWithContext';\n\nexport interface BackboneElementInputProps extends BaseInputProps {\n  /** Type name the backbone element represents */\n  readonly typeName: string;\n  /** (optional) The contents of the resource represented by the backbone element */\n  readonly defaultValue?: any;\n  /** (optional) callback function that is called when the value of the backbone element changes */\n  readonly onChange?: (value: any) => void;\n  /** (optional) Profile URL of the structure definition represented by the backbone element */\n  readonly profileUrl?: string;\n  /**\n   * (optional) If provided, inputs specified in `accessPolicyResource.readonlyFields` are not editable\n   * and inputs specified in `accessPolicyResource.hiddenFields` are not shown.\n   */\n  readonly accessPolicyResource?: AccessPolicyResource;\n}\n\nexport function BackboneElementInput(props: BackboneElementInputProps): JSX.Element {\n  const [defaultValue] = useState(() => props.defaultValue ?? {});\n  const parentElementsContext = useContext(ElementsContext);\n  const profileUrl = props.profileUrl ?? parentElementsContext?.profileUrl;\n  const typeSchema = useMemo(() => tryGetDataType(props.typeName, profileUrl), [props.typeName, profileUrl]);\n  const type = typeSchema?.type ?? props.typeName;\n\n  const contextValue: ElementsContextType | undefined = useMemo(() => {\n    if (!typeSchema) {\n      return undefined;\n    }\n    return buildElementsContext({\n      parentContext: parentElementsContext,\n      elements: typeSchema.elements,\n      path: props.path,\n      profileUrl: typeSchema.url,\n      accessPolicyResource: props.accessPolicyResource,\n    });\n  }, [typeSchema, parentElementsContext, props.path, props.accessPolicyResource]);\n\n  if (!typeSchema) {\n    return <div>{type}&nbsp;not implemented</div>;\n  }\n\n  return maybeWrapWithContext(\n    ElementsContext.Provider,\n    contextValue,\n    <ElementsInput\n      path={props.path}\n      valuePath={props.valuePath}\n      type={type}\n      defaultValue={defaultValue}\n      onChange={props.onChange}\n      outcome={props.outcome}\n    />\n  );\n}\n", "import { Stack } from '@mantine/core';\nimport { TypedValue, getPathDisplayName } from '@medplum/core';\nimport { useContext, useMemo, useState } from 'react';\nimport { CheckboxFormSection } from '../CheckboxFormSection/CheckboxFormSection';\nimport { FormSection } from '../FormSection/FormSection';\nimport { setPropertyValue } from '../ResourceForm/ResourceForm.utils';\nimport { getValueAndTypeFromElement } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { EXTENSION_KEYS, ElementsContext, getElementsToRender } from './ElementsInput.utils';\nimport { BaseInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface ElementsInputProps extends BaseInputProps {\n  readonly type: string;\n  readonly defaultValue: any;\n  readonly onChange: ((value: any) => void) | undefined;\n  readonly testId?: string;\n}\n\nexport function ElementsInput(props: ElementsInputProps): JSX.Element {\n  const [value, setValue] = useState<any>(props.defaultValue ?? {});\n  const elementsContext = useContext(ElementsContext);\n  const elementsToRender = useMemo(() => {\n    return getElementsToRender(elementsContext.elements);\n  }, [elementsContext.elements]);\n\n  function setValueWrapper(newValue: any): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  const typedValue: TypedValue = { type: props.type, value };\n\n  return (\n    <Stack style={{ flexGrow: 1 }} data-testid={props.testId}>\n      {elementsToRender.map(([key, element]) => {\n        const [propertyValue, propertyType] = getValueAndTypeFromElement(typedValue, key, element);\n        const required = element.min !== undefined && element.min > 0;\n        const valuePath = props.valuePath ? props.valuePath + '.' + key : undefined;\n        const resourcePropertyInput = (\n          <ResourcePropertyInput\n            key={key}\n            property={element}\n            name={key}\n            path={props.path + '.' + key}\n            valuePath={valuePath}\n            defaultValue={propertyValue}\n            defaultPropertyType={propertyType}\n            onChange={(newValue: any, propName?: string) => {\n              setValueWrapper(setPropertyValue({ ...value }, key, propName ?? key, element, newValue));\n            }}\n            outcome={props.outcome}\n          />\n        );\n\n        // no FormSection wrapper for extensions\n        if (props.type === 'Extension' || EXTENSION_KEYS.includes(key)) {\n          return resourcePropertyInput;\n        }\n\n        if (element.type.length === 1 && element.type[0].code === 'boolean') {\n          return (\n            <CheckboxFormSection\n              key={key}\n              title={getPathDisplayName(key)}\n              description={element.description}\n              htmlFor={key}\n              fhirPath={element.path}\n              withAsterisk={required}\n              readonly={element.readonly}\n            >\n              {resourcePropertyInput}\n            </CheckboxFormSection>\n          );\n        }\n\n        return (\n          <FormSection\n            key={key}\n            title={getPathDisplayName(key)}\n            description={element.description}\n            withAsterisk={required}\n            htmlFor={key}\n            outcome={props.outcome}\n            fhirPath={element.path}\n            errorExpression={valuePath}\n            readonly={element.readonly}\n          >\n            {resourcePropertyInput}\n          </FormSection>\n        );\n      })}\n    </Stack>\n  );\n}\n", "import { Group, Input } from '@mantine/core';\nimport { ReactNode, useContext } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { READ_ONLY_TOOLTIP_TEXT, maybeWrapWithTooltip } from '../utils/maybeWrapWithTooltip';\nimport classes from '../FormSection/FormSection.module.css';\n\nexport interface CheckboxFormSectionProps {\n  readonly htmlFor?: string;\n  readonly title?: string;\n  readonly description?: string;\n  readonly withAsterisk?: boolean;\n  readonly children?: ReactNode;\n  readonly testId?: string;\n  readonly fhirPath?: string;\n  readonly readonly?: boolean;\n}\n\nexport function CheckboxFormSection(props: CheckboxFormSectionProps): JSX.Element {\n  const { debugMode } = useContext(ElementsContext);\n\n  let label: ReactNode;\n  if (debugMode && props.fhirPath) {\n    label = `${props.title} - ${props.fhirPath}`;\n  } else {\n    label = props.title;\n  }\n  return maybeWrapWithTooltip(\n    props?.readonly ? READ_ONLY_TOOLTIP_TEXT : undefined,\n    <Group wrap=\"nowrap\" data-testid={props.testId}>\n      <div>{props.children}</div>\n      <div>\n        <Input.Wrapper\n          id={props.htmlFor}\n          label={label}\n          classNames={{ label: props?.readonly ? classes.dimmed : undefined }}\n          description={props.description}\n          withAsterisk={props.withAsterisk}\n        >\n          {(() => null)()}\n        </Input.Wrapper>\n      </div>\n    </Group>\n  );\n}\n", "import { Tooltip } from '@mantine/core';\n\nexport const READ_ONLY_TOOLTIP_TEXT = 'Read Only';\n\nexport function maybeWrapWithTooltip(tooltipText: string | undefined, children: JSX.Element): JSX.Element {\n  return tooltipText ? <Tooltip.Floating label={tooltipText}>{children}</Tooltip.Floating> : children;\n}\n", ".dimmed {\n  color: var(--mantine-color-dimmed);\n}\n\n.preserveBreaks {\n  white-space: pre-wrap;\n}", "import cx from 'clsx';\nimport { Input } from '@mantine/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { ReactNode, useContext } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { READ_ONLY_TOOLTIP_TEXT, maybeWrapWithTooltip } from '../utils/maybeWrapWithTooltip';\nimport classes from './FormSection.module.css';\n\nexport interface FormSectionProps {\n  readonly title?: string;\n  readonly htmlFor?: string;\n  readonly description?: string;\n  readonly withAsterisk?: boolean;\n  readonly outcome?: OperationOutcome;\n  readonly children?: ReactNode;\n  readonly testId?: string;\n  readonly fhirPath?: string;\n  readonly errorExpression?: string;\n  readonly readonly?: boolean;\n}\n\nexport function FormSection(props: FormSectionProps): JSX.Element {\n  const { debugMode } = useContext(ElementsContext);\n\n  let label: ReactNode;\n  if (debugMode && props.fhirPath) {\n    label = `${props.title} - ${props.fhirPath}`;\n  } else {\n    label = props.title;\n  }\n  return maybeWrapWithTooltip(\n    props?.readonly ? READ_ONLY_TOOLTIP_TEXT : undefined,\n    <Input.Wrapper\n      id={props.htmlFor}\n      label={label}\n      classNames={{\n        label: cx({ [classes.dimmed]: props?.readonly }, classes.preserveBreaks),\n      }}\n      description={props.description}\n      withAsterisk={props.withAsterisk}\n      error={getErrorsForInput(props.outcome, props.errorExpression ?? props.htmlFor)}\n      data-testid={props.testId}\n    >\n      {props.children}\n    </Input.Wrapper>\n  );\n}\n", "import { OperationOutcome, OperationOutcomeIssue } from '@medplum/fhirtypes';\n\nexport function getErrorsForInput(\n  outcome: OperationOutcome | undefined,\n  expression: string | undefined\n): string | undefined {\n  return outcome?.issue\n    ?.filter((issue) => isExpressionMatch(issue.expression?.[0], expression))\n    ?.map((issue) => issue.details?.text)\n    ?.join('\\n');\n}\n\nexport function getIssuesForExpression(\n  outcome: OperationOutcome | undefined,\n  expression: string | undefined\n): OperationOutcomeIssue[] | undefined {\n  return outcome?.issue?.filter((issue) => isExpressionMatch(issue.expression?.[0], expression));\n}\n\nconst ARRAY_INDEX_REGEX = /\\[\\d+\\]/;\nfunction isExpressionMatch(expr1: string | undefined, expr2: string | undefined): boolean {\n  // to make this behavior backwards compatible, if only one expression specifies array indexes, ignore all indexes\n  const isExpr1Indexed = typeof expr1 === 'string' && ARRAY_INDEX_REGEX.test(expr1);\n  const isExpr2Indexed = typeof expr2 === 'string' && ARRAY_INDEX_REGEX.test(expr2);\n  if (isExpr1Indexed !== isExpr2Indexed) {\n    expr1 = expr1?.replace(ARRAY_INDEX_REGEX, '');\n    expr2 = expr2?.replace(ARRAY_INDEX_REGEX, '');\n  }\n\n  // Expression can be either \"fieldName\" or \"resourceType.fieldName\"\n  if (expr1 === expr2) {\n    return true;\n  }\n  if (!expr1 || !expr2) {\n    return false;\n  }\n  const dot1 = expr1.indexOf('.');\n  if (dot1 >= 0 && expr1.substring(dot1 + 1) === expr2) {\n    return true;\n  }\n  const dot2 = expr2.indexOf('.');\n  if (dot2 >= 0 && expr2.substring(dot2 + 1) === expr1) {\n    return true;\n  }\n  return false;\n}\n", "import { capitalize, InternalSchemaElement, isEmpty } from '@medplum/core';\nimport { StructureDefinition } from '@medplum/fhirtypes';\n\nexport function setPropertyValue(\n  obj: any,\n  key: string,\n  propName: string,\n  elementDefinition: InternalSchemaElement,\n  value: any\n): any {\n  const types = elementDefinition.type;\n  if (types.length > 1) {\n    for (const type of types) {\n      const compoundKey = key.replace('[x]', capitalize(type.code as string));\n      if (compoundKey in obj) {\n        delete obj[compoundKey];\n      }\n    }\n  }\n  obj[propName] = value;\n  return obj;\n}\n\nexport type SupportedProfileStructureDefinition = StructureDefinition & {\n  url: NonNullable<StructureDefinition['url']>;\n  name: NonNullable<StructureDefinition['name']>;\n};\n\nexport function isSupportedProfileStructureDefinition(\n  profile?: StructureDefinition\n): profile is SupportedProfileStructureDefinition {\n  return !!profile && !isEmpty(profile.url) && !isEmpty(profile.name);\n}\n", "import { Checkbox, Group, NativeSelect, Textarea, TextInput } from '@mantine/core';\nimport {\n  applyDefaultValuesToElement,\n  capitalize,\n  ExtendedInternalSchemaElement,\n  getPathDifference,\n  HTTP_HL7_ORG,\n  isComplexTypeCode,\n  isEmpty,\n  isPopulated,\n  PropertyType,\n} from '@medplum/core';\nimport { ElementDefinitionBinding, ElementDefinitionType } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { AddressInput } from '../AddressInput/AddressInput';\nimport { AnnotationInput } from '../AnnotationInput/AnnotationInput';\nimport { AttachmentArrayInput } from '../AttachmentArrayInput/AttachmentArrayInput';\nimport { AttachmentInput } from '../AttachmentInput/AttachmentInput';\nimport { BackboneElementInput } from '../BackboneElementInput/BackboneElementInput';\nimport { CodeableConceptInput } from '../CodeableConceptInput/CodeableConceptInput';\nimport { CodeInput } from '../CodeInput/CodeInput';\nimport { CodingInput } from '../CodingInput/CodingInput';\nimport { ContactDetailInput } from '../ContactDetailInput/ContactDetailInput';\nimport { ContactPointInput } from '../ContactPointInput/ContactPointInput';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ExtensionInput } from '../ExtensionInput/ExtensionInput';\nimport { HumanNameInput } from '../HumanNameInput/HumanNameInput';\nimport { IdentifierInput } from '../IdentifierInput/IdentifierInput';\nimport { MoneyInput } from '../MoneyInput/MoneyInput';\nimport { PeriodInput } from '../PeriodInput/PeriodInput';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { RangeInput } from '../RangeInput/RangeInput';\nimport { RatioInput } from '../RatioInput/RatioInput';\nimport { ReferenceInput } from '../ReferenceInput/ReferenceInput';\nimport { ResourceArrayInput } from '../ResourceArrayInput/ResourceArrayInput';\nimport { SensitiveTextarea } from '../SensitiveTextarea/SensitiveTextarea';\nimport { TimingInput } from '../TimingInput/TimingInput';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { BaseInputProps, ComplexTypeInputProps, PrimitiveTypeInputProps } from './ResourcePropertyInput.utils';\n\nexport interface ResourcePropertyInputProps extends BaseInputProps {\n  readonly property: ExtendedInternalSchemaElement;\n  readonly name: string;\n  readonly defaultPropertyType?: string | undefined;\n  readonly defaultValue: any;\n  readonly arrayElement?: boolean | undefined;\n  readonly onChange?: (value: any, propName?: string) => void;\n}\n\nexport function ResourcePropertyInput(props: ResourcePropertyInputProps): JSX.Element {\n  const { property, name, onChange, defaultValue } = props;\n  const defaultPropertyType =\n    props.defaultPropertyType && props.defaultPropertyType !== 'undefined'\n      ? props.defaultPropertyType\n      : property.type[0].code;\n  const propertyTypes = property.type as ElementDefinitionType[];\n\n  if ((property.isArray || property.max > 1) && !props.arrayElement) {\n    if (defaultPropertyType === PropertyType.Attachment) {\n      return (\n        <AttachmentArrayInput\n          name={name}\n          defaultValue={defaultValue}\n          onChange={onChange}\n          disabled={property.readonly}\n        />\n      );\n    }\n\n    // Extensions are a special type of array that shouldn't be indented\n    const indent = propertyTypes[0]?.code !== PropertyType.Extension;\n    return (\n      <ResourceArrayInput\n        property={property}\n        name={name}\n        path={props.path}\n        valuePath={props.valuePath}\n        defaultValue={defaultValue}\n        indent={indent}\n        onChange={onChange}\n        outcome={props.outcome}\n      />\n    );\n  } else if (propertyTypes.length > 1) {\n    return <ElementDefinitionInputSelector elementDefinitionTypes={propertyTypes} {...props} />;\n  } else {\n    return (\n      <ElementDefinitionTypeInput\n        name={name}\n        defaultValue={defaultValue}\n        onChange={(newValue: any) => {\n          if (props.onChange) {\n            const newPropName = props.name.replace('[x]', capitalize(propertyTypes[0].code as string));\n            props.onChange(newValue, newPropName);\n          }\n        }}\n        outcome={props.outcome}\n        elementDefinitionType={propertyTypes[0]}\n        min={property.min}\n        max={property.min}\n        binding={property.binding}\n        path={props.path}\n        valuePath={props.valuePath}\n        readOnly={property.readonly}\n      />\n    );\n  }\n}\n\nexport interface ElementDefinitionSelectorProps extends ResourcePropertyInputProps {\n  readonly elementDefinitionTypes: ElementDefinitionType[];\n}\n\nexport function ElementDefinitionInputSelector(props: ElementDefinitionSelectorProps): JSX.Element {\n  const propertyTypes = props.elementDefinitionTypes;\n  let initialPropertyType: ElementDefinitionType | undefined = undefined;\n  if (props.defaultPropertyType) {\n    initialPropertyType = propertyTypes.find((t) => t.code === props.defaultPropertyType) as ElementDefinitionType;\n  }\n  if (!initialPropertyType) {\n    initialPropertyType = propertyTypes[0];\n  }\n  const [selectedType, setSelectedType] = useState(initialPropertyType);\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\" align=\"flex-start\">\n      <NativeSelect\n        disabled={props.property.readonly}\n        style={{ width: '200px' }}\n        defaultValue={selectedType.code}\n        data-testid={props.name && props.name + '-selector'}\n        onChange={(e) => {\n          setSelectedType(\n            propertyTypes.find(\n              (type: ElementDefinitionType) => type.code === e.currentTarget.value\n            ) as ElementDefinitionType\n          );\n        }}\n        data={propertyTypes.map((type: ElementDefinitionType) => ({\n          value: type.code as string,\n          label: type.code as string,\n        }))}\n      />\n      <ElementDefinitionTypeInput\n        name={props.name}\n        defaultValue={props.defaultValue}\n        outcome={props.outcome}\n        elementDefinitionType={selectedType}\n        onChange={(newValue: any) => {\n          if (props.onChange) {\n            props.onChange(newValue, props.name.replace('[x]', capitalize(selectedType.code as string)));\n          }\n        }}\n        min={props.property.min}\n        max={props.property.max}\n        binding={props.property.binding}\n        path={props.property.path}\n        valuePath={props.valuePath}\n        readOnly={props.property.readonly}\n      />\n    </Group>\n  );\n}\n\n// Avoiding optional props on lower-level components like to make it more difficult to misuse\nexport interface ElementDefinitionTypeInputProps\n  extends Pick<ResourcePropertyInputProps, 'name' | 'path' | 'valuePath' | 'defaultValue' | 'onChange' | 'outcome'> {\n  readonly elementDefinitionType: ElementDefinitionType;\n  readonly min: number;\n  readonly max: number;\n  readonly binding: ElementDefinitionBinding | undefined;\n  readonly readOnly?: boolean;\n}\n\nexport function ElementDefinitionTypeInput(props: ElementDefinitionTypeInputProps): JSX.Element {\n  const { name, onChange, outcome, binding, path, valuePath, readOnly } = props;\n  const required = props.min !== undefined && props.min > 0;\n\n  const propertyType = props.elementDefinitionType.code;\n\n  const elementsContext = useContext(ElementsContext);\n  const defaultValue = useMemo(() => {\n    if (!isComplexTypeCode(propertyType)) {\n      return props.defaultValue;\n    }\n\n    if (!isEmpty(props.defaultValue)) {\n      return props.defaultValue;\n    }\n\n    const withDefaults = Object.create(null);\n    if (elementsContext.path === props.path) {\n      applyDefaultValuesToElement(withDefaults, elementsContext.elements);\n    } else {\n      const key = getPathDifference(elementsContext.path, props.path);\n      if (key === undefined) {\n        return props.defaultValue;\n      }\n      applyDefaultValuesToElement(withDefaults, elementsContext.elements, key);\n    }\n\n    if (isPopulated(withDefaults)) {\n      return withDefaults;\n    }\n\n    return props.defaultValue;\n  }, [propertyType, elementsContext.path, elementsContext.elements, props.path, props.defaultValue]);\n\n  if (!propertyType) {\n    return <div>Property type not specified </div>;\n  }\n\n  function getComplexInputProps(): ComplexTypeInputProps<any> {\n    return { name, defaultValue, onChange, outcome, path, valuePath, disabled: readOnly };\n  }\n\n  function getPrimitiveInputProps(): PrimitiveTypeInputProps {\n    const error = getErrorsForInput(props.outcome, valuePath ?? path);\n    return {\n      id: name,\n      name,\n      'data-testid': name,\n      defaultValue,\n      required,\n      error,\n      disabled: readOnly,\n    };\n  }\n\n  switch (propertyType) {\n    // 2.24.0.1 Primitive Types\n    // https://www.hl7.org/fhir/datatypes.html#primitive\n\n    case PropertyType.SystemString:\n    case PropertyType.canonical:\n    case PropertyType.string:\n    case PropertyType.time:\n    case PropertyType.uri:\n    case PropertyType.url:\n      if (props.path === 'Project.secret.value[x]') {\n        return (\n          <SensitiveTextarea\n            {...getPrimitiveInputProps()}\n            onChange={(e) => {\n              if (props.onChange) {\n                props.onChange(e.currentTarget.value);\n              }\n            }}\n          />\n        );\n      }\n\n      return (\n        <TextInput\n          {...getPrimitiveInputProps()}\n          onChange={(e) => {\n            if (onChange) {\n              onChange(e.currentTarget.value);\n            }\n          }}\n        />\n      );\n    case PropertyType.date:\n      return (\n        <TextInput\n          {...getPrimitiveInputProps()}\n          type=\"date\"\n          onChange={(e) => {\n            if (onChange) {\n              onChange(e.currentTarget.value);\n            }\n          }}\n        />\n      );\n    case PropertyType.dateTime:\n    case PropertyType.instant:\n      return <DateTimeInput {...getPrimitiveInputProps()} onChange={onChange} outcome={outcome} />;\n    case PropertyType.decimal:\n    case PropertyType.integer:\n    case PropertyType.positiveInt:\n    case PropertyType.unsignedInt:\n      return (\n        <TextInput\n          {...getPrimitiveInputProps()}\n          type=\"number\"\n          step={propertyType === PropertyType.decimal ? 'any' : '1'}\n          onChange={(e) => {\n            if (onChange) {\n              const num = e.currentTarget.valueAsNumber;\n              onChange(Number.isNaN(num) ? undefined : num);\n            }\n          }}\n        />\n      );\n    case PropertyType.code:\n      // overwrite getPrimitiveInputProps().error since FormSection already shows errors\n      return (\n        <CodeInput {...getPrimitiveInputProps()} error={undefined} onChange={onChange} binding={binding?.valueSet} />\n      );\n    case PropertyType.boolean:\n      return (\n        <Checkbox\n          {...getPrimitiveInputProps()}\n          defaultChecked={Boolean(defaultValue)}\n          onChange={(e) => {\n            if (onChange) {\n              onChange(e.currentTarget.checked);\n            }\n          }}\n        />\n      );\n    case PropertyType.base64Binary:\n    case PropertyType.markdown:\n      return (\n        <Textarea\n          {...getPrimitiveInputProps()}\n          spellCheck={propertyType !== PropertyType.base64Binary}\n          onChange={(e) => {\n            if (onChange) {\n              onChange(e.currentTarget.value);\n            }\n          }}\n        />\n      );\n\n    // 2.24.0.2 Complex Types\n    // https://www.hl7.org/fhir/datatypes.html#complex\n\n    case PropertyType.Address:\n      return <AddressInput {...getComplexInputProps()} />;\n    case PropertyType.Annotation:\n      return <AnnotationInput {...getComplexInputProps()} />;\n    case PropertyType.Attachment:\n      return <AttachmentInput {...getComplexInputProps()} />;\n    case PropertyType.CodeableConcept:\n      return <CodeableConceptInput binding={binding?.valueSet} {...getComplexInputProps()} />;\n    case PropertyType.Coding:\n      return <CodingInput binding={binding?.valueSet} {...getComplexInputProps()} />;\n    case PropertyType.ContactDetail:\n      return <ContactDetailInput {...getComplexInputProps()} />;\n    case PropertyType.ContactPoint:\n      return <ContactPointInput {...getComplexInputProps()} />;\n    case PropertyType.Extension:\n      return <ExtensionInput {...getComplexInputProps()} propertyType={props.elementDefinitionType} />;\n    case PropertyType.HumanName:\n      return <HumanNameInput {...getComplexInputProps()} />;\n    case PropertyType.Identifier:\n      return <IdentifierInput {...getComplexInputProps()} />;\n    case PropertyType.Money:\n      return <MoneyInput {...getComplexInputProps()} />;\n    case PropertyType.Period:\n      return <PeriodInput {...getComplexInputProps()} />;\n    case PropertyType.Duration:\n    case PropertyType.Quantity:\n      return <QuantityInput {...getComplexInputProps()} />;\n    case PropertyType.Range:\n      return <RangeInput {...getComplexInputProps()} />;\n    case PropertyType.Ratio:\n      return <RatioInput {...getComplexInputProps()} />;\n    case PropertyType.Reference:\n      return <ReferenceInput {...getComplexInputProps()} targetTypes={getTargetTypes(props.elementDefinitionType)} />;\n    case PropertyType.Timing:\n      return <TimingInput {...getComplexInputProps()} />;\n    case PropertyType.Dosage:\n    case PropertyType.UsageContext:\n    default:\n      return <BackboneElementInput {...getComplexInputProps()} typeName={propertyType} />;\n  }\n}\n\nconst RESOURCE_TYPE_URL_PREFIXES = [\n  `${HTTP_HL7_ORG}/fhir/StructureDefinition/`,\n  'https://medplum.com/fhir/StructureDefinition/',\n];\nfunction getTargetTypes(elementDefinitionType?: ElementDefinitionType): string[] | undefined {\n  return elementDefinitionType?.targetProfile?.map((p) => {\n    const resourceTypePrefix = RESOURCE_TYPE_URL_PREFIXES.find((prefix) => p.startsWith(prefix));\n    if (resourceTypePrefix) {\n      return p.slice(resourceTypePrefix.length);\n    } else {\n      return p;\n    }\n  });\n}\n", "import { CodeableConcept, ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ValueSetAutocomplete, ValueSetAutocompleteProps } from '../ValueSetAutocomplete/ValueSetAutocomplete';\n\nexport interface CodeableConceptInputProps\n  extends Omit<ValueSetAutocompleteProps, 'name' | 'defaultValue' | 'onChange' | 'disabled'>,\n    ComplexTypeInputProps<CodeableConcept> {\n  readonly onChange?: (value: CodeableConcept | undefined) => void;\n}\n\nexport function CodeableConceptInput(props: CodeableConceptInputProps): JSX.Element {\n  const {\n    defaultValue,\n    onChange,\n    withHelpText,\n    // spread these unused props so they don't get passed to ValueSetAutocomplete in `rest`\n    outcome: _outcome,\n    path: _path,\n    valuePath: _valuePath,\n    ...rest\n  } = props;\n  const [value, setValue] = useState<CodeableConcept | undefined>(defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newConcept = valueSetElementToCodeableConcept(newValues);\n    setValue(newConcept);\n    if (onChange) {\n      onChange(newConcept);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      defaultValue={value && codeableConceptToValueSetElement(value)}\n      onChange={handleChange}\n      withHelpText={withHelpText ?? true}\n      {...rest}\n    />\n  );\n}\n\nfunction codeableConceptToValueSetElement(concept: CodeableConcept): ValueSetExpansionContains[] | undefined {\n  return concept.coding?.map((c) => ({\n    system: c.system,\n    code: c.code,\n    display: c.display,\n  }));\n}\n\nfunction valueSetElementToCodeableConcept(elements: ValueSetExpansionContains[]): CodeableConcept | undefined {\n  if (elements.length === 0) {\n    return undefined;\n  }\n  return {\n    coding: elements.map((e) => ({\n      system: e.system,\n      code: e.code,\n      display: e.display,\n    })),\n  };\n}\n", "import { Coding, ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { ValueSetAutocomplete, ValueSetAutocompleteProps } from '../ValueSetAutocomplete/ValueSetAutocomplete';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface CodingInputProps\n  extends Omit<ValueSetAutocompleteProps, 'defaultValue' | 'onChange' | 'disabled' | 'name'>,\n    ComplexTypeInputProps<Coding> {}\n\nexport function CodingInput(props: CodingInputProps): JSX.Element {\n  const { defaultValue, onChange, withHelpText, ...rest } = props;\n  const [value, setValue] = useState<Coding | undefined>(defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newValue = newValues[0];\n    const newConcept = newValue && valueSetElementToCoding(newValue);\n    setValue(newConcept);\n    if (onChange) {\n      onChange(newConcept);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      defaultValue={value && codingToValueSetElement(value)}\n      maxValues={1}\n      onChange={handleChange}\n      withHelpText={withHelpText ?? true}\n      {...rest}\n    />\n  );\n}\n\nfunction codingToValueSetElement(coding: Coding): ValueSetExpansionContains {\n  return {\n    system: coding.system,\n    code: coding.code,\n    display: coding.display,\n  };\n}\n\nfunction valueSetElementToCoding(element: ValueSetExpansionContains): Coding {\n  return {\n    system: element.system,\n    code: element.code,\n    display: element.display,\n  };\n}\n", "import { Group, TextInput } from '@mantine/core';\nimport { ContactDetail, ContactPoint } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { ContactPointInput } from '../ContactPointInput/ContactPointInput';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\n\nexport type ContactDetailInputProps = ComplexTypeInputProps<ContactDetail>;\n\nexport function ContactDetailInput(props: ContactDetailInputProps): JSX.Element {\n  const [contactPoint, setContactDetail] = useState(props.defaultValue);\n\n  const ref = useRef<ContactDetail>();\n  ref.current = contactPoint;\n\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [nameProps, telecomProps] = useMemo(\n    () => ['name', 'telecom'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setContactDetailWrapper(newValue: ContactDetail): void {\n    setContactDetail(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setName(name: string): void {\n    const newValue: ContactDetail = { ...ref.current, name };\n    if (!name) {\n      delete newValue.name;\n    }\n    setContactDetailWrapper(newValue);\n  }\n\n  function setTelecom(telecom: ContactPoint | undefined): void {\n    const newValue: ContactDetail = { ...ref.current, telecom: telecom && [telecom] };\n    if (!telecom) {\n      delete newValue.telecom;\n    }\n    setContactDetailWrapper(newValue);\n  }\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <TextInput\n        disabled={props.disabled || nameProps?.readonly}\n        data-testid={props.name + '-name'}\n        name={props.name + '-name'}\n        placeholder=\"Name\"\n        style={{ width: 180 }}\n        defaultValue={contactPoint?.name}\n        onChange={(e) => setName(e.currentTarget.value)}\n      />\n      <ContactPointInput\n        disabled={props.disabled || telecomProps?.readonly}\n        name={props.name + '-telecom'}\n        path={props.path + '.telecom'}\n        defaultValue={contactPoint?.telecom?.[0]}\n        onChange={setTelecom}\n        outcome={props.outcome}\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { ContactPoint } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { getErrorsForInput } from '../utils/outcomes';\n\nexport type ContactPointInputProps = ComplexTypeInputProps<ContactPoint> & {\n  readonly onChange?: (value: ContactPoint | undefined) => void;\n};\n\nexport function ContactPointInput(props: ContactPointInputProps): JSX.Element {\n  const { path, outcome } = props;\n  const { elementsByPath, getExtendedProps } = useContext(ElementsContext);\n  const [contactPoint, setContactPoint] = useState(props.defaultValue);\n\n  const ref = useRef<ContactPoint>();\n  ref.current = contactPoint;\n\n  const [systemElement, useElement, valueElement] = useMemo(\n    () => ['system', 'use', 'value'].map((field) => elementsByPath[path + '.' + field]),\n    [elementsByPath, path]\n  );\n  const [systemProps, useProps, valueProps] = useMemo(\n    () => ['system', 'use', 'value'].map((field) => getExtendedProps(path + '.' + field)),\n    [getExtendedProps, path]\n  );\n\n  function setContactPointWrapper(newValue: ContactPoint | undefined): void {\n    if (newValue && Object.keys(newValue).length === 0) {\n      newValue = undefined;\n    }\n    setContactPoint(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setSystem(system: 'url' | 'phone' | 'fax' | 'email' | 'pager' | 'sms' | 'other'): void {\n    const newValue: ContactPoint = { ...ref.current, system };\n    if (!system) {\n      delete newValue.system;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  function setUse(use: 'home' | 'work' | 'temp' | 'old' | 'mobile'): void {\n    const newValue: ContactPoint = { ...ref.current, use };\n    if (!use) {\n      delete newValue.use;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  function setValue(value: string): void {\n    const newValue: ContactPoint = { ...ref.current, value };\n    if (!value) {\n      delete newValue.value;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  const errorPath = props.valuePath ?? path;\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\" align=\"flex-start\">\n      <NativeSelect\n        disabled={props.disabled || systemProps?.readonly}\n        data-testid=\"system\"\n        defaultValue={contactPoint?.system}\n        required={(systemElement?.min ?? 0) > 0}\n        onChange={(e) =>\n          setSystem(e.currentTarget.value as 'url' | 'phone' | 'fax' | 'email' | 'pager' | 'sms' | 'other')\n        }\n        data={['', 'email', 'phone', 'fax', 'pager', 'sms', 'other']}\n        error={getErrorsForInput(outcome, errorPath + '.system')}\n      />\n      <NativeSelect\n        disabled={props.disabled || useProps?.readonly}\n        data-testid=\"use\"\n        defaultValue={contactPoint?.use}\n        required={(useElement?.min ?? 0) > 0}\n        onChange={(e) => setUse(e.currentTarget.value as 'home' | 'work' | 'temp' | 'old' | 'mobile')}\n        data={['', 'home', 'work', 'temp', 'old', 'mobile']}\n        error={getErrorsForInput(outcome, errorPath + '.use')}\n      />\n      <TextInput\n        disabled={props.disabled || valueProps?.readonly}\n        placeholder=\"Value\"\n        defaultValue={contactPoint?.value}\n        required={(valueElement?.min ?? 0) > 0}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        error={getErrorsForInput(outcome, errorPath + '.value')}\n      />\n    </Group>\n  );\n}\n", "import { TextInput } from '@mantine/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { ChangeEvent } from 'react';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { convertIsoToLocal, convertLocalToIso } from './DateTimeInput.utils';\nimport { PrimitiveTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface DateTimeInputProps extends PrimitiveTypeInputProps {\n  readonly label?: string;\n  readonly placeholder?: string;\n  readonly defaultValue?: string;\n  readonly autoFocus?: boolean;\n  readonly outcome?: OperationOutcome;\n  readonly onChange?: (value: string) => void;\n}\n\n/**\n * The DateTimeInput component is a wrapper around the HTML5 input type=\"datetime-local\".\n * The main purpose is to reconcile time zones.\n * Most of our date/time values are in ISO-8601, which includes a time zone offset.\n * The datetime-local input does not support the time zone offset.\n * @param props - The Input props.\n * @returns The JSX element to render.\n */\nexport function DateTimeInput(props: DateTimeInputProps): JSX.Element {\n  return (\n    <TextInput\n      id={props.name}\n      name={props.name}\n      label={props.label}\n      data-autofocus={props.autoFocus}\n      data-testid={props['data-testid'] ?? props.name}\n      placeholder={props.placeholder}\n      required={props.required}\n      disabled={props.disabled}\n      type={getInputType()}\n      defaultValue={convertIsoToLocal(props.defaultValue)}\n      autoFocus={props.autoFocus}\n      error={getErrorsForInput(props.outcome, props.name)}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => {\n        if (props.onChange) {\n          const newValue = e.currentTarget.value;\n          props.onChange(convertLocalToIso(newValue));\n        }\n      }}\n    />\n  );\n}\n\n/**\n * Returns the input type for the requested type.\n * JSDOM does not support many of the valid <input> type attributes.\n * For example, it won't fire change events for <input type=\"datetime-local\">.\n * @returns The input type for the current environment.\n */\nfunction getInputType(): string {\n  return import.meta.env.NODE_ENV === 'test' ? 'text' : 'datetime-local';\n}\n", "import { isValidDate } from '@medplum/core';\n\n/**\n * Converts an ISO-8601 date/time string to a local date/time string.\n * @param isoString - The ISO-8601 date/time string to convert.\n * @returns The local date/time string.\n */\nexport function convertIsoToLocal(isoString: string | undefined): string {\n  if (!isoString) {\n    return '';\n  }\n\n  // Convert the ISO-8601 date to a local datetime-local value.\n  // See: https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#local_date_and_time_strings\n  // See: https://stackoverflow.com/a/60368477\n  const date = new Date(isoString);\n  if (!isValidDate(date)) {\n    // If the input string was malformed, return an empty string.\n    return '';\n  }\n\n  return date.toLocaleDateString('sv') + 'T' + date.toLocaleTimeString('sv');\n}\n\n/**\n * Converts a local date/time string to an ISO-8601 date/time string.\n * @param localString - The local date/time string to convert.\n * @returns The ISO-8601 date/time string.\n */\nexport function convertLocalToIso(localString: string | undefined): string {\n  if (!localString) {\n    return '';\n  }\n\n  // Try to parse the local string as a Date\n  // JavaScript's Date() constructor defaults to the local time zone.\n  // The Date() constructor will throw if the value is malformed.\n  const date = new Date(localString);\n  if (!isValidDate(date)) {\n    // If the input string was malformed, return an empty string.\n    return '';\n  }\n\n  return date.toISOString();\n}\n", "import { isPopulated, isProfileLoaded } from '@medplum/core';\nimport { ElementDefinitionType, Extension } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { BackboneElementInput } from '../BackboneElementInput/BackboneElementInput';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport type ExtensionInputProps = ComplexTypeInputProps<Extension> & {\n  readonly propertyType: ElementDefinitionType;\n};\n\nexport function ExtensionInput(props: ExtensionInputProps): JSX.Element | null {\n  const { propertyType } = props;\n\n  const medplum = useMedplum();\n  const profileUrl: string | undefined = useMemo(() => {\n    if (!isPopulated(propertyType.profile)) {\n      return undefined;\n    }\n\n    return propertyType.profile[0] satisfies string;\n  }, [propertyType]);\n  const [loadingProfile, setLoadingProfile] = useState(profileUrl !== undefined);\n\n  useEffect(() => {\n    if (profileUrl) {\n      setLoadingProfile(true);\n      medplum\n        .requestProfileSchema(profileUrl)\n        .then(() => setLoadingProfile(false))\n        .catch((reason) => {\n          setLoadingProfile(false);\n          console.warn(reason);\n        });\n    }\n  }, [medplum, profileUrl]);\n\n  if (profileUrl && (loadingProfile || !isProfileLoaded(profileUrl))) {\n    return <div>Loading...</div>;\n  }\n\n  /*\n    From the spec:\n    An extension SHALL have either a value (i.e. a value[x] element) or sub-extensions, but not both.\n    If present, the value[x] element SHALL have content (value attribute or other elements)\n  */\n\n  // const valueElement = typeSchema.elements['value[x]'];\n  // const extensionHasValue = valueElement.max !== 0;\n  // console.debug(typeSchema.name, { extensionHasValue });\n  // It seems like the behavior of ExtensionInput should differ based on extensionHasValue. It likely\n  // isn't strictly necessary to do so given the recursive use of BackboneElementInput\n\n  return (\n    <BackboneElementInput\n      profileUrl={profileUrl}\n      path={props.path}\n      typeName=\"Extension\"\n      defaultValue={props.defaultValue}\n      onChange={props.onChange}\n    />\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\n\nexport type HumanNameInputProps = ComplexTypeInputProps<HumanName>;\n\nexport function HumanNameInput(props: HumanNameInputProps): JSX.Element {\n  const { outcome, path } = props;\n  const [value, setValue] = useState<HumanName | undefined>(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [useProps, prefixProps, givenProps, familyProps, suffixProps] = useMemo(\n    () => ['use', 'prefix', 'given', 'family', 'suffix'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: HumanName): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setUse(use: 'temp' | 'old' | 'usual' | 'official' | 'nickname' | 'anonymous' | 'maiden' | undefined): void {\n    // || instead of ?? to handle empty strings\n    setValueWrapper({ ...value, use: use || undefined });\n  }\n\n  function setPrefix(prefix: string): void {\n    setValueWrapper({\n      ...value,\n      prefix: prefix ? prefix.split(' ') : undefined,\n    });\n  }\n\n  function setGiven(given: string): void {\n    setValueWrapper({\n      ...value,\n      given: given ? given.split(' ') : undefined,\n    });\n  }\n\n  function setFamily(family: string): void {\n    setValueWrapper({\n      ...value,\n      // || instead of ?? to handle empty strings\n      family: family || undefined,\n    });\n  }\n\n  function setSuffix(suffix: string): void {\n    setValueWrapper({\n      ...value,\n      suffix: suffix ? suffix.split(' ') : undefined,\n    });\n  }\n\n  const errorPath = props.valuePath ?? path;\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <NativeSelect\n        disabled={props.disabled || useProps?.readonly}\n        defaultValue={value?.use}\n        name={props.name + '-use'}\n        data-testid=\"use\"\n        onChange={(e) =>\n          setUse(e.currentTarget.value as 'temp' | 'old' | 'usual' | 'official' | 'nickname' | 'anonymous' | 'maiden')\n        }\n        data={['', 'temp', 'old', 'usual', 'official', 'nickname', 'anonymous', 'maiden']}\n        error={getErrorsForInput(outcome, errorPath + '.use')}\n      />\n      <TextInput\n        disabled={props.disabled || prefixProps?.readonly}\n        placeholder=\"Prefix\"\n        name={props.name + '-prefix'}\n        defaultValue={value?.prefix?.join(' ')}\n        onChange={(e) => setPrefix(e.currentTarget.value)}\n        error={getErrorsForInput(outcome, errorPath + '.prefix')}\n      />\n      <TextInput\n        disabled={props.disabled || givenProps?.readonly}\n        placeholder=\"Given\"\n        name={props.name + '-given'}\n        defaultValue={value?.given?.join(' ')}\n        onChange={(e) => setGiven(e.currentTarget.value)}\n        error={getErrorsForInput(outcome, errorPath + '.given')}\n      />\n      <TextInput\n        disabled={props.disabled || familyProps?.readonly}\n        name={props.name + '-family'}\n        placeholder=\"Family\"\n        defaultValue={value?.family}\n        onChange={(e) => setFamily(e.currentTarget.value)}\n        error={getErrorsForInput(outcome, errorPath + '.family')}\n      />\n      <TextInput\n        disabled={props.disabled || suffixProps?.readonly}\n        placeholder=\"Suffix\"\n        name={props.name + '-suffix'}\n        defaultValue={value?.suffix?.join(' ')}\n        onChange={(e) => setSuffix(e.currentTarget.value)}\n        error={getErrorsForInput(outcome, errorPath + '.suffix')}\n      />\n    </Group>\n  );\n}\n", "import { Group, TextInput } from '@mantine/core';\nimport { Identifier } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport type IdentifierInputProps = ComplexTypeInputProps<Identifier>;\n\nexport function IdentifierInput(props: IdentifierInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n  const { elementsByPath, getExtendedProps } = useContext(ElementsContext);\n\n  const [systemElement, valueElement] = useMemo(\n    () => ['system', 'value'].map((field) => elementsByPath[props.path + '.' + field]),\n    [elementsByPath, props.path]\n  );\n\n  const [systemProps, valueProps] = useMemo(\n    () => ['system', 'value'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: Identifier): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n  const errorPath: string = props.valuePath ?? props.path;\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\" align=\"flex-start\">\n      <TextInput\n        disabled={props.disabled || systemProps?.readonly}\n        placeholder=\"System\"\n        required={(systemElement?.min ?? 0) > 0}\n        defaultValue={value?.system}\n        onChange={(e) => setValueWrapper({ ...value, system: e.currentTarget.value })}\n        error={getErrorsForInput(props.outcome, errorPath + '.system')}\n      />\n      <TextInput\n        disabled={props.disabled || valueProps?.readonly}\n        placeholder=\"Value\"\n        required={(valueElement?.min ?? 0) > 0}\n        defaultValue={value?.value}\n        onChange={(e) => setValueWrapper({ ...value, value: e.currentTarget.value })}\n        error={getErrorsForInput(props.outcome, errorPath + '.value')}\n      />\n    </Group>\n  );\n}\n", "import { NativeSelect, TextInput } from '@mantine/core';\nimport { Money } from '@medplum/fhirtypes';\nimport { IconCurrencyDollar } from '@tabler/icons-react';\nimport { ChangeEvent, useCallback, useContext, useMemo, useState } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\n/*\n * Based on: https://github.com/mantinedev/ui.mantine.dev/blob/master/components/CurrencyInput/CurrencyInput.tsx\n */\n\n/**\n * List of currencies.\n *\n * Full list of currencies:\n * https://www.hl7.org/fhir/valueset-currencies.html\n *\n * Latest browsers can report list of supported currencies, but it's not widely supported:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\n *\n * Using a short list for simplicity for now.\n */\nconst data = ['USD', 'EUR', 'CAD', 'GBP', 'AUD'];\n\nexport interface MoneyInputProps extends ComplexTypeInputProps<Money> {\n  readonly label?: string;\n  readonly placeholder?: string;\n}\n\nexport function MoneyInput(props: MoneyInputProps): JSX.Element {\n  const { onChange } = props;\n  const [value, setValue] = useState(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [currencyProps, valueProps] = useMemo(\n    () => ['currency', 'value'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  const setValueWrapper = useCallback(\n    (newValue: Money): void => {\n      setValue(newValue);\n      if (onChange) {\n        onChange(newValue);\n      }\n    },\n    [onChange]\n  );\n\n  const handleCurrencyChange = useCallback(\n    (e: ChangeEvent<HTMLSelectElement>) => {\n      setValueWrapper({\n        ...value,\n        currency: e.currentTarget.value as Money['currency'],\n      });\n    },\n    [value, setValueWrapper]\n  );\n\n  const handleValueChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setValueWrapper({\n        ...value,\n        value: e.currentTarget.valueAsNumber,\n      });\n    },\n    [value, setValueWrapper]\n  );\n\n  const select = (\n    <NativeSelect\n      disabled={props.disabled || currencyProps?.readonly}\n      defaultValue={value?.currency}\n      data={data}\n      styles={{\n        input: {\n          fontWeight: 500,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n          width: 92,\n        },\n      }}\n      onChange={handleCurrencyChange}\n    />\n  );\n\n  return (\n    <TextInput\n      disabled={props.disabled || valueProps?.readonly}\n      type=\"number\"\n      name={props.name}\n      label={props.label}\n      placeholder={props.placeholder ?? 'Value'}\n      defaultValue={value?.value?.toString() ?? 'USD'}\n      leftSection={<IconCurrencyDollar size={14} />}\n      rightSection={select}\n      rightSectionWidth={92}\n      onChange={handleValueChange}\n    />\n  );\n}\n", "import { Group } from '@mantine/core';\nimport { Period } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface PeriodInputProps extends ComplexTypeInputProps<Period> {}\n\nexport function PeriodInput(props: PeriodInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [startProps, endProps] = useMemo(\n    () => ['start', 'end'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: Period): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <DateTimeInput\n        disabled={props.disabled || startProps?.readonly}\n        name={props.name + '.start'}\n        placeholder=\"Start\"\n        defaultValue={value?.start}\n        onChange={(newValue) => setValueWrapper({ ...value, start: newValue })}\n      />\n      <DateTimeInput\n        disabled={props.disabled || endProps?.readonly}\n        name={props.name + '.end'}\n        placeholder=\"End\"\n        defaultValue={value?.end}\n        onChange={(newValue) => setValueWrapper({ ...value, end: newValue })}\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { Quantity } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState, WheelEvent } from 'react';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\n\nexport interface QuantityInputProps extends ComplexTypeInputProps<Quantity> {\n  readonly autoFocus?: boolean;\n  readonly required?: boolean;\n  readonly disableWheel?: boolean;\n}\n\nexport function QuantityInput(props: QuantityInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [comparatorProps, valueProps, unitProps] = useMemo(\n    () => ['comparator', 'value', 'unit'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: Quantity): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <NativeSelect\n        disabled={props.disabled || comparatorProps?.readonly}\n        style={{ width: 80 }}\n        data-testid={props.name + '-comparator'}\n        defaultValue={value?.comparator}\n        data={['', '<', '<=', '>=', '>']}\n        onChange={(e) =>\n          setValueWrapper({\n            ...value,\n            comparator: e.currentTarget.value as '<' | '<=' | '>=' | '>',\n          })\n        }\n      />\n      <TextInput\n        disabled={props.disabled || valueProps?.readonly}\n        id={props.name}\n        name={props.name}\n        required={props.required}\n        data-autofocus={props.autoFocus}\n        data-testid={props.name + '-value'}\n        type=\"number\"\n        placeholder=\"Value\"\n        defaultValue={value?.value}\n        autoFocus={props.autoFocus}\n        step=\"any\"\n        onWheel={(e: WheelEvent<HTMLInputElement>) => {\n          if (props.disableWheel) {\n            e.currentTarget.blur();\n          }\n        }}\n        onChange={(e) => {\n          setValueWrapper({\n            ...value,\n            value: tryParseNumber(e.currentTarget.value),\n          });\n        }}\n      />\n      <TextInput\n        disabled={props.disabled || unitProps?.readonly}\n        placeholder=\"Unit\"\n        data-testid={props.name + '-unit'}\n        defaultValue={value?.unit}\n        onChange={(e) =>\n          setValueWrapper({\n            ...value,\n            unit: e.currentTarget.value,\n          })\n        }\n      />\n    </Group>\n  );\n}\n\nfunction tryParseNumber(str: string): number | undefined {\n  if (!str) {\n    return undefined;\n  }\n  return parseFloat(str);\n}\n", "import { Group } from '@mantine/core';\nimport { Range } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface RangeInputProps extends ComplexTypeInputProps<Range> {}\n\n/**\n * Renders a Range input.\n * See: https://www.hl7.org/fhir/datatypes.html#Range\n * @param props - Range input properties.\n * @returns Range input element.\n */\nexport function RangeInput(props: RangeInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [lowProps, highProps] = useMemo(\n    () => ['low', 'high'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: Range): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <QuantityInput\n        path={props.path + '.low'}\n        disabled={props.disabled || lowProps?.readonly}\n        name={props.name + '-low'}\n        defaultValue={value?.low}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            low: v,\n          })\n        }\n      />\n\n      <QuantityInput\n        path={props.path + '.high'}\n        disabled={props.disabled || highProps?.readonly}\n        name={props.name + '-high'}\n        defaultValue={value?.high}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            high: v,\n          })\n        }\n      />\n    </Group>\n  );\n}\n", "import { Group } from '@mantine/core';\nimport { Ratio } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useState } from 'react';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface RatioInputProps extends ComplexTypeInputProps<Ratio> {}\n\n/**\n * Renders a Ratio input.\n * See: https://www.hl7.org/fhir/datatypes.html#Ratio\n * @param props - Ratio input properties.\n * @returns Ratio input element.\n */\nexport function RatioInput(props: RatioInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [numeratorProps, denominatorProps] = useMemo(\n    () => ['numerator', 'denominator'].map((field) => getExtendedProps(props.path + '.' + field)),\n    [getExtendedProps, props.path]\n  );\n\n  function setValueWrapper(newValue: Ratio): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      <QuantityInput\n        path={props.path + '.numerator'}\n        disabled={props.disabled || numeratorProps?.readonly}\n        name={props.name + '-numerator'}\n        defaultValue={value?.numerator}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            numerator: v,\n          })\n        }\n      />\n      <QuantityInput\n        path={props.path + '.denominator'}\n        disabled={props.disabled || denominatorProps?.readonly}\n        name={props.name + '-denominator'}\n        defaultValue={value?.denominator}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            denominator: v,\n          })\n        }\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect } from '@mantine/core';\nimport {\n  LRUCache,\n  MedplumClient,\n  ReadablePromise,\n  createReference,\n  isEmpty,\n  isPopulated,\n  tryGetProfile,\n} from '@medplum/core';\nimport { Reference, Resource, ResourceType, StructureDefinition } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { ResourceInput } from '../ResourceInput/ResourceInput';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\n\nexport interface ReferenceInputProps {\n  readonly name: string;\n  readonly placeholder?: string;\n  readonly defaultValue?: Reference;\n  readonly targetTypes?: string[];\n  readonly searchCriteria?: Record<string, string>;\n  readonly autoFocus?: boolean;\n  readonly required?: boolean;\n  readonly onChange?: (value: Reference | undefined) => void;\n  readonly disabled?: boolean;\n}\n\ninterface BaseTargetType {\n  readonly value: string;\n}\n\ntype ProfileTargetType = BaseTargetType & {\n  readonly type: 'profile';\n  readonly name?: string;\n  readonly title?: string;\n  readonly resourceType?: string;\n  readonly error?: any;\n};\n\ntype ResourceTypeTargetType = BaseTargetType & {\n  readonly type: 'resourceType';\n  readonly resourceType: string;\n};\ntype TargetType = ResourceTypeTargetType | ProfileTargetType;\n\nexport function ReferenceInput(props: ReferenceInputProps): JSX.Element {\n  const { onChange } = props;\n  const medplum = useMedplum();\n  const [value, setValue] = useState<Reference | undefined>(props.defaultValue);\n  const [targetTypes, setTargetTypes] = useState<TargetType[] | undefined>(() => createTargetTypes(props.targetTypes));\n  const [targetType, setTargetType] = useState<TargetType | undefined>(() =>\n    getInitialTargetType(props.defaultValue, targetTypes)\n  );\n\n  const promiseCache = useRef(new LRUCache<ReadablePromise<TargetType>>());\n\n  const searchCriteria = useMemo<ReferenceInputProps['searchCriteria']>(() => {\n    if (targetType?.type === 'profile') {\n      return { ...props.searchCriteria, _profile: targetType.value };\n    }\n    return props.searchCriteria;\n  }, [props.searchCriteria, targetType]);\n\n  useEffect(() => {\n    let anyToFetch = false;\n    const newTargetTypePromises: Promise<TargetType>[] | undefined = targetTypes?.map((tt) => {\n      if (!shouldFetchResourceType(tt)) {\n        return Promise.resolve(tt);\n      }\n\n      anyToFetch = true;\n      const cacheKey = tt.value;\n      const cached = promiseCache.current.get(cacheKey);\n      if (cached) {\n        return cached;\n      }\n\n      const promise = fetchResourceTypeOfProfile(medplum, tt.value)\n        .then((profile) => {\n          const newTargetType = { ...tt };\n\n          if (!profile) {\n            console.error(`StructureDefinition not found for ${tt.value}`);\n            newTargetType.error = 'StructureDefinition not found';\n          } else if (!isPopulated(profile.type)) {\n            console.error(`StructureDefinition.type missing for ${tt.value}`);\n            newTargetType.error = 'StructureDefinition.type missing';\n          } else {\n            newTargetType.resourceType = profile.type;\n            newTargetType.name = profile.name;\n            newTargetType.title = profile.title;\n          }\n\n          return newTargetType;\n        })\n        .catch((reason) => {\n          console.error(reason);\n          return { ...tt, error: reason };\n        });\n\n      const readablePromise = new ReadablePromise(promise);\n      promiseCache.current.set(cacheKey, readablePromise);\n\n      return readablePromise;\n    });\n\n    if (!newTargetTypePromises || !anyToFetch) {\n      return;\n    }\n\n    Promise.all(newTargetTypePromises)\n      .then((newTargetTypes) => {\n        setTargetTypes(newTargetTypes);\n        if (!targetType) {\n          return;\n        }\n\n        const index = newTargetTypes.findIndex(\n          (tt) => tt.value === targetType.value || tt.resourceType === targetType.resourceType\n        );\n        if (index === -1) {\n          console.debug(`defaultValue had unexpected resourceType: ${targetType.resourceType}`);\n          return;\n        }\n        // orphaned targetType has been resolved\n        setTargetType(newTargetTypes[index]);\n      })\n      .catch(console.error);\n  }, [medplum, targetType, targetTypes]);\n\n  const setValueHelper = useCallback(\n    (item: Resource | undefined) => {\n      const newValue = item ? createReference(item) : undefined;\n      setValue(newValue);\n      if (onChange) {\n        onChange(newValue);\n      }\n    },\n    [onChange]\n  );\n\n  const typeSelectOptions = useMemo(() => {\n    if (targetTypes) {\n      return targetTypes.map((tt) => {\n        return {\n          value: tt.value,\n          label: tt.type === 'profile' ? (tt.title ?? tt.name ?? tt.resourceType ?? tt.value) : tt.value,\n        };\n      });\n    }\n    return [];\n  }, [targetTypes]);\n\n  return (\n    <Group gap=\"xs\" grow wrap=\"nowrap\">\n      {targetTypes && targetTypes.length > 1 && (\n        <NativeSelect\n          disabled={props.disabled}\n          data-autofocus={props.autoFocus}\n          data-testid=\"reference-input-resource-type-select\"\n          defaultValue={targetType?.resourceType}\n          autoFocus={props.autoFocus}\n          onChange={(e) => {\n            const newValue = e.currentTarget.value;\n            const newTargetType = targetTypes.find((tt) => tt.value === newValue);\n            setTargetType(newTargetType);\n          }}\n          data={typeSelectOptions}\n        />\n      )}\n      {!targetTypes && (\n        <ResourceTypeInput\n          disabled={props.disabled}\n          autoFocus={props.autoFocus}\n          testId=\"reference-input-resource-type-input\"\n          defaultValue={targetType?.resourceType as ResourceType}\n          onChange={(newResourceType) => {\n            if (newResourceType) {\n              setTargetType({ type: 'resourceType', value: newResourceType, resourceType: newResourceType });\n            } else {\n              setTargetType(undefined);\n            }\n          }}\n          name={props.name + '-resourceType'}\n          placeholder=\"Resource Type\"\n        />\n      )}\n      <ResourceInput\n        resourceType={targetType?.resourceType as ResourceType}\n        name={props.name + '-id'}\n        required={props.required}\n        placeholder={props.placeholder}\n        defaultValue={value}\n        searchCriteria={searchCriteria}\n        onChange={setValueHelper}\n        disabled={props.disabled}\n      />\n    </Group>\n  );\n}\n\nfunction createTargetTypes(resourceTypesAndProfileUrls: string[] | undefined): TargetType[] | undefined {\n  if (\n    !resourceTypesAndProfileUrls ||\n    resourceTypesAndProfileUrls.length === 0 ||\n    (resourceTypesAndProfileUrls.length === 1 && resourceTypesAndProfileUrls[0] === 'Resource')\n  ) {\n    return undefined;\n  }\n\n  const results: TargetType[] = [];\n  for (const value of resourceTypesAndProfileUrls) {\n    // is there a less hacky way to distinguish resourceType from profile URLs?\n    if (value.includes('/')) {\n      results.push({ type: 'profile', value });\n    } else {\n      results.push({ type: 'resourceType', value, resourceType: value });\n    }\n  }\n  return results;\n}\n\nfunction getInitialTargetType(\n  defaultValue: Reference | undefined,\n  targetTypes: TargetType[] | undefined\n): TargetType | undefined {\n  const defaultValueResourceType = defaultValue?.reference?.split('/')[0];\n  if (defaultValueResourceType) {\n    const targetType = targetTypes?.find((tt) => tt.resourceType === defaultValueResourceType);\n    if (targetType) {\n      return targetType;\n    }\n\n    // An \"orphaned\" TargetType is created when defaultValue references a resourceType\n    // that is not yet represented in targetTypes due to profile URL resolution to resource type\n    // that has yet to occur. An orphan can also occur if a defaultValue is provided\n    // but targetTypes is not.\n    return {\n      type: 'resourceType',\n      value: defaultValueResourceType,\n      resourceType: defaultValueResourceType,\n    };\n  }\n\n  if (targetTypes && targetTypes.length > 0) {\n    return targetTypes[0];\n  }\n\n  return undefined;\n}\n\ninterface ResourceTypeGraphQLResponse {\n  readonly data: {\n    readonly StructureDefinitionList: Partial<StructureDefinition>[];\n  };\n}\n\nasync function fetchResourceTypeOfProfile(\n  medplum: MedplumClient,\n  profileUrl: string\n): Promise<Partial<StructureDefinition> | undefined> {\n  const profile = tryGetProfile(profileUrl);\n  if (profile) {\n    return { type: profile.type, name: profile.name, title: profile.title };\n  }\n\n  const query = `{\n      StructureDefinitionList(url: \"${profileUrl}\", _sort: \"_lastUpdated\", _count: 1) {\n        type,\n        name,\n        title,\n      }\n    }`.replace(/\\s+/g, ' ');\n\n  const response = (await medplum.graphql(query)) as ResourceTypeGraphQLResponse;\n\n  return response.data.StructureDefinitionList[0];\n}\n\nfunction shouldFetchResourceType(targetType: TargetType): targetType is ProfileTargetType {\n  return targetType.type === 'profile' && !targetType?.error && isEmpty(targetType.resourceType);\n}\n", "import { Group, Text } from '@mantine/core';\nimport { getDisplayString, getReferenceString, isPopulated } from '@medplum/core';\nimport { OperationOutcome, Patient, Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { forwardRef, ReactNode, useCallback, useState } from 'react';\nimport {\n  AsyncAutocomplete,\n  AsyncAutocompleteOption,\n  AsyncAutocompleteProps,\n} from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\n\n/**\n * Search parameter overrides for specific resource types.\n * Use this to specify the search parameter to use for a given resource type.\n * Otherwise it will fallback to \"name\" if the resource type is in NAME_RESOURCE_TYPES.\n * Otherwise it will fallback to \"_id\".\n */\nconst SEARCH_CODES: Record<string, string> = {\n  Device: 'device-name',\n  Observation: 'code',\n  Subscription: 'criteria',\n  User: 'email:contains',\n};\n\n/**\n * Resource types that should use the \"name\" search parameter.\n * This is the full list of resource types that have a \"name\" search parameter.\n * Otherwise it will fallback to \"_id\".\n */\nconst NAME_RESOURCE_TYPES = [\n  'AccessPolicy',\n  'Account',\n  'ActivityDefinition',\n  'Bot',\n  'CapabilityStatement',\n  'CareTeam',\n  'ClientApplication',\n  'CodeSystem',\n  'CompartmentDefinition',\n  'ConceptMap',\n  'EffectEvidenceSynthesis',\n  'Endpoint',\n  'EventDefinition',\n  'Evidence',\n  'EvidenceVariable',\n  'ExampleScenario',\n  'GraphDefinition',\n  'Group',\n  'HealthcareService',\n  'ImplementationGuide',\n  'InsurancePlan',\n  'Library',\n  'Location',\n  'Measure',\n  'MedicinalProduct',\n  'MessageDefinition',\n  'NamingSystem',\n  'OperationDefinition',\n  'Organization',\n  'Patient',\n  'Person',\n  'PlanDefinition',\n  'Practitioner',\n  'Project',\n  'Questionnaire',\n  'RelatedPerson',\n  'ResearchDefinition',\n  'ResearchElementDefinition',\n  'ResearchStudy',\n  'RiskEvidenceSynthesis',\n  'SearchParameter',\n  'StructureDefinition',\n  'StructureMap',\n  'TerminologyCapabilities',\n  'TestScript',\n  'UserConfiguration',\n  'ValueSet',\n];\n\nexport interface ResourceInputProps<T extends Resource = Resource> {\n  readonly resourceType: T['resourceType'];\n  readonly name: string;\n  readonly defaultValue?: T | Reference<T>;\n  readonly searchCriteria?: Record<string, string>;\n  readonly placeholder?: string;\n  readonly loadOnFocus?: boolean;\n  readonly required?: boolean;\n  readonly itemComponent?: (props: AsyncAutocompleteOption<T>) => JSX.Element | ReactNode;\n  readonly onChange?: (value: T | undefined) => void;\n  readonly disabled?: boolean;\n  readonly label?: AsyncAutocompleteProps<T>['label'];\n  readonly error?: AsyncAutocompleteProps<T>['error'];\n}\n\nfunction toOption<T extends Resource>(resource: T): AsyncAutocompleteOption<T> {\n  return {\n    value: getReferenceString(resource),\n    label: getDisplayString(resource),\n    resource,\n  };\n}\n\nexport function ResourceInput<T extends Resource = Resource>(props: ResourceInputProps<T>): JSX.Element | null {\n  const medplum = useMedplum();\n  const { resourceType, searchCriteria } = props;\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const defaultValue = useResource(props.defaultValue, setOutcome);\n  const ItemComponent = props.itemComponent ?? DefaultItemComponent;\n  const onChange = props.onChange;\n\n  const loadValues = useCallback(\n    async (input: string, signal: AbortSignal): Promise<T[]> => {\n      const searchCode = getSearchParamForResourceType(resourceType);\n      const searchParams = new URLSearchParams({\n        [searchCode]: input ?? '',\n        _count: '10',\n        ...searchCriteria,\n      });\n\n      const resources = await medplum.searchResources(resourceType, searchParams, { signal });\n      return resources as unknown as T[];\n    },\n    [medplum, resourceType, searchCriteria]\n  );\n\n  const handleChange = useCallback(\n    (newResources: T[]) => {\n      if (onChange) {\n        onChange(newResources[0]);\n      }\n    },\n    [onChange]\n  );\n\n  if (isPopulated(props.defaultValue) && !outcome && !defaultValue) {\n    // If a default value was specified, but the default resource is not loaded yet,\n    // then return null to avoid rendering the input until the default resource is loaded.\n    // The Mantine <MultiSelect> component does not reliably handle changes to defaultValue.\n    return null;\n  }\n\n  return (\n    <AsyncAutocomplete<T>\n      disabled={props.disabled}\n      name={props.name}\n      label={props.label}\n      error={props.error}\n      required={props.required}\n      itemComponent={ItemComponent}\n      defaultValue={defaultValue}\n      placeholder={props.placeholder}\n      maxValues={1}\n      toOption={toOption}\n      loadOptions={loadValues}\n      onChange={handleChange}\n      clearable\n    />\n  );\n}\n\nconst DefaultItemComponent = forwardRef<HTMLDivElement, AsyncAutocompleteOption<Resource>>(\n  ({ label, resource, active: _active, ...others }: AsyncAutocompleteOption<Resource>, ref) => {\n    return (\n      <div ref={ref} {...others}>\n        <Group wrap=\"nowrap\">\n          <ResourceAvatar value={resource} />\n          <div>\n            <Text>{label}</Text>\n            <Text size=\"xs\" c=\"dimmed\">\n              {(resource as Patient).birthDate || resource.id}\n            </Text>\n          </div>\n        </Group>\n      </div>\n    );\n  }\n);\n\n/**\n * Returns the search parameter to use for the given resource type.\n * If the resource type is in SEARCH_CODES, then that value is used.\n * Otherwise, if the resource type is in NAME_RESOURCE_TYPES, then \"name\" is used.\n * Otherwise, \"_id\" is used.\n * @param resourceType - The FHIR resource type.\n * @returns The search parameter to use for the autocomplete input.\n */\nfunction getSearchParamForResourceType(resourceType: string): string {\n  return SEARCH_CODES[resourceType] ?? (NAME_RESOURCE_TYPES.includes(resourceType) ? 'name' : '_id');\n}\n", "import { Group, Stack, Text } from '@mantine/core';\nimport { ExtendedInternalSchemaElement, SliceDefinitionWithTypes, getPathDisplayName } from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { MouseEvent, useContext, useEffect, useState } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { SliceInput } from '../SliceInput/SliceInput';\nimport { ArrayAddButton } from '../buttons/ArrayAddButton';\nimport { ArrayRemoveButton } from '../buttons/ArrayRemoveButton';\nimport { killEvent } from '../utils/dom';\nimport classes from './ResourceArrayInput.module.css';\nimport { assignValuesIntoSlices, prepareSlices } from './ResourceArrayInput.utils';\nimport { BaseInputProps, getValuePath } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\n\nexport interface ResourceArrayInputProps extends BaseInputProps {\n  readonly property: ExtendedInternalSchemaElement;\n  readonly name: string;\n  readonly defaultValue?: any[];\n  readonly indent?: boolean;\n  readonly onChange?: (value: any[]) => void;\n  readonly hideNonSliceValues?: boolean;\n}\n\nexport function ResourceArrayInput(props: ResourceArrayInputProps): JSX.Element | null {\n  const { property } = props;\n  const medplum = useMedplum();\n  const [loading, setLoading] = useState(true);\n  const [slices, setSlices] = useState<SliceDefinitionWithTypes[]>([]);\n  // props.defaultValue should NOT be used after this; prefer the defaultValue state\n  const [defaultValue] = useState<any[]>(() => (Array.isArray(props.defaultValue) ? props.defaultValue : []));\n  const [slicedValues, setSlicedValues] = useState<any[][]>(() => [defaultValue]);\n  const ctx = useContext(ElementsContext);\n\n  const propertyTypeCode = property.type[0]?.code;\n  useEffect(() => {\n    prepareSlices({\n      medplum,\n      property,\n    })\n      .then((slices) => {\n        setSlices(slices);\n        const slicedValues = assignValuesIntoSlices(defaultValue, slices, property.slicing, ctx.profileUrl);\n        addPlaceholderValues(slicedValues, slices);\n        setSlicedValues(slicedValues);\n        setLoading(false);\n      })\n      .catch((reason) => {\n        console.error(reason);\n        setLoading(false);\n      });\n  }, [medplum, property, defaultValue, ctx.profileUrl, setSlicedValues]);\n\n  function setValuesWrapper(newValues: any[], sliceIndex: number): void {\n    const newSlicedValues = [...slicedValues];\n    newSlicedValues[sliceIndex] = newValues;\n    setSlicedValues(newSlicedValues);\n    if (props.onChange) {\n      // Remove any placeholder (i.e. undefined) values before propagating\n      const cleaned = newSlicedValues.flat().filter((val) => val !== undefined);\n      props.onChange(cleaned);\n    }\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const nonSliceIndex = slices.length;\n  const nonSliceValues = slicedValues[nonSliceIndex];\n\n  // Hide non-sliced values when handling sliced extensions\n  const showNonSliceValues = !(props.hideNonSliceValues ?? (propertyTypeCode === 'Extension' && slices.length > 0));\n  const propertyDisplayName = getPathDisplayName(property.path);\n  const showEmptyMessage = props.property.readonly && slices.length === 0 && defaultValue.length === 0;\n\n  return (\n    <Stack className={props.indent ? classes.indented : undefined}>\n      {showEmptyMessage && <Text c=\"dimmed\">(empty)</Text>}\n      {slices.map((slice, sliceIndex) => {\n        return (\n          <SliceInput\n            slice={slice}\n            key={slice.name}\n            path={props.path}\n            valuePath={props.valuePath}\n            property={property}\n            defaultValue={slicedValues[sliceIndex]}\n            onChange={(newValue: any[]) => {\n              setValuesWrapper(newValue, sliceIndex);\n            }}\n            testId={`slice-${slice.name}`}\n          />\n        );\n      })}\n\n      {showNonSliceValues &&\n        nonSliceValues.map((value, valueIndex) => (\n          <Group key={`${valueIndex}-${nonSliceValues.length}`} wrap=\"nowrap\" style={{ flexGrow: 1 }}>\n            <div style={{ flexGrow: 1 }}>\n              <ResourcePropertyInput\n                arrayElement={true}\n                property={props.property}\n                name={props.name + '.' + valueIndex}\n                path={props.path}\n                valuePath={getValuePath(props.path, props.valuePath, valueIndex)}\n                defaultValue={value}\n                onChange={(newValue: any) => {\n                  const newNonSliceValues = [...nonSliceValues];\n                  newNonSliceValues[valueIndex] = newValue;\n                  setValuesWrapper(newNonSliceValues, nonSliceIndex);\n                }}\n                defaultPropertyType={undefined}\n                outcome={props.outcome}\n              />\n            </div>\n            {!props.property.readonly && (\n              <ArrayRemoveButton\n                propertyDisplayName={propertyDisplayName}\n                testId={`nonsliced-remove-${valueIndex}`}\n                onClick={(e: MouseEvent) => {\n                  killEvent(e);\n                  const newNonSliceValues = [...nonSliceValues];\n                  newNonSliceValues.splice(valueIndex, 1);\n                  setValuesWrapper(newNonSliceValues, nonSliceIndex);\n                }}\n              />\n            )}\n          </Group>\n        ))}\n      {!props.property.readonly && showNonSliceValues && slicedValues.flat().length < property.max && (\n        <Group wrap=\"nowrap\" style={{ justifyContent: 'flex-start' }}>\n          <ArrayAddButton\n            propertyDisplayName={propertyDisplayName}\n            onClick={(e: MouseEvent) => {\n              killEvent(e);\n              const newNonSliceValues = [...nonSliceValues];\n              newNonSliceValues.push(undefined);\n              setValuesWrapper(newNonSliceValues, nonSliceIndex);\n            }}\n            testId=\"nonsliced-add\"\n          />\n        </Group>\n      )}\n    </Stack>\n  );\n}\n\nfunction addPlaceholderValues(slicedValues: any[][], slices: SliceDefinitionWithTypes[]): void {\n  for (let sliceIndex = 0; sliceIndex < slices.length; sliceIndex++) {\n    const slice = slices[sliceIndex];\n    const sliceValues = slicedValues[sliceIndex];\n\n    while (sliceValues.length < slice.min) {\n      sliceValues.push(undefined);\n    }\n  }\n}\n", "import { Group, Stack, Text } from '@mantine/core';\nimport {\n  ExtendedInternalSchemaElement,\n  ElementsContextType,\n  SliceDefinitionWithTypes,\n  buildElementsContext,\n  getPropertyDisplayName,\n  isEmpty,\n  isPopulated,\n} from '@medplum/core';\nimport { MouseEvent, useContext, useMemo, useState } from 'react';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\nimport { FormSection } from '../FormSection/FormSection';\nimport classes from '../ResourceArrayInput/ResourceArrayInput.module.css';\nimport { ElementDefinitionTypeInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { BaseInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ArrayAddButton } from '../buttons/ArrayAddButton';\nimport { ArrayRemoveButton } from '../buttons/ArrayRemoveButton';\nimport { killEvent } from '../utils/dom';\nimport { maybeWrapWithContext } from '../utils/maybeWrapWithContext';\n\nexport interface SliceInputProps extends BaseInputProps {\n  readonly slice: SliceDefinitionWithTypes;\n  readonly property: ExtendedInternalSchemaElement;\n  readonly defaultValue: any[];\n  readonly onChange: (newValue: any[]) => void;\n  readonly testId?: string;\n}\n\nexport function SliceInput(props: SliceInputProps): JSX.Element | null {\n  const { slice, property } = props;\n  const [values, setValues] = useState<any[]>(props.defaultValue);\n\n  const sliceElements = slice.typeSchema?.elements ?? slice.elements;\n\n  const parentElementsContextValue = useContext(ElementsContext);\n\n  const contextValue: ElementsContextType | undefined = useMemo(() => {\n    if (isPopulated(sliceElements)) {\n      return buildElementsContext({\n        parentContext: parentElementsContextValue,\n        elements: sliceElements,\n        path: props.path,\n        profileUrl: slice.typeSchema?.url,\n      });\n    }\n    return undefined;\n  }, [parentElementsContextValue, props.path, slice.typeSchema?.url, sliceElements]);\n\n  function setValuesWrapper(newValues: any[]): void {\n    setValues(newValues);\n    if (props.onChange) {\n      props.onChange(newValues);\n    }\n  }\n\n  const required = slice.min > 0;\n\n  // this is a bit of a hack targeted at nested extensions; indentation would ideally be controlled elsewhere\n  // e.g. USCorePatientProfile -> USCoreEthnicityExtension -> {ombCategory, detailed, text}\n  const indentedStack = isEmpty(slice.elements);\n  const propertyDisplayName = getPropertyDisplayName(slice.name);\n  const showEmptyMessage = props.property.readonly && values.length === 0;\n  return maybeWrapWithContext(\n    ElementsContext.Provider,\n    contextValue,\n    <FormSection\n      title={propertyDisplayName}\n      description={slice.definition}\n      withAsterisk={required}\n      fhirPath={`${property.path}:${slice.name}`}\n      testId={props.testId}\n      readonly={props.property.readonly}\n    >\n      {showEmptyMessage ? (\n        <Text c=\"dimmed\">(empty)</Text>\n      ) : (\n        <Stack className={indentedStack ? classes.indented : undefined}>\n          {values.map((value, valueIndex) => {\n            return (\n              <Group key={`${valueIndex}-${values.length}`} wrap=\"nowrap\">\n                <div style={{ flexGrow: 1 }} data-testid={props.testId && `${props.testId}-elements-${valueIndex}`}>\n                  <ElementDefinitionTypeInput\n                    elementDefinitionType={slice.type[0]}\n                    name={slice.name}\n                    defaultValue={value}\n                    onChange={(newValue) => {\n                      const newValues = [...values];\n                      newValues[valueIndex] = newValue;\n                      setValuesWrapper(newValues);\n                    }}\n                    outcome={props.outcome}\n                    min={slice.min}\n                    max={slice.max}\n                    binding={slice.binding}\n                    path={props.path}\n                    valuePath={undefined /* `valuePath` not supported in slices */}\n                    readOnly={props.property.readonly}\n                  />\n                </div>\n                {!props.property.readonly && values.length > slice.min && (\n                  <ArrayRemoveButton\n                    propertyDisplayName={propertyDisplayName}\n                    testId={props.testId && `${props.testId}-remove-${valueIndex}`}\n                    onClick={(e: MouseEvent) => {\n                      killEvent(e);\n                      const newValues = [...values];\n                      newValues.splice(valueIndex, 1);\n                      setValuesWrapper(newValues);\n                    }}\n                  />\n                )}\n              </Group>\n            );\n          })}\n          {!props.property.readonly && values.length < slice.max && (\n            <Group wrap=\"nowrap\" style={{ justifyContent: 'flex-start' }}>\n              <ArrayAddButton\n                propertyDisplayName={propertyDisplayName}\n                onClick={(e: MouseEvent) => {\n                  killEvent(e);\n                  const newValues = [...values, undefined];\n                  setValuesWrapper(newValues);\n                }}\n                testId={props.testId && `${props.testId}-add`}\n              />\n            </Group>\n          )}\n        </Stack>\n      )}\n    </FormSection>\n  );\n}\n", ".indented {\n  margin-top: 0.5rem;\n  border-left: 3px solid var(--mantine-color-gray-4);\n  padding: 0.5rem 0 0.5rem 0.5rem;\n}\n", "import { ActionIcon, Button } from '@mantine/core';\nimport { IconCirclePlus } from '@tabler/icons-react';\nimport { MouseEventHandler } from 'react';\n\nexport interface ArrayAddButtonProps {\n  readonly propertyDisplayName?: string;\n  readonly onClick: MouseEventHandler;\n  readonly testId?: string;\n}\n\nexport function ArrayAddButton({ propertyDisplayName, onClick, testId }: ArrayAddButtonProps): JSX.Element {\n  const text = propertyDisplayName ? `Add ${propertyDisplayName}` : 'Add';\n\n  return propertyDisplayName ? (\n    <Button\n      title={text}\n      size=\"sm\"\n      color=\"green.6\"\n      variant=\"subtle\"\n      data-testid={testId}\n      leftSection={<IconCirclePlus size=\"1.25rem\" />}\n      onClick={onClick}\n    >\n      {text}\n    </Button>\n  ) : (\n    <ActionIcon title={text} color=\"green.6\" data-testid={testId} onClick={onClick}>\n      <IconCirclePlus size=\"1.25rem\" />\n    </ActionIcon>\n  );\n}\n", "import { ActionIcon } from '@mantine/core';\nimport { IconCircleMinus } from '@tabler/icons-react';\nimport { MouseEventHandler } from 'react';\n\nexport interface ArrayRemoveButtonProps {\n  readonly propertyDisplayName?: string;\n  readonly onClick: MouseEventHandler;\n  readonly testId?: string;\n}\n\nexport function ArrayRemoveButton({ propertyDisplayName, onClick, testId }: ArrayRemoveButtonProps): JSX.Element {\n  return (\n    <ActionIcon\n      title={propertyDisplayName ? `Remove ${propertyDisplayName}` : 'Remove'}\n      color=\"red.5\"\n      data-testid={testId}\n      variant=\"subtle\"\n      onClick={onClick}\n    >\n      <IconCircleMinus size=\"1.25rem\" />\n    </ActionIcon>\n  );\n}\n", "import { OperationOutcome } from '@medplum/fhirtypes';\n\nexport interface BaseInputProps {\n  /** The path identifying the related element definition and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension. */\n  readonly path: string;\n  /** (optional) A FHIRPath expression that identifies the input more precisely than `path`, e.g. `Patient.identifier[0].system` versus `Patient.identifier.system` */\n  readonly valuePath?: string;\n  /** (optional) OperationOutcome from the last attempted system action*/\n  readonly outcome?: OperationOutcome;\n}\n\nexport interface ComplexTypeInputProps<ValueType> extends BaseInputProps {\n  readonly name: string;\n  readonly defaultValue?: ValueType;\n  readonly onChange?: (value: ValueType, propName?: string) => void;\n  readonly disabled?: boolean;\n}\n\nexport interface PrimitiveTypeInputProps {\n  readonly id?: string;\n  readonly name: string;\n  readonly 'data-testid'?: string;\n  readonly defaultValue?: any;\n  readonly required?: boolean;\n  readonly error?: string;\n  readonly disabled?: boolean;\n}\n\nexport function getValuePath(elementPath: string, valuePath: string | undefined, arrayIndex?: number): string {\n  if (valuePath === undefined) {\n    return elementPath;\n  }\n\n  return arrayIndex === undefined ? valuePath : `${valuePath}[${arrayIndex}]`;\n}\n", "import { ActionIcon, Flex, Textarea, TextareaProps } from '@mantine/core';\nimport { useClipboard } from '@mantine/hooks';\nimport { showNotification } from '@mantine/notifications';\nimport { IconCopy } from '@tabler/icons-react';\nimport { RefAttributes, useRef, useState } from 'react';\n\nexport interface SensitiveTextareaProps extends TextareaProps, RefAttributes<HTMLTextAreaElement> {}\n\nexport function SensitiveTextarea(props: Omit<SensitiveTextareaProps, 'ref'>): JSX.Element {\n  const [revealed, setRevealed] = useState(false);\n  const clipboard = useClipboard();\n  const ref = useRef<HTMLTextAreaElement | null>(null);\n\n  const styles: SensitiveTextareaProps['styles'] = {\n    ...props.styles,\n  };\n  if (!revealed) {\n    if (!styles.input) {\n      styles.input = {};\n    }\n\n    (styles.input as Record<string, string>)['WebkitTextSecurity'] = 'disc';\n  }\n\n  return (\n    <Flex gap=\"xs\">\n      <Textarea\n        {...props}\n        styles={{\n          ...styles,\n          root: {\n            ...(styles.root ?? {}),\n            flexGrow: 1,\n          },\n        }}\n        ref={ref}\n        autosize\n        minRows={1}\n        onFocus={() => setRevealed(true)}\n        onBlur={() => setRevealed(false)}\n      />\n      <ActionIcon\n        title=\"Copy secret\"\n        onClick={() => {\n          clipboard.copy(ref.current?.value);\n          showNotification({ color: 'green', message: 'Copied' });\n        }}\n      >\n        <IconCopy />\n      </ActionIcon>\n    </Flex>\n  );\n}\n", "import { Button, Chip, Group, Modal, NativeSelect, Stack, Switch, TextInput } from '@mantine/core';\nimport { formatTiming } from '@medplum/core';\nimport { Timing, TimingRepeat } from '@medplum/fhirtypes';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { FormSection } from '../FormSection/FormSection';\nimport { ComplexTypeInputProps } from '../ResourcePropertyInput/ResourcePropertyInput.utils';\nimport { ElementsContext } from '../ElementsInput/ElementsInput.utils';\n\nconst daysOfWeek = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\ntype DayOfWeek = 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat';\n\ntype PeriodUnit = 'a' | 's' | 'min' | 'h' | 'd' | 'wk' | 'mo';\n\nexport interface TimingInputProps extends ComplexTypeInputProps<Timing> {\n  readonly defaultModalOpen?: boolean;\n}\n\nexport function TimingInput(props: TimingInputProps): JSX.Element {\n  const [value, setValue] = useState<Timing | undefined>(props.defaultValue);\n  const [open, setOpen] = useState(!props.disabled && (props.defaultModalOpen ?? false));\n\n  const valueRef = useRef<Timing>();\n  valueRef.current = value;\n\n  return (\n    <>\n      <Group gap=\"xs\" grow wrap=\"nowrap\">\n        <span>{formatTiming(valueRef.current) || 'No repeat'}</span>\n        <Button disabled={props.disabled} onClick={() => setOpen(true)}>\n          Edit\n        </Button>\n      </Group>\n      {!props.disabled && (\n        <TimingEditorDialog\n          path={props.path}\n          visible={open}\n          defaultValue={valueRef.current}\n          onOk={(newValue) => {\n            if (props.onChange) {\n              props.onChange(newValue);\n            }\n            setValue(newValue);\n            setOpen(false);\n          }}\n          onCancel={() => setOpen(false)}\n        />\n      )}\n    </>\n  );\n}\n\ninterface TimingEditorDialogProps {\n  readonly path: string;\n  readonly visible: boolean;\n  readonly defaultValue?: Timing;\n  readonly onOk: (newValue: Timing) => void;\n  readonly onCancel: () => void;\n}\n\nconst defaultValue: Timing = {\n  repeat: {\n    period: 1,\n    periodUnit: 'd',\n  },\n};\n\nfunction TimingEditorDialog(props: TimingEditorDialogProps): JSX.Element {\n  const [value, setValue] = useState<Timing>(props.defaultValue || defaultValue);\n  const { getExtendedProps } = useContext(ElementsContext);\n  const [eventProps, repeatProps, repeatPeriodProps, repeatPeriodUnitProps, repeatDayOfWeekProps] = useMemo(\n    () =>\n      ['event', 'repeat', 'repeat.period', 'repeat.periodUnit', 'repeat.dayOfWeek'].map((field) =>\n        getExtendedProps(props.path + '.' + field)\n      ),\n    [getExtendedProps, props.path]\n  );\n\n  const valueRef = useRef<Timing>();\n  valueRef.current = value;\n\n  function setStart(newStart: string): void {\n    setValue({ ...valueRef.current, event: [newStart] });\n  }\n\n  function setRepeat(repeat: TimingRepeat | undefined): void {\n    setValue({ ...valueRef.current, repeat });\n  }\n\n  function setPeriod(newPeriod: number | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, period: newPeriod });\n  }\n\n  function setPeriodUnit(newPeriodUnit: PeriodUnit | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, periodUnit: newPeriodUnit });\n  }\n\n  function setDaysOfWeek(newDaysOfWeek: DayOfWeek[] | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, dayOfWeek: newDaysOfWeek });\n  }\n\n  return (\n    <Modal\n      title=\"Timing\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={() => props.onCancel()}\n    >\n      <Stack>\n        <FormSection title=\"Starts on\" htmlFor=\"timing-dialog-start\">\n          <DateTimeInput\n            disabled={eventProps?.readonly}\n            name=\"timing-dialog-start\"\n            onChange={(newValue) => setStart(newValue)}\n          />\n        </FormSection>\n        <Switch\n          disabled={repeatProps?.readonly}\n          label=\"Repeat\"\n          checked={!!value.repeat}\n          onChange={(e) => setRepeat(e.currentTarget.checked ? defaultValue.repeat : undefined)}\n        />\n        {value.repeat && (\n          <>\n            <FormSection title=\"Repeat every\" htmlFor=\"timing-dialog-period\">\n              <Group gap=\"xs\" grow wrap=\"nowrap\">\n                <TextInput\n                  disabled={repeatPeriodProps?.readonly}\n                  type=\"number\"\n                  step={1}\n                  id=\"timing-dialog-period\"\n                  name=\"timing-dialog-period\"\n                  defaultValue={value.repeat.period || 1}\n                  onChange={(e) => setPeriod(parseInt(e.currentTarget.value, 10) || 1)}\n                />\n                <NativeSelect\n                  disabled={repeatPeriodUnitProps?.readonly}\n                  id=\"timing-dialog-periodUnit\"\n                  name=\"timing-dialog-periodUnit\"\n                  defaultValue={value.repeat.periodUnit}\n                  onChange={(e) => setPeriodUnit(e.currentTarget.value as PeriodUnit | undefined)}\n                  data={[\n                    { label: 'second', value: 's' },\n                    { label: 'minute', value: 'min' },\n                    { label: 'hour', value: 'h' },\n                    { label: 'day', value: 'd' },\n                    { label: 'week', value: 'wk' },\n                    { label: 'month', value: 'mo' },\n                    { label: 'year', value: 'a' },\n                  ]}\n                />\n              </Group>\n            </FormSection>\n            {value.repeat.periodUnit === 'wk' && (\n              <FormSection title=\"Repeat on\">\n                <Chip.Group multiple onChange={setDaysOfWeek as (v: string[] | undefined) => void}>\n                  <Group justify=\"space-between\" mt=\"md\" gap=\"xs\">\n                    {daysOfWeek.map((day) => (\n                      <Chip key={day} value={day} size=\"xs\" radius=\"xl\" disabled={repeatDayOfWeekProps?.readonly}>\n                        {day.charAt(0).toUpperCase()}\n                      </Chip>\n                    ))}\n                  </Group>\n                </Chip.Group>\n              </FormSection>\n            )}\n          </>\n        )}\n        <Group justify=\"flex-end\">\n          <Button onClick={() => props.onOk(value)}>OK</Button>\n        </Group>\n      </Stack>\n    </Modal>\n  );\n}\n", "import { Button, Group } from '@mantine/core';\nimport { Slot } from '@medplum/fhirtypes';\nimport { useMemo, useState } from 'react';\nimport classes from './CalendarInput.module.css';\nimport { getMonthString, getStartMonth } from './CalendarInput.utils';\n\nexport interface CalendarInputProps {\n  readonly slots: Slot[];\n  readonly onChangeMonth: (date: Date) => void;\n  readonly onClick: (date: Date) => void;\n}\n\ninterface CalendarCell {\n  readonly date: Date;\n  readonly available: boolean;\n}\n\ntype OptionalCalendarCell = CalendarCell | undefined;\n\nexport function CalendarInput(props: CalendarInputProps): JSX.Element {\n  const { onChangeMonth, onClick } = props;\n  const [month, setMonth] = useState<Date>(getStartMonth);\n\n  function moveMonth(delta: number): void {\n    setMonth((currMonth) => {\n      const newMonth = new Date(currMonth.getTime());\n      newMonth.setMonth(currMonth.getMonth() + delta);\n      onChangeMonth(newMonth);\n      return newMonth;\n    });\n  }\n\n  const grid = useMemo(() => buildGrid(month, props.slots), [month, props.slots]);\n\n  return (\n    <div>\n      <Group justify=\"space-between\" gap=\"xs\" grow wrap=\"nowrap\">\n        <p style={{ flex: 1 }}>{getMonthString(month)}</p>\n        <Group justify=\"flex-end\" gap=\"xs\">\n          <Button variant=\"outline\" aria-label=\"Previous month\" onClick={() => moveMonth(-1)}>\n            &lt;\n          </Button>\n          <Button variant=\"outline\" aria-label=\"Next month\" onClick={() => moveMonth(1)}>\n            &gt;\n          </Button>\n        </Group>\n      </Group>\n      <table className={classes.table}>\n        <thead>\n          <tr>\n            <th>SUN</th>\n            <th>MON</th>\n            <th>TUE</th>\n            <th>WED</th>\n            <th>THU</th>\n            <th>FRI</th>\n            <th>SAT</th>\n          </tr>\n        </thead>\n        <tbody>\n          {grid.map((week, weekIndex) => (\n            <tr key={'week-' + weekIndex}>\n              {week.map((day, dayIndex) => (\n                <td key={'day-' + dayIndex}>\n                  {day && (\n                    <Button variant=\"light\" disabled={!day.available} onClick={() => onClick(day.date)}>\n                      {day.date.getDate()}\n                    </Button>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction buildGrid(startDate: Date, slots: Slot[]): OptionalCalendarCell[][] {\n  const d = new Date(startDate.getFullYear(), startDate.getMonth());\n  const grid: OptionalCalendarCell[][] = [];\n  let row: OptionalCalendarCell[] = [];\n\n  // Fill leading empty days\n  for (let i = 0; i < d.getDay(); i++) {\n    row.push(undefined);\n  }\n\n  while (d.getMonth() === startDate.getMonth()) {\n    row.push({\n      date: new Date(d.getTime()),\n      available: isDayAvailable(d, slots),\n    });\n\n    if (d.getDay() === 6) {\n      grid.push(row);\n      row = [];\n    }\n\n    d.setDate(d.getDate() + 1);\n  }\n\n  // Fill trailing empty days\n  if (d.getDay() !== 0) {\n    for (let i = d.getDay(); i < 7; i++) {\n      row.push(undefined);\n    }\n    grid.push(row);\n  }\n\n  return grid;\n}\n\n/**\n * Returns true if the given date is available for booking.\n * @param day - The day to check.\n * @param slots - The list of available slots.\n * @returns True if there are any available slots for the day.\n */\nfunction isDayAvailable(day: Date, slots: Slot[]): boolean {\n  // Note that slot start and end time may or may not be in UTC.\n  for (const slot of slots) {\n    const slotStart = new Date(slot.start as string);\n    if (\n      slotStart.getFullYear() === day.getFullYear() &&\n      slotStart.getMonth() === day.getMonth() &&\n      slotStart.getDate() === day.getDate()\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "\n.table {\n  width: 350px;\n\n  & th {\n    font-weight: normal;\n    font-size: 11px;\n    padding: 8px;\n    text-align: center;\n  }\n\n  & td {\n    padding: 2px 4px;\n  }\n\n  & td button {\n    width: 44px;\n    height: 44px;\n    color: theme.colors[theme.primaryColor][5];\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    padding: 0;\n    background-color: theme.colors[theme.primaryColor][0];\n    border: 0;\n    border-radius: 50px;\n    cursor: pointer;\n  }\n\n  & td button:hover {\n    background-color: theme.colors[theme.primaryColor][1];\n  }\n\n  & td button:disabled {\n    background-color: transparen;\n    cursor: defaul;\n    color: var(--mantine-color-gray-4);\n    font-weight: normal;\n  }\n}", "/**\n * Returns a month display string (e.g. \"January 2020\").\n * @param date - Any date within the month.\n * @returns The month display string (e.g. \"January 2020\")\n */\nexport function getMonthString(date: Date): string {\n  return date.toLocaleString('default', { month: 'long' }) + ' ' + date.getFullYear();\n}\n\nexport function getStartMonth(): Date {\n  const result = new Date();\n  result.setDate(1);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n", "import { ContainerProps, Container as MantineContainer } from '@mantine/core';\nimport classes from './Container.module.css';\n\nexport function Container(props: ContainerProps): JSX.Element {\n  const { children, ...others } = props;\n\n  return (\n    <MantineContainer className={classes.root} {...others}>\n      {children}\n    </MantineContainer>\n  );\n}\n", ".root {\n  @media (max-width: 800px) {\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n}\n", "import { ActionIcon, Center, Group, Loader, ScrollArea, TextInput } from '@mantine/core';\nimport { showNotification, updateNotification } from '@mantine/notifications';\nimport { MedplumClient, ProfileResource, createReference, normalizeErrorString } from '@medplum/core';\nimport {\n  Attachment,\n  AuditEvent,\n  Bundle,\n  Communication,\n  DiagnosticReport,\n  Media,\n  OperationOutcome,\n  Reference,\n  Resource,\n  ResourceType,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconCheck, IconCloudUpload, IconFileAlert, IconMessage } from '@tabler/icons-react';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { DiagnosticReportDisplay } from '../DiagnosticReportDisplay/DiagnosticReportDisplay';\nimport { Form } from '../Form/Form';\nimport { Panel } from '../Panel/Panel';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceDiffTable } from '../ResourceDiffTable/ResourceDiffTable';\nimport { ResourceTable } from '../ResourceTable/ResourceTable';\nimport { Timeline, TimelineItem, TimelineItemProps } from '../Timeline/Timeline';\nimport { sortByDateAndPriority } from '../utils/date';\nimport classes from './ResourceTimeline.module.css';\n\nexport interface ResourceTimelineMenuItemContext {\n  readonly primaryResource: Resource;\n  readonly currentResource: Resource;\n  readonly reloadTimeline: () => void;\n}\n\nexport interface ResourceTimelineProps<T extends Resource> {\n  readonly value: T | Reference<T>;\n  readonly loadTimelineResources: (\n    medplum: MedplumClient,\n    resourceType: ResourceType,\n    id: string\n  ) => Promise<PromiseSettledResult<Bundle>[]>;\n  readonly createCommunication?: (resource: T, sender: ProfileResource, text: string) => Communication;\n  readonly createMedia?: (resource: T, operator: ProfileResource, attachment: Attachment) => Media;\n  readonly getMenu?: (context: ResourceTimelineMenuItemContext) => ReactNode;\n}\n\nexport function ResourceTimeline<T extends Resource>(props: ResourceTimelineProps<T>): JSX.Element {\n  const medplum = useMedplum();\n  const sender = medplum.getProfile() as ProfileResource;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const resource = useResource(props.value);\n  const [history, setHistory] = useState<Bundle>();\n  const [items, setItems] = useState<Resource[]>([]);\n  const loadTimelineResources = props.loadTimelineResources;\n\n  const itemsRef = useRef<Resource[]>(items);\n  itemsRef.current = items;\n\n  /**\n   * Sorts and sets the items.\n   *\n   * Sorting is primarily a function of meta.lastUpdated, but there are special cases.\n   * When displaying connected resources, for example a Communication in the context of an Encounter,\n   * the Communication.sent time is used rather than Communication.meta.lastUpdated.\n   *\n   * Other examples of special cases:\n   * - DiagnosticReport.issued\n   * - Media.issued\n   * - Observation.issued\n   * - DocumentReference.date\n   *\n   * See \"sortByDateAndPriority()\" for more details.\n   */\n  const sortAndSetItems = useCallback(\n    (newItems: Resource[]): void => {\n      sortByDateAndPriority(newItems, resource);\n      newItems.reverse();\n      setItems(newItems);\n    },\n    [resource]\n  );\n\n  /**\n   * Handles a batch request response.\n   * @param batchResponse - The batch response.\n   */\n  const handleBatchResponse = useCallback(\n    (batchResponse: PromiseSettledResult<Bundle>[]): void => {\n      const newItems = [];\n\n      for (const settledResult of batchResponse) {\n        if (settledResult.status !== 'fulfilled') {\n          // User may not have access to all resource types\n          continue;\n        }\n\n        const bundle = settledResult.value;\n        if (bundle.type === 'history') {\n          setHistory(bundle);\n        }\n\n        if (bundle.entry) {\n          for (const entry of bundle.entry) {\n            newItems.push(entry.resource as Resource);\n          }\n        }\n      }\n\n      sortAndSetItems(newItems);\n    },\n    [sortAndSetItems]\n  );\n\n  /**\n   * Adds an array of resources to the timeline.\n   * @param resource - Resource to add.\n   */\n  const addResource = useCallback(\n    (resource: Resource): void => sortAndSetItems([...itemsRef.current, resource]),\n    [sortAndSetItems]\n  );\n\n  /**\n   * Loads the timeline.\n   */\n  const loadTimeline = useCallback(() => {\n    let resourceType: ResourceType;\n    let id: string;\n    if ('resourceType' in props.value) {\n      resourceType = props.value.resourceType;\n      id = props.value.id as string;\n    } else {\n      [resourceType, id] = props.value.reference?.split('/') as [ResourceType, string];\n    }\n    loadTimelineResources(medplum, resourceType, id).then(handleBatchResponse).catch(console.error);\n  }, [medplum, props.value, loadTimelineResources, handleBatchResponse]);\n\n  useEffect(() => loadTimeline(), [loadTimeline]);\n\n  /**\n   * Adds a Communication resource to the timeline.\n   * @param contentString - The comment content.\n   */\n  function createComment(contentString: string): void {\n    if (!resource || !props.createCommunication) {\n      // Encounter not loaded yet\n      return;\n    }\n    medplum\n      .createResource(props.createCommunication(resource, sender, contentString))\n      .then((result) => addResource(result))\n      .catch(console.error);\n  }\n\n  /**\n   * Adds a Media resource to the timeline.\n   * @param attachment - The media attachment.\n   */\n  function createMedia(attachment: Attachment): void {\n    if (!resource || !props.createMedia) {\n      // Encounter not loaded yet\n      return;\n    }\n    medplum\n      .createResource(props.createMedia(resource, sender, attachment))\n      .then((result) => addResource(result))\n      .then(() =>\n        updateNotification({\n          id: 'upload-notification',\n          color: 'teal',\n          title: 'Upload complete',\n          message: '',\n          icon: <IconCheck size={16} />,\n          autoClose: 2000,\n        })\n      )\n      .catch((reason) =>\n        updateNotification({\n          id: 'upload-notification',\n          color: 'red',\n          title: 'Upload error',\n          message: normalizeErrorString(reason),\n          icon: <IconFileAlert size={16} />,\n          autoClose: 2000,\n        })\n      );\n  }\n\n  function onUploadStart(): void {\n    showNotification({\n      id: 'upload-notification',\n      loading: true,\n      title: 'Initializing upload...',\n      message: 'Please wait...',\n      autoClose: false,\n      withCloseButton: false,\n    });\n  }\n\n  function onUploadProgress(e: ProgressEvent): void {\n    updateNotification({\n      id: 'upload-notification',\n      loading: true,\n      title: 'Uploading...',\n      message: getProgressMessage(e),\n      autoClose: false,\n      withCloseButton: false,\n    });\n  }\n\n  function onUploadError(outcome: OperationOutcome): void {\n    updateNotification({\n      id: 'upload-notification',\n      color: 'red',\n      title: 'Upload error',\n      message: normalizeErrorString(outcome),\n      icon: <IconFileAlert size={16} />,\n      autoClose: 2000,\n    });\n  }\n\n  if (!resource) {\n    return (\n      <Center style={{ width: '100%', height: '100%' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n  return (\n    <Timeline>\n      {props.createCommunication && (\n        <Panel>\n          <Form\n            testid=\"timeline-form\"\n            onSubmit={(formData: Record<string, string>) => {\n              createComment(formData.text);\n\n              const input = inputRef.current;\n              if (input) {\n                input.value = '';\n                input.focus();\n              }\n            }}\n          >\n            <Group gap=\"xs\" wrap=\"nowrap\" style={{ width: '100%' }}>\n              <ResourceAvatar value={sender} />\n              <TextInput\n                name=\"text\"\n                ref={inputRef}\n                placeholder=\"Add comment\"\n                style={{ width: '100%', maxWidth: 300 }}\n              />\n              <ActionIcon type=\"submit\" radius=\"xl\" color=\"blue\" variant=\"filled\">\n                <IconMessage size={16} />\n              </ActionIcon>\n              <AttachmentButton\n                securityContext={createReference(resource)}\n                onUpload={createMedia}\n                onUploadStart={onUploadStart}\n                onUploadProgress={onUploadProgress}\n                onUploadError={onUploadError}\n              >\n                {(props) => (\n                  <ActionIcon {...props} radius=\"xl\" color=\"blue\" variant=\"filled\">\n                    <IconCloudUpload size={16} />\n                  </ActionIcon>\n                )}\n              </AttachmentButton>\n            </Group>\n          </Form>\n        </Panel>\n      )}\n      {items.map((item) => {\n        if (!item) {\n          // TODO: Handle null history items for deleted versions.\n          return null;\n        }\n        const key = `${item.resourceType}/${item.id}/${item.meta?.versionId}`;\n        const menu = props.getMenu\n          ? props.getMenu({\n              primaryResource: resource,\n              currentResource: item,\n              reloadTimeline: loadTimeline,\n            })\n          : undefined;\n        if (item.resourceType === resource.resourceType && item.id === resource.id) {\n          return <HistoryTimelineItem key={key} history={history as Bundle} resource={item} popupMenuItems={menu} />;\n        }\n        switch (item.resourceType) {\n          case 'AuditEvent':\n            return <AuditEventTimelineItem key={key} resource={item} popupMenuItems={menu} />;\n          case 'Communication':\n            return <CommunicationTimelineItem key={key} resource={item} popupMenuItems={menu} />;\n          case 'DiagnosticReport':\n            return <DiagnosticReportTimelineItem key={key} resource={item} popupMenuItems={menu} />;\n          case 'Media':\n            return <MediaTimelineItem key={key} resource={item} popupMenuItems={menu} />;\n          default:\n            return (\n              <TimelineItem key={key} resource={item} padding={true}>\n                <ResourceTable value={item} ignoreMissingValues={true} />\n              </TimelineItem>\n            );\n        }\n      })}\n    </Timeline>\n  );\n}\n\ninterface HistoryTimelineItemProps extends TimelineItemProps {\n  readonly history: Bundle;\n}\n\nfunction HistoryTimelineItem(props: HistoryTimelineItemProps): JSX.Element {\n  const { history, resource, ...rest } = props;\n  const previous = getPrevious(history, resource);\n  if (previous) {\n    return (\n      <TimelineItem resource={resource} padding={true} {...rest}>\n        <ResourceDiffTable original={previous} revised={props.resource} />\n      </TimelineItem>\n    );\n  } else {\n    return (\n      <TimelineItem resource={resource} padding={true} {...rest}>\n        <h3>Created</h3>\n        <ResourceTable value={resource} ignoreMissingValues forceUseInput />\n      </TimelineItem>\n    );\n  }\n}\n\nfunction getPrevious(history: Bundle, version: Resource): Resource | undefined {\n  const entries = history.entry ?? [];\n  const index = entries.findIndex((entry) => entry.resource?.meta?.versionId === version.meta?.versionId);\n  // If not found index is -1, -1 === 0 - 1 so this returns undefined\n  if (index >= entries.length - 1) {\n    return undefined;\n  }\n  return entries[index + 1].resource;\n}\n\nfunction CommunicationTimelineItem(props: TimelineItemProps<Communication>): JSX.Element {\n  const routine = !props.resource.priority || props.resource.priority === 'routine';\n  const className = routine ? undefined : classes.pinnedComment;\n  return (\n    <TimelineItem\n      resource={props.resource}\n      profile={props.resource.sender}\n      dateTime={props.resource.sent}\n      padding={true}\n      className={className}\n      popupMenuItems={props.popupMenuItems}\n    >\n      <p>{props.resource.payload?.[0]?.contentString}</p>\n    </TimelineItem>\n  );\n}\n\nfunction MediaTimelineItem(props: TimelineItemProps<Media>): JSX.Element {\n  const contentType = props.resource.content?.contentType;\n  const padding =\n    contentType &&\n    !contentType.startsWith('image/') &&\n    !contentType.startsWith('video/') &&\n    contentType !== 'application/pdf';\n  return (\n    <TimelineItem resource={props.resource} padding={!!padding} popupMenuItems={props.popupMenuItems}>\n      <AttachmentDisplay value={props.resource.content} />\n    </TimelineItem>\n  );\n}\n\nfunction AuditEventTimelineItem(props: TimelineItemProps<AuditEvent>): JSX.Element {\n  return (\n    <TimelineItem resource={props.resource} padding={true} popupMenuItems={props.popupMenuItems}>\n      <ScrollArea>\n        <pre>{props.resource.outcomeDesc}</pre>\n      </ScrollArea>\n    </TimelineItem>\n  );\n}\n\nfunction DiagnosticReportTimelineItem(props: TimelineItemProps<DiagnosticReport>): JSX.Element {\n  return (\n    <TimelineItem resource={props.resource} padding={true} popupMenuItems={props.popupMenuItems}>\n      <DiagnosticReportDisplay value={props.resource} />\n    </TimelineItem>\n  );\n}\n\nfunction getProgressMessage(e: ProgressEvent): string {\n  if (e.lengthComputable) {\n    const percent = (100 * e.loaded) / e.total;\n    return `Uploaded: ${formatFileSize(e.loaded)} / ${formatFileSize(e.total)} ${percent.toFixed(2)}%`;\n  }\n  return `Uploaded: ${formatFileSize(e.loaded)}`;\n}\n\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) {\n    return '0.00 B';\n  }\n  const e = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, e)).toFixed(2) + ' ' + ' KMGTP'.charAt(e) + 'B';\n}\n", "import { Group, List, Stack, Text, Title } from '@mantine/core';\nimport { capitalize, formatCodeableConcept, formatDateTime, formatObservationValue, isReference } from '@medplum/core';\nimport {\n  Annotation,\n  DiagnosticReport,\n  Observation,\n  ObservationComponent,\n  ObservationReferenceRange,\n  Reference,\n  Specimen,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport cx from 'clsx';\nimport { useEffect, useState } from 'react';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { NoteDisplay } from '../NoteDisplay/NoteDisplay';\nimport { RangeDisplay } from '../RangeDisplay/RangeDisplay';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\nimport { StatusBadge } from '../StatusBadge/StatusBadge';\nimport classes from './DiagnosticReportDisplay.module.css';\n\nexport interface DiagnosticReportDisplayProps {\n  readonly value?: DiagnosticReport | Reference<DiagnosticReport>;\n  readonly hideObservationNotes?: boolean;\n  readonly hideSpecimenInfo?: boolean;\n}\n\nDiagnosticReportDisplay.defaultProps = {\n  hideObservationNotes: false,\n  hideSpecimenInfo: false,\n} as DiagnosticReportDisplayProps;\n\nexport function DiagnosticReportDisplay(props: DiagnosticReportDisplayProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const diagnosticReport = useResource(props.value);\n  const [specimens, setSpecimens] = useState<Specimen[]>();\n\n  useEffect(() => {\n    if (diagnosticReport?.specimen) {\n      Promise.allSettled(diagnosticReport.specimen.map((ref) => medplum.readReference(ref)))\n        .then((outcomes) =>\n          outcomes\n            .filter((outcome) => outcome.status === 'fulfilled')\n            .map((outcome) => (outcome as PromiseFulfilledResult<Specimen>).value)\n        )\n        .then(setSpecimens)\n        .catch(console.error);\n    }\n  }, [medplum, diagnosticReport]);\n\n  if (!diagnosticReport) {\n    return null;\n  }\n\n  const specimenNotes: Annotation[] = specimens?.flatMap((spec) => spec.note || []) || [];\n\n  if (diagnosticReport.presentedForm && diagnosticReport.presentedForm.length > 0) {\n    const pf = diagnosticReport.presentedForm[0];\n    if (pf.contentType?.startsWith('text/plain') && pf.data) {\n      specimenNotes.push({ text: window.atob(pf.data) });\n    }\n  }\n\n  return (\n    <Stack>\n      <Title>Diagnostic Report</Title>\n      <DiagnosticReportHeader value={diagnosticReport} />\n      {specimens && !props.hideSpecimenInfo && SpecimenInfo(specimens)}\n      {diagnosticReport.result && (\n        <ObservationTable hideObservationNotes={props.hideObservationNotes} value={diagnosticReport.result} />\n      )}\n      {specimenNotes.length > 0 && <NoteDisplay value={specimenNotes} />}\n    </Stack>\n  );\n}\n\ninterface DiagnosticReportHeaderProps {\n  readonly value: DiagnosticReport;\n}\n\nfunction DiagnosticReportHeader({ value }: DiagnosticReportHeaderProps): JSX.Element {\n  return (\n    <Group mt=\"md\" gap={30}>\n      {value.subject && (\n        <div>\n          <Text size=\"xs\" tt=\"uppercase\" c=\"dimmed\">\n            Subject\n          </Text>\n          <ResourceBadge value={value.subject} link={true} />\n        </div>\n      )}\n      {value.resultsInterpreter?.map((interpreter) => (\n        <div key={interpreter.reference}>\n          <Text size=\"xs\" tt=\"uppercase\" c=\"dimmed\">\n            Interpreter\n          </Text>\n          <ResourceBadge value={interpreter} link={true} />\n        </div>\n      ))}\n      {value.performer?.map((performer) => (\n        <div key={performer.reference}>\n          <Text size=\"xs\" tt=\"uppercase\" c=\"dimmed\">\n            Performer\n          </Text>\n          <ResourceBadge value={performer} link={true} />\n        </div>\n      ))}\n      {value.issued && (\n        <div>\n          <Text size=\"xs\" tt=\"uppercase\" c=\"dimmed\">\n            Issued\n          </Text>\n          <Text>{formatDateTime(value.issued)}</Text>\n        </div>\n      )}\n      {value.status && (\n        <div>\n          <Text size=\"xs\" tt=\"uppercase\" c=\"dimmed\">\n            Status\n          </Text>\n          <Text>{capitalize(value.status)}</Text>\n        </div>\n      )}\n    </Group>\n  );\n}\n\nfunction SpecimenInfo(specimens: Specimen[] | undefined): JSX.Element {\n  return (\n    <Stack gap=\"xs\">\n      <Title order={2} size=\"h6\">\n        Specimens\n      </Title>\n\n      <List type=\"ordered\">\n        {specimens?.map((specimen) => (\n          <List.Item ml=\"sm\" key={`specimen-${specimen.id}`}>\n            <Group gap={20}>\n              <Group gap={5}>\n                <Text fw={500}>Collected:</Text> {formatDateTime(specimen.collection?.collectedDateTime)}\n              </Group>\n              <Group gap={5}>\n                <Text fw={500}>Received:</Text> {formatDateTime(specimen.receivedTime)}\n              </Group>\n            </Group>\n          </List.Item>\n        ))}\n      </List>\n    </Stack>\n  );\n}\n\nexport interface ObservationTableProps {\n  readonly value?: Observation[] | Reference<Observation>[];\n  readonly ancestorIds?: string[];\n  readonly hideObservationNotes?: boolean;\n}\n\nexport function ObservationTable(props: ObservationTableProps): JSX.Element {\n  return (\n    <table className={classes.table}>\n      <thead>\n        <tr>\n          <th>Test</th>\n          <th>Value</th>\n          <th>Reference Range</th>\n          <th>Interpretation</th>\n          <th>Category</th>\n          <th>Performer</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ObservationRowGroup\n          value={props.value}\n          ancestorIds={props.ancestorIds}\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      </tbody>\n    </table>\n  );\n}\n\ninterface ObservationRowGroupProps {\n  readonly value?: Observation[] | Reference<Observation>[];\n  readonly ancestorIds?: string[];\n  readonly hideObservationNotes?: boolean;\n}\n\nfunction ObservationRowGroup(props: ObservationRowGroupProps): JSX.Element {\n  return (\n    <>\n      {props.value?.map((observation) => (\n        <ObservationRow\n          key={`obs-${isReference(observation) ? observation.reference : observation.id}`}\n          value={observation}\n          ancestorIds={props.ancestorIds}\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      ))}\n    </>\n  );\n}\n\ninterface ObservationRowProps {\n  readonly value: Observation | Reference<Observation>;\n  readonly ancestorIds?: string[];\n  readonly hideObservationNotes?: boolean;\n}\n\nfunction ObservationRow(props: ObservationRowProps): JSX.Element | null {\n  const observation = useResource(props.value);\n\n  if (!observation || props.ancestorIds?.includes(observation.id as string)) {\n    return null;\n  }\n\n  const displayNotes = !props.hideObservationNotes && observation.note;\n\n  const critical = isCritical(observation);\n\n  return (\n    <>\n      <tr className={cx({ [classes.criticalRow]: critical })}>\n        <td rowSpan={displayNotes ? 2 : 1}>\n          <MedplumLink to={observation}>\n            <CodeableConceptDisplay value={observation.code} />\n          </MedplumLink>\n        </td>\n        <td>\n          <ObservationValueDisplay value={observation} />\n        </td>\n        <td>\n          <ReferenceRangeDisplay value={observation.referenceRange} />\n        </td>\n        <td>\n          {observation.interpretation && observation.interpretation.length > 0 && (\n            <CodeableConceptDisplay value={observation.interpretation[0]} />\n          )}\n        </td>\n        <td>\n          {observation.category && observation.category.length > 0 && (\n            <>\n              {observation.category.map((concept) => (\n                <div key={`category-${formatCodeableConcept(concept)}`}>\n                  <CodeableConceptDisplay value={concept} />\n                </div>\n              ))}\n            </>\n          )}\n        </td>\n        <td>\n          {observation.performer?.map((performer) => <ReferenceDisplay key={performer.reference} value={performer} />)}\n        </td>\n        <td>{observation.status && <StatusBadge status={observation.status} />}</td>\n      </tr>\n      {observation.hasMember && (\n        <ObservationRowGroup\n          value={observation.hasMember as Reference<Observation>[]}\n          ancestorIds={\n            props.ancestorIds ? [...props.ancestorIds, observation.id as string] : [observation.id as string]\n          }\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      )}\n      {displayNotes && (\n        <tr>\n          <td colSpan={6}>\n            <NoteDisplay value={observation.note} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\ninterface ObservationValueDisplayProps {\n  readonly value?: Observation | ObservationComponent;\n}\n\nfunction ObservationValueDisplay(props: ObservationValueDisplayProps): JSX.Element | null {\n  const obs = props.value;\n  return <>{formatObservationValue(obs)}</>;\n}\n\ninterface ReferenceRangeProps {\n  readonly value?: ObservationReferenceRange[];\n}\n\nfunction ReferenceRangeDisplay(props: ReferenceRangeProps): JSX.Element | null {\n  const range = props.value && props.value.length > 0 && props.value[0];\n  if (!range) {\n    return null;\n  }\n  if (range.text) {\n    return <>{range.text}</>;\n  }\n  return <RangeDisplay value={range} />;\n}\n\n/**\n * Returns true if the observation is critical.\n * See: https://www.hl7.org/fhir/valueset-observation-interpretation.html\n * @param observation - The FHIR observation.\n * @returns True if the FHIR observation is a critical value.\n */\nfunction isCritical(observation: Observation): boolean {\n  const code = observation.interpretation?.[0]?.coding?.[0]?.code;\n  return code === 'AA' || code === 'LL' || code === 'HH' || code === 'A';\n}\n", "import { Blockquote, Stack } from '@mantine/core';\nimport { Annotation } from '@medplum/fhirtypes';\nimport classes from './NoteDisplay.module.css';\n\nexport interface NoteDisplayProps {\n  readonly value?: Annotation[];\n}\n\nexport function NoteDisplay({ value }: NoteDisplayProps): JSX.Element | null {\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <Stack justify=\"flex-start\" gap=\"xs\">\n      {value.map(\n        (note) =>\n          note.text && (\n            <Blockquote\n              key={`note-${note.text}`}\n              classNames={{ cite: classes.noteCite, root: classes.noteRoot }}\n              cite={note.authorReference?.display || note.authorString}\n              icon={null}\n            >\n              {note.text}\n            </Blockquote>\n          )\n      )}\n    </Stack>\n  );\n}\n", ".noteBody {\n  font-size: var(--mantine-font-size-sm);\n}\n\n.noteCite {\n  font-size: var(--mantine-font-size-xs);\n  margin-block-start: 3;\n}\n\n.noteRoot {\n  padding: 5px;\n}\n", "import { Group } from '@mantine/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nexport interface ResourceBadgeProps {\n  readonly value?: Reference | Resource;\n  readonly link?: boolean;\n}\n\nexport function ResourceBadge(props: ResourceBadgeProps): JSX.Element {\n  return (\n    <Group gap=\"xs\">\n      <ResourceAvatar size={24} radius={12} value={props.value} link={props.link} />\n      <ResourceName value={props.value} link={props.link} />\n    </Group>\n  );\n}\n", "import { Text, TextProps } from '@mantine/core';\nimport { getDisplayString, isOk, normalizeErrorString } from '@medplum/core';\nimport { OperationOutcome, Reference, Resource } from '@medplum/fhirtypes';\nimport { useResource } from '@medplum/react-hooks';\nimport { useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface ResourceNameProps extends TextProps {\n  readonly value?: Reference | Resource;\n  readonly link?: boolean;\n}\n\nexport function ResourceName(props: ResourceNameProps): JSX.Element | null {\n  const { value, link, ...rest } = props;\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const resource = useResource(value, setOutcome);\n  let text: string;\n\n  if (outcome && !isOk(outcome)) {\n    text = `[${normalizeErrorString(outcome)}]`;\n  } else if (resource) {\n    text = getDisplayString(resource);\n  } else {\n    return null;\n  }\n\n  return link ? (\n    <MedplumLink to={value} {...rest}>\n      {text}\n    </MedplumLink>\n  ) : (\n    <Text component=\"span\" {...rest}>\n      {text}\n    </Text>\n  );\n}\n", "import { Badge, DefaultMantineColor } from '@mantine/core';\n\n/*\n * Request status: https://hl7.org/fhir/valueset-request-status.html\n * draft, active, on-hold, revoked, completed, entered-in-error, unknown\n *\n * Publication status: https://hl7.org/fhir/valueset-publication-status.html\n * draft, active, retired, unknown\n *\n * Observation status: https://www.hl7.org/fhir/valueset-observation-status.html\n * registered, preliminary, final, amended,  corrected, cancelled, entered-in-error, unknown\n *\n * DiagnosticReport status: https://hl7.org/fhir/valueset-diagnostic-report-status.html\n * registered, preliminary, final, amended, corrected, appended, cancelled, entered-in-error, unknown\n *\n * Task status: https://hl7.org/fhir/valueset-task-status.html\n * draft, requested, received, accepted, rejected, ready, cancelled, in-progress, on-hold, failed, completed, entered-in-error\n *\n * Appointment status: https://www.hl7.org/fhir/valueset-appointmentstatus.html\n * proposed, pending, booked, arrived, fulfilled, cancelled, noshow, entered-in-error, chcked-in, waitlist\n *\n * Immunization status: https://hl7.org/fhir/r4/valueset-immunization-status.html\n * completed, entered-in-error, not-done\n */\n\nconst statusToColor: Record<string, DefaultMantineColor> = {\n  draft: 'blue',\n  active: 'blue',\n  'on-hold': 'yellow',\n  revoked: 'red',\n  completed: 'green',\n  'entered-in-error': 'red',\n  unknown: 'gray',\n  retired: 'gray',\n  registered: 'blue',\n  preliminary: 'blue',\n  final: 'green',\n  amended: 'yellow',\n  corrected: 'yellow',\n  cancelled: 'red',\n  requested: 'blue',\n  received: 'blue',\n  accepted: 'blue',\n  rejected: 'red',\n  ready: 'blue',\n  'in-progress': 'blue',\n  failed: 'red',\n  proposed: 'blue',\n  pending: 'blue',\n  booked: 'blue',\n  arrived: 'blue',\n  fulfilled: 'green',\n  noshow: 'red',\n  'checked-in': 'blue',\n  waitlist: 'gray',\n  routine: 'gray',\n  urgent: 'red',\n  asap: 'red',\n  stat: 'red',\n  'not-done': 'red',\n  connected: 'green',\n  disconnected: 'red',\n};\n\nexport interface StatusBadgeProps {\n  readonly status: string;\n}\n\nexport function StatusBadge(props: StatusBadgeProps): JSX.Element {\n  return <Badge color={statusToColor[props.status]}>{props.status}</Badge>;\n}\n", ".table {\n  border: 0.1px solid var(--mantine-color-gray-5);\n  border-collapse: collapse;\n\n  & td,\n  & th {\n    border: 0.1px solid var(--mantine-color-gray-5);\n    padding: 4px;\n  }\n}\n\n.criticalRow {\n  background: light-dark(var(--mantine-color-red-1), var(--mantine-color-red-7));\n  border: 0.1px solid var(--mantine-color-red-5);\n  color: var(--mantine-color-red-5);\n  font-weight: 500;\n\n  & td {\n    border: 0.1px solid var(--mantine-color-red-5);\n  }\n}\n\n.noteBody {\n  font-size: var(--mantine-font-size-sm);\n}\n\n.noteCite {\n  font-size: var(--mantine-font-size-xs);\n  margin-block-start: 3;\n}\n\n.noteRoot {\n  padding: 5px;\n}\n", "import { Paper, PaperProps } from '@mantine/core';\nimport cx from 'clsx';\nimport { ReactNode } from 'react';\nimport classes from './Panel.module.css';\n\nexport interface PanelProps extends PaperProps {\n  readonly width?: number;\n  readonly fill?: boolean;\n  readonly children?: ReactNode;\n}\n\nexport function Panel(props: PanelProps): JSX.Element {\n  const { width, fill, className, children, ...rest } = props;\n  const style = width ? { maxWidth: width } : undefined;\n  return (\n    <Paper\n      className={cx(classes.paper, fill && classes.fill, className)}\n      style={style}\n      shadow=\"sm\"\n      radius=\"sm\"\n      withBorder\n      {...rest}\n    >\n      {children}\n    </Paper>\n  );\n}\n", ".paper {\n  margin: var(--mantine-spacing-xl) auto;\n  padding: var(--mantine-spacing-md);\n\n  @media (max-width: 800px) {\n    padding: 8px;\n  }\n\n  & img {\n    width: 100%;\n    max-width: 100%;\n  }\n\n  & video {\n    width: 100%;\n    max-width: 100%;\n  }\n}\n\n.fill {\n  padding: 0;\n}\n", "import { Table } from '@mantine/core';\nimport {\n  InternalSchemaElement,\n  TypedValue,\n  arrayify,\n  capitalize,\n  evalFhirPathTyped,\n  getSearchParameterDetails,\n  toTypedValue,\n} from '@medplum/core';\nimport { Resource, SearchParameter } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Operation, createPatch } from 'rfc6902';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport classes from './ResourceDiffTable.module.css';\n\nexport interface ResourceDiffTableProps {\n  readonly original: Resource;\n  readonly revised: Resource;\n}\n\nexport function ResourceDiffTable(props: ResourceDiffTableProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const { original, revised } = props;\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n\n  useEffect(() => {\n    medplum\n      .requestSchema(props.original.resourceType)\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum, props.original.resourceType]);\n\n  const diffTable = useMemo(() => {\n    if (!schemaLoaded) {\n      return null;\n    }\n\n    const typedOriginal = [toTypedValue(original)];\n    const typedRevised = [toTypedValue(revised)];\n    const result = [];\n\n    // First, we filter and consolidate the patch operations\n    // We can do this because we do not use the \"value\" field in the patch operations\n    // Remove patch operations on meta elements such as \"meta.lastUpdated\" and \"meta.versionId\"\n    // Consolidate patch operations on arrays\n    const patch = mergePatchOperations(createPatch(original, revised));\n\n    // Next, convert the patch operations to a diff table\n    for (const op of patch) {\n      const path = op.path;\n      const fhirPath = jsonPathToFhirPath(path);\n      const property = tryGetElementDefinition(original.resourceType, fhirPath);\n      const originalValue = op.op === 'add' ? undefined : evalFhirPathTyped(fhirPath, typedOriginal);\n      const revisedValue = op.op === 'remove' ? undefined : evalFhirPathTyped(fhirPath, typedRevised);\n      result.push({\n        key: `op-${op.op}-${op.path}`,\n        name: `${capitalize(op.op)} ${fhirPath}`,\n        path: property?.path ?? original.resourceType + '.' + fhirPath,\n        property: property,\n        originalValue: touchUpValue(property, originalValue),\n        revisedValue: touchUpValue(property, revisedValue),\n      });\n    }\n\n    return result;\n  }, [schemaLoaded, original, revised]);\n\n  if (!diffTable) {\n    return null;\n  }\n\n  return (\n    <Table className={classes.root}>\n      <Table.Thead>\n        <Table.Tr>\n          <Table.Th />\n          <Table.Th>Before</Table.Th>\n          <Table.Th>After</Table.Th>\n        </Table.Tr>\n      </Table.Thead>\n      <Table.Tbody>\n        {diffTable.map((row) => (\n          <Table.Tr key={row.key}>\n            <Table.Td>{row.name}</Table.Td>\n            <Table.Td className={classes.removed}>\n              {row.originalValue && (\n                <ResourcePropertyDisplay\n                  path={row.path}\n                  property={row.property}\n                  propertyType={row.originalValue.type}\n                  value={row.originalValue.value}\n                  ignoreMissingValues={true}\n                />\n              )}\n            </Table.Td>\n            <Table.Td className={classes.added}>\n              {row.revisedValue && (\n                <ResourcePropertyDisplay\n                  path={row.path}\n                  property={row.property}\n                  propertyType={row.revisedValue.type}\n                  value={row.revisedValue.value}\n                  ignoreMissingValues={true}\n                />\n              )}\n            </Table.Td>\n          </Table.Tr>\n        ))}\n      </Table.Tbody>\n    </Table>\n  );\n}\n\nfunction mergePatchOperations(patch: Operation[]): Operation[] {\n  const result: Operation[] = [];\n  for (const patchOperation of patch) {\n    const { op, path } = patchOperation;\n    if (\n      path.startsWith('/meta/author') ||\n      path.startsWith('/meta/compartment') ||\n      path.startsWith('/meta/lastUpdated') ||\n      path.startsWith('/meta/versionId')\n    ) {\n      continue;\n    }\n    const count = patch.filter((el) => el.op === op && el.path === path).length;\n    const resultOperation = { op, path } as Operation;\n    if (count > 1 && (op === 'add' || op === 'remove') && /\\/[0-9-]+$/.test(path)) {\n      // Remove everything after the last slash\n      resultOperation.op = 'replace';\n      resultOperation.path = path.replace(/\\/[^/]+$/, '');\n    }\n    if (!result.some((el) => el.op === resultOperation.op && el.path === resultOperation.path)) {\n      // Only add the operation if it doesn't already exist\n      result.push(resultOperation);\n    }\n  }\n  return result;\n}\n\nfunction jsonPathToFhirPath(path: string): string {\n  const parts = path.split('/').filter(Boolean);\n  let result = '';\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (part === '-') {\n      result += '.last()';\n    } else if (/^\\d+$/.test(part)) {\n      result += `[${part}]`;\n    } else {\n      if (i > 0) {\n        result += '.';\n      }\n      result += part;\n    }\n  }\n\n  // For attachments, remove the .url suffix\n  // Note that not all \".url\" properties are attachments, but it is the common case.\n  // If the property is not an attachment, the diff will simply render the parent element,\n  // which is still fine.\n  if (result.endsWith('.url')) {\n    result = result.replace(/\\.url$/, '');\n  }\n\n  return result;\n}\n\nfunction tryGetElementDefinition(resourceType: string, fhirPath: string): InternalSchemaElement | undefined {\n  const details = getSearchParameterDetails(resourceType, {\n    resourceType: 'SearchParameter',\n    base: [resourceType],\n    code: resourceType + '.' + fhirPath,\n    expression: resourceType + '.' + fhirPath,\n  } as SearchParameter);\n  return details?.elementDefinitions?.[0];\n}\n\nfunction touchUpValue(\n  property: InternalSchemaElement | undefined,\n  input: TypedValue[] | TypedValue | undefined\n): TypedValue | undefined {\n  if (!input) {\n    return input;\n  }\n  return {\n    type: Array.isArray(input) ? input[0].type : input.type,\n    value: fixArray(input, !!property?.isArray),\n  };\n}\n\nfunction fixArray(input: TypedValue[] | TypedValue, isArray: boolean): any {\n  const inputValue = (arrayify(input) as TypedValue[]).flatMap((v) => v.value);\n  return isArray ? inputValue : inputValue[0];\n}\n", ".root {\n  border-collapse: collapse;\n  width: 100%;\n\n  & tr {\n    border-top: 0.1px solid var(--mantine-color-gray-3);\n  }\n\n  & th,\n  & td {\n    padding: var(--mantine-spacing-sm) var(--mantine-spacing-sm);\n    vertical-align: top;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    white-space: normal; \n    min-width: 100px; \n  }\n}\n\n.removed {\n  color: var(--mantine-color-red-7);\n  text-decoration: line-through;\n}\n\n.added {\n  color: var(--mantine-color-green-7);\n}\n", "import { AccessPolicyInteraction, satisfiedAccessPolicy, tryGetProfile } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { BackboneElementDisplay } from '../BackboneElementDisplay/BackboneElementDisplay';\n\nexport interface ResourceTableProps {\n  /**\n   * The input value either as a resource or a reference.\n   */\n  readonly value: Resource | Reference;\n\n  /**\n   * Optional flag to ignore missing values.\n   * By default, missing values are displayed as empty strings.\n   */\n  readonly ignoreMissingValues?: boolean;\n\n  /**\n   * Optional flag to force use the input value.\n   * This is useful when you want to display a specific version of the resource,\n   * and not use the latest version.\n   */\n  readonly forceUseInput?: boolean;\n\n  /** (optional) URL of the resource profile used to display the form. */\n  readonly profileUrl?: string;\n}\n\nexport function ResourceTable(props: ResourceTableProps): JSX.Element | null {\n  const { profileUrl } = props;\n  const medplum = useMedplum();\n  const accessPolicy = medplum.getAccessPolicy();\n  const value = useResource(props.value);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n\n    if (profileUrl) {\n      medplum\n        .requestProfileSchema(profileUrl, { expandProfile: true })\n        .then(() => {\n          const profile = tryGetProfile(profileUrl);\n          if (profile) {\n            setSchemaLoaded(true);\n          } else {\n            console.error(`Schema not found for ${profileUrl}`);\n          }\n        })\n        .catch((reason) => {\n          console.error('Error in requestProfileSchema', reason);\n        });\n    } else {\n      const schemaName = value.resourceType;\n      medplum\n        .requestSchema(schemaName)\n        .then(() => {\n          setSchemaLoaded(true);\n        })\n        .catch(console.error);\n    }\n  }, [medplum, profileUrl, value]);\n\n  const accessPolicyResource = useMemo(() => {\n    return value && satisfiedAccessPolicy(value, AccessPolicyInteraction.READ, accessPolicy);\n  }, [accessPolicy, value]);\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  return (\n    <BackboneElementDisplay\n      path={value.resourceType}\n      value={{\n        type: value.resourceType,\n        value: props.forceUseInput ? props.value : value,\n      }}\n      profileUrl={profileUrl}\n      ignoreMissingValues={props.ignoreMissingValues}\n      accessPolicyResource={accessPolicyResource}\n    />\n  );\n}\n", "import { ActionIcon, Group, Menu, Text } from '@mantine/core';\nimport { formatDateTime, getReferenceString } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { IconDots } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { ReactNode } from 'react';\nimport { Container } from '../Container/Container';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { Panel, PanelProps } from '../Panel/Panel';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\nimport classes from './Timeline.module.css';\n\nexport interface TimelineProps {\n  readonly children?: ReactNode;\n}\n\nexport function Timeline(props: TimelineProps): JSX.Element {\n  return <Container>{props.children}</Container>;\n}\n\nexport interface TimelineItemProps<T extends Resource = Resource> extends PanelProps {\n  readonly resource: T;\n  readonly profile?: Reference;\n  readonly dateTime?: string;\n  readonly padding?: boolean;\n  readonly popupMenuItems?: ReactNode;\n}\n\nexport function TimelineItem(props: TimelineItemProps): JSX.Element {\n  const { resource, profile, padding, popupMenuItems, ...others } = props;\n  const author = profile ?? resource.meta?.author;\n  const dateTime = props.dateTime ?? resource.meta?.lastUpdated;\n\n  return (\n    <Panel data-testid=\"timeline-item\" fill={true} {...others}>\n      <Group justify=\"space-between\" gap={8} mx=\"xs\" my=\"sm\">\n        <ResourceAvatar value={author} link={true} size=\"md\" />\n        <div style={{ flex: 1 }}>\n          <Text size=\"sm\">\n            <ResourceName c=\"dark\" fw={500} value={author} link={true} />\n          </Text>\n          <Text size=\"xs\">\n            <MedplumLink c=\"dimmed\" to={props.resource}>\n              {formatDateTime(dateTime)}\n            </MedplumLink>\n            <Text component=\"span\" c=\"dimmed\" mx={8}>\n              &middot;\n            </Text>\n            <MedplumLink c=\"dimmed\" to={props.resource}>\n              {props.resource.resourceType}\n            </MedplumLink>\n          </Text>\n        </div>\n        {popupMenuItems && (\n          <Menu position=\"bottom-end\" shadow=\"md\" width={200}>\n            <Menu.Target>\n              <ActionIcon\n                color=\"gray\"\n                variant=\"subtle\"\n                radius=\"xl\"\n                aria-label={`Actions for ${getReferenceString(props.resource)}`}\n              >\n                <IconDots />\n              </ActionIcon>\n            </Menu.Target>\n            {popupMenuItems}\n          </Menu>\n        )}\n      </Group>\n      <ErrorBoundary>\n        <div className={cx(classes.item, { [classes.itemPadding]: padding })}>{props.children}</div>\n      </ErrorBoundary>\n    </Panel>\n  );\n}\n", ".item {\n  white-space: pre-wrap;\n}\n\n.itemPadding {\n  padding: 0 16px 16px 16px;\n}\n", "import { Resource } from '@medplum/fhirtypes';\n\n/**\n * Sorts an array of resources in place by meta.lastUpdated ascending.\n * @param resources - Array of resources.\n * @param timelineResource - Optional primary resource of a timeline view. If specified, the primary resource will be sorted by meta.lastUpdated descending.\n */\nexport function sortByDateAndPriority(resources: Resource[], timelineResource?: Resource): void {\n  resources.sort((a: Resource, b: Resource): number => {\n    const priority1 = getPriorityScore(a, timelineResource);\n    const priority2 = getPriorityScore(b, timelineResource);\n    if (priority1 > priority2) {\n      return 1;\n    }\n    if (priority1 < priority2) {\n      return -1;\n    }\n    return getTime(a, timelineResource) - getTime(b, timelineResource);\n  });\n}\n\nfunction getPriorityScore(resource: Resource, timelineResource: Resource | undefined): number {\n  if (!isSameResourceType(resource, timelineResource)) {\n    // Only use priority if not the primary resource of a timeline view.\n\n    const priority = (resource as any).priority;\n    if (typeof priority === 'string') {\n      return { stat: 4, asap: 3, urgent: 2 }[priority] ?? 0;\n    }\n  }\n  return 0;\n}\n\nfunction getTime(resource: Resource, timelineResource: Resource | undefined): number {\n  if (!isSameResourceType(resource, timelineResource)) {\n    // Only use special case timestamps if not the primary resource of a timeline view.\n\n    if (resource.resourceType === 'Communication' && resource.sent) {\n      return new Date(resource.sent).getTime();\n    }\n\n    if (\n      (resource.resourceType === 'DiagnosticReport' ||\n        resource.resourceType === 'Media' ||\n        resource.resourceType === 'Observation') &&\n      resource.issued\n    ) {\n      return new Date(resource.issued).getTime();\n    }\n\n    if (resource.resourceType === 'DocumentReference' && resource.date) {\n      return new Date(resource.date).getTime();\n    }\n  }\n\n  const dateTime = resource.meta?.lastUpdated;\n  if (!dateTime) {\n    return 0;\n  }\n  return new Date(dateTime).getTime();\n}\n\nfunction isSameResourceType(a: Resource, b: Resource | undefined): boolean {\n  return !!b && a.resourceType === b.resourceType && a.id === b.id;\n}\n", "\n.pinnedComment {\n  background-color: var(--mantine-color-blue-0);\n}", "import { MedplumClient } from '@medplum/core';\nimport { Reference, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { ResourceTimeline, ResourceTimelineProps } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface DefaultResourceTimelineProps extends Pick<ResourceTimelineProps<Resource>, 'getMenu'> {\n  readonly resource: Resource | Reference;\n}\n\nexport function DefaultResourceTimeline(props: DefaultResourceTimelineProps): JSX.Element {\n  const { resource, ...rest } = props;\n  return (\n    <ResourceTimeline\n      value={resource}\n      loadTimelineResources={async (medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n        const ref = `${resourceType}/${id}`;\n        const _count = 100;\n        return Promise.allSettled([\n          medplum.readHistory(resourceType, id),\n          medplum.search('Task', { _filter: `based-on eq ${ref} or focus eq ${ref} or subject eq ${ref}`, _count }),\n        ]);\n      }}\n      {...rest}\n    />\n  );\n}\n", "import { Container } from '../Container/Container';\nimport { Panel, PanelProps } from '../Panel/Panel';\n\nexport function Document(props: PanelProps): JSX.Element {\n  const { children, ...others } = props;\n  return (\n    <Container>\n      <Panel {...others}>{children}</Panel>\n    </Container>\n  );\n}\n", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Encounter, Reference, ResourceType } from '@medplum/fhirtypes';\nimport { ResourceTimeline, ResourceTimelineProps } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface EncounterTimelineProps extends Pick<ResourceTimelineProps<Encounter>, 'getMenu'> {\n  readonly encounter: Encounter | Reference<Encounter>;\n}\n\nexport function EncounterTimeline(props: EncounterTimelineProps): JSX.Element {\n  const { encounter, ...rest } = props;\n\n  return (\n    <ResourceTimeline\n      value={encounter}\n      loadTimelineResources={async (medplum: MedplumClient, _resourceType: ResourceType, id: string) => {\n        return Promise.allSettled([\n          medplum.readHistory('Encounter', id),\n          medplum.search('Communication', 'encounter=Encounter/' + id),\n          medplum.search('Media', 'encounter=Encounter/' + id),\n        ]);\n      }}\n      createCommunication={(resource: Encounter, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        encounter: createReference(resource),\n        subject: resource.subject,\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: Encounter, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        encounter: createReference(resource),\n        subject: resource.subject,\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n      {...rest}\n    />\n  );\n}\n", "import { Button, Loader, Table } from '@mantine/core';\nimport { normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, Resource } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ChangeEvent, MouseEvent, memo, useEffect, useRef, useState } from 'react';\nimport { FhirPathDisplay } from '../FhirPathDisplay/FhirPathDisplay';\nimport { SearchClickEvent } from '../SearchControl/SearchControl';\nimport { isCheckboxCell, killEvent } from '../utils/dom';\n\nexport interface FhirPathTableField {\n  readonly propertyType: string;\n  readonly name: string;\n  readonly fhirPath: string;\n}\n\nexport interface FhirPathTableProps {\n  readonly resourceType: string;\n  readonly query: string;\n  readonly fields: FhirPathTableField[];\n  readonly checkboxesEnabled?: boolean;\n  readonly onClick?: (e: SearchClickEvent) => void;\n  readonly onAuxClick?: (e: SearchClickEvent) => void;\n  readonly onBulk?: (ids: string[]) => void;\n}\n\nexport interface SmartSearchResponse {\n  readonly data: {\n    ResourceList: Resource[];\n  };\n}\n\n/**\n * The FhirPathTable component represents the embeddable search table control.\n * @param props - FhirPathTable React props.\n * @returns FhirPathTable React node.\n */\nexport function FhirPathTable(props: FhirPathTableProps): JSX.Element {\n  const medplum = useMedplum();\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const { query, fields } = props;\n  const [response, setResponse] = useState<SmartSearchResponse | undefined>();\n  const [selected, setSelected] = useState<{ [id: string]: boolean }>({});\n\n  const responseRef = useRef<SmartSearchResponse>();\n  responseRef.current = response;\n\n  const selectedRef = useRef<{ [id: string]: boolean }>({});\n  selectedRef.current = selected;\n\n  useEffect(() => {\n    setOutcome(undefined);\n    medplum\n      .graphql(query)\n      .then(setResponse)\n      .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n  }, [medplum, query]);\n\n  function handleSingleCheckboxClick(e: ChangeEvent, id: string): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = { ...selectedRef.current };\n    if (checked) {\n      newSelected[id] = true;\n    } else {\n      delete newSelected[id];\n    }\n    setSelected(newSelected);\n  }\n\n  function handleAllCheckboxClick(e: ChangeEvent): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = {} as { [id: string]: boolean };\n    const resources = responseRef.current?.data.ResourceList;\n    if (checked && resources) {\n      resources.forEach((resource) => {\n        if (resource.id) {\n          newSelected[resource.id] = true;\n        }\n      });\n    }\n    setSelected(newSelected);\n  }\n\n  function isAllSelected(): boolean {\n    const resources = responseRef.current?.data.ResourceList;\n    if (!resources || resources.length === 0) {\n      return false;\n    }\n    for (const resource of resources) {\n      if (resource.id && !selectedRef.current[resource.id]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function handleRowClick(e: MouseEvent, resource: Resource): void {\n    if (isCheckboxCell(e.target as Element)) {\n      // Ignore clicks on checkboxes\n      return;\n    }\n\n    killEvent(e);\n\n    if (e.button !== 1 && props.onClick) {\n      props.onClick(new SearchClickEvent(resource, e));\n    }\n\n    if (e.button === 1 && props.onAuxClick) {\n      props.onAuxClick(new SearchClickEvent(resource, e));\n    }\n  }\n\n  useEffect(() => {\n    medplum\n      .requestSchema(props.resourceType)\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum, props.resourceType]);\n\n  if (!schemaLoaded) {\n    return <Loader />;\n  }\n\n  const checkboxColumn = props.checkboxesEnabled;\n\n  return (\n    <div onContextMenu={(e) => killEvent(e)} data-testid=\"search-control\">\n      <Table>\n        <Table.Thead>\n          <Table.Tr>\n            {checkboxColumn && (\n              <Table.Th>\n                <input\n                  type=\"checkbox\"\n                  value=\"checked\"\n                  aria-label=\"all-checkbox\"\n                  data-testid=\"all-checkbox\"\n                  checked={isAllSelected()}\n                  onChange={(e) => handleAllCheckboxClick(e)}\n                />\n              </Table.Th>\n            )}\n            {fields.map((field) => (\n              <Table.Th key={field.name}>{field.name}</Table.Th>\n            ))}\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>\n          {response?.data.ResourceList.map(\n            (resource) =>\n              resource && (\n                <Table.Tr\n                  key={resource.id}\n                  data-testid=\"search-control-row\"\n                  onClick={(e) => handleRowClick(e, resource)}\n                  onAuxClick={(e) => handleRowClick(e, resource)}\n                >\n                  {checkboxColumn && (\n                    <Table.Td>\n                      <input\n                        type=\"checkbox\"\n                        value=\"checked\"\n                        data-testid=\"row-checkbox\"\n                        aria-label={`Checkbox for ${resource.id}`}\n                        checked={!!selected[resource.id as string]}\n                        onChange={(e) => handleSingleCheckboxClick(e, resource.id as string)}\n                      />\n                    </Table.Td>\n                  )}\n                  {fields.map((field) => {\n                    return (\n                      <Table.Td key={field.name}>\n                        <FhirPathDisplay propertyType={field.propertyType} path={field.fhirPath} resource={resource} />\n                      </Table.Td>\n                    );\n                  })}\n                </Table.Tr>\n              )\n          )}\n        </Table.Tbody>\n      </Table>\n      {response?.data.ResourceList.length === 0 && <div data-testid=\"empty-search\">No results</div>}\n      {outcome && (\n        <div data-testid=\"search-error\">\n          <pre style={{ textAlign: 'left' }}>{JSON.stringify(outcome, undefined, 2)}</pre>\n        </div>\n      )}\n      {props.onBulk && (\n        <Button onClick={() => (props.onBulk as (ids: string[]) => any)(Object.keys(selectedRef.current))}>\n          Bulk...\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport const MemoizedFhirPathTable = memo(FhirPathTable);\n", "import { evalFhirPath } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\n\nexport interface FhirPathDisplayProps {\n  readonly resource: Resource;\n  readonly path: string;\n  readonly propertyType: string;\n}\n\nexport function FhirPathDisplay(props: FhirPathDisplayProps): JSX.Element | null {\n  let value;\n\n  try {\n    value = evalFhirPath(props.path, props.resource);\n  } catch (err) {\n    console.warn('FhirPathDisplay:', err);\n    return null;\n  }\n\n  if (value.length > 1) {\n    throw new Error(\n      `Component \"path\" for \"FhirPathDisplay\" must resolve to a single element. \\\n       Received ${value.length} elements \\\n       [${JSON.stringify(value, null, 2)}]`\n    );\n  }\n  return <ResourcePropertyDisplay value={value[0] || ''} propertyType={props.propertyType} />;\n}\n", "import {\n  ActionIcon,\n  Button,\n  Center,\n  Group,\n  Loader,\n  Menu,\n  Pagination,\n  Table,\n  Text,\n  UnstyledButton,\n} from '@mantine/core';\nimport {\n  DEFAULT_SEARCH_COUNT,\n  Filter,\n  SearchRequest,\n  deepEquals,\n  formatSearchQuery,\n  isDataTypeLoaded,\n  normalizeOperationOutcome,\n} from '@medplum/core';\nimport { Bundle, OperationOutcome, Resource, ResourceType, SearchParameter } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport {\n  IconAdjustmentsHorizontal,\n  IconBoxMultiple,\n  IconColumns,\n  IconFilePlus,\n  IconFilter,\n  IconRefresh,\n  IconTableExport,\n  IconTrash,\n} from '@tabler/icons-react';\nimport { ChangeEvent, MouseEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { Container } from '../Container/Container';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\nimport { SearchExportDialog } from '../SearchExportDialog/SearchExportDialog';\nimport { SearchFieldEditor } from '../SearchFieldEditor/SearchFieldEditor';\nimport { SearchFilterEditor } from '../SearchFilterEditor/SearchFilterEditor';\nimport { SearchFilterValueDialog } from '../SearchFilterValueDialog/SearchFilterValueDialog';\nimport { SearchFilterValueDisplay } from '../SearchFilterValueDisplay/SearchFilterValueDisplay';\nimport { SearchPopupMenu } from '../SearchPopupMenu/SearchPopupMenu';\nimport { isCheckboxCell, killEvent } from '../utils/dom';\nimport classes from './SearchControl.module.css';\nimport { getFieldDefinitions } from './SearchControlField';\nimport { addFilter, buildFieldNameString, getOpString, renderValue, setPage } from './SearchUtils';\n\nexport class SearchChangeEvent extends Event {\n  readonly definition: SearchRequest;\n\n  constructor(definition: SearchRequest) {\n    super('change');\n    this.definition = definition;\n  }\n}\n\nexport class SearchLoadEvent extends Event {\n  readonly response: Bundle;\n\n  constructor(response: Bundle) {\n    super('load');\n    this.response = response;\n  }\n}\n\nexport class SearchClickEvent extends Event {\n  readonly resource: Resource;\n  readonly browserEvent: MouseEvent;\n\n  constructor(resource: Resource, browserEvent: MouseEvent) {\n    super('click');\n    this.resource = resource;\n    this.browserEvent = browserEvent;\n  }\n}\n\nexport interface SearchControlProps {\n  readonly search: SearchRequest;\n  readonly checkboxesEnabled?: boolean;\n  readonly hideToolbar?: boolean;\n  readonly hideFilters?: boolean;\n  readonly onLoad?: (e: SearchLoadEvent) => void;\n  readonly onChange?: (e: SearchChangeEvent) => void;\n  readonly onClick?: (e: SearchClickEvent) => void;\n  readonly onAuxClick?: (e: SearchClickEvent) => void;\n  readonly onNew?: () => void;\n  readonly onExport?: () => void;\n  readonly onExportCsv?: () => void;\n  readonly onExportTransactionBundle?: () => void;\n  readonly onDelete?: (ids: string[]) => void;\n  readonly onBulk?: (ids: string[]) => void;\n}\n\ninterface SearchControlState {\n  readonly searchResponse?: Bundle;\n  readonly selected: { [id: string]: boolean };\n  readonly fieldEditorVisible: boolean;\n  readonly filterEditorVisible: boolean;\n  readonly filterDialogVisible: boolean;\n  readonly exportDialogVisible: boolean;\n  readonly filterDialogFilter?: Filter;\n  readonly filterDialogSearchParam?: SearchParameter;\n}\n\n/**\n * The SearchControl component represents the embeddable search table control.\n * It includes the table, rows, headers, sorting, etc.\n * It does not include the field editor, filter editor, pagination buttons.\n * @param props - The SearchControl React props.\n * @returns The SearchControl React node.\n */\nexport function SearchControl(props: SearchControlProps): JSX.Element {\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const { search, onLoad } = props;\n\n  const [memoizedSearch, setMemoizedSearch] = useState(search);\n\n  if (!deepEquals(search, memoizedSearch)) {\n    setMemoizedSearch(search);\n  }\n\n  const [state, setState] = useState<SearchControlState>({\n    selected: {},\n    fieldEditorVisible: false,\n    filterEditorVisible: false,\n    exportDialogVisible: false,\n    filterDialogVisible: false,\n  });\n\n  const stateRef = useRef<SearchControlState>(state);\n  stateRef.current = state;\n\n  const total = memoizedSearch.total ?? 'accurate';\n\n  const loadResults = useCallback(\n    (options?: RequestInit) => {\n      setOutcome(undefined);\n      medplum\n        .requestSchema(memoizedSearch.resourceType as ResourceType)\n        .then(() =>\n          medplum.search(\n            memoizedSearch.resourceType as ResourceType,\n            formatSearchQuery({ ...memoizedSearch, total, fields: undefined }),\n            options\n          )\n        )\n        .then((response) => {\n          setState({ ...stateRef.current, searchResponse: response });\n          if (onLoad) {\n            onLoad(new SearchLoadEvent(response));\n          }\n        })\n        .catch((reason) => {\n          setState({ ...stateRef.current, searchResponse: undefined });\n          setOutcome(normalizeOperationOutcome(reason));\n        });\n    },\n    [medplum, memoizedSearch, total, onLoad]\n  );\n\n  const refreshResults = useCallback(() => {\n    setState({ ...stateRef.current, searchResponse: undefined });\n    loadResults({ cache: 'reload' });\n  }, [loadResults]);\n\n  useEffect(() => {\n    loadResults();\n  }, [loadResults]);\n\n  function handleSingleCheckboxClick(e: ChangeEvent, id: string): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = { ...stateRef.current.selected };\n    if (checked) {\n      newSelected[id] = true;\n    } else {\n      delete newSelected[id];\n    }\n    setState({ ...stateRef.current, selected: newSelected });\n  }\n\n  function handleAllCheckboxClick(e: ChangeEvent): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = {} as { [id: string]: boolean };\n    const searchResponse = stateRef.current.searchResponse;\n    if (checked && searchResponse?.entry) {\n      searchResponse.entry.forEach((entry) => {\n        if (entry.resource?.id) {\n          newSelected[entry.resource.id] = true;\n        }\n      });\n    }\n    setState({ ...stateRef.current, selected: newSelected });\n  }\n\n  function isAllSelected(): boolean {\n    const state = stateRef.current;\n    if (!state.searchResponse?.entry || state.searchResponse.entry.length === 0) {\n      return false;\n    }\n    for (const e of state.searchResponse.entry) {\n      if (e.resource?.id && !state.selected[e.resource.id]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Emits a change event to the optional change listener.\n   * @param newSearch - The new search definition.\n   */\n  function emitSearchChange(newSearch: SearchRequest): void {\n    if (props.onChange) {\n      props.onChange(new SearchChangeEvent(newSearch));\n    }\n  }\n\n  /**\n   * Handles a click on a order row.\n   * @param e - The click event.\n   * @param resource - The FHIR resource.\n   */\n  function handleRowClick(e: MouseEvent, resource: Resource): void {\n    if (isCheckboxCell(e.target as Element)) {\n      // Ignore clicks on checkboxes\n      return;\n    }\n\n    if (e.button === 2) {\n      // Ignore right clicks\n      return;\n    }\n\n    killEvent(e);\n\n    const isAux = e.button === 1 || e.ctrlKey || e.metaKey;\n\n    if (!isAux && props.onClick) {\n      props.onClick(new SearchClickEvent(resource, e));\n    }\n\n    if (isAux && props.onAuxClick) {\n      props.onAuxClick(new SearchClickEvent(resource, e));\n    }\n  }\n\n  function isExportPassed(): boolean {\n    return !!(props.onExport ?? props.onExportCsv ?? props.onExportTransactionBundle);\n  }\n\n  if (outcome) {\n    return <OperationOutcomeAlert outcome={outcome} />;\n  }\n\n  if (!isDataTypeLoaded(memoizedSearch.resourceType)) {\n    return (\n      <Center style={{ width: '100%', height: '100%' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n  const checkboxColumn = props.checkboxesEnabled;\n  const fields = getFieldDefinitions(memoizedSearch);\n  const resourceType = memoizedSearch.resourceType;\n  const lastResult = state.searchResponse;\n  const entries = lastResult?.entry;\n  const resources = entries?.map((e) => e.resource);\n\n  const buttonVariant = 'subtle';\n  const buttonColor = 'gray';\n  const iconSize = 16;\n  const isMobile = window.innerWidth < 768;\n\n  return (\n    <div className={classes.root} data-testid=\"search-control\">\n      {!props.hideToolbar && (\n        <Group justify=\"space-between\" mb=\"xl\">\n          <Group gap={2}>\n            <Button\n              size=\"compact-md\"\n              variant={buttonVariant}\n              color={buttonColor}\n              leftSection={<IconColumns size={iconSize} />}\n              onClick={() => setState({ ...stateRef.current, fieldEditorVisible: true })}\n            >\n              Fields\n            </Button>\n            <Button\n              size=\"compact-md\"\n              variant={buttonVariant}\n              color={buttonColor}\n              leftSection={<IconFilter size={iconSize} />}\n              onClick={() => setState({ ...stateRef.current, filterEditorVisible: true })}\n            >\n              Filters\n            </Button>\n            {props.onNew && (\n              <Button\n                size=\"compact-md\"\n                variant={buttonVariant}\n                color={buttonColor}\n                leftSection={<IconFilePlus size={iconSize} />}\n                onClick={props.onNew}\n              >\n                New...\n              </Button>\n            )}\n            {!isMobile && isExportPassed() && (\n              <Button\n                size=\"compact-md\"\n                variant={buttonVariant}\n                color={buttonColor}\n                leftSection={<IconTableExport size={iconSize} />}\n                onClick={\n                  props.onExport ? props.onExport : () => setState({ ...stateRef.current, exportDialogVisible: true })\n                }\n              >\n                Export...\n              </Button>\n            )}\n            {!isMobile && props.onDelete && (\n              <Button\n                size=\"compact-md\"\n                variant={buttonVariant}\n                color={buttonColor}\n                leftSection={<IconTrash size={iconSize} />}\n                onClick={() => (props.onDelete as (ids: string[]) => any)(Object.keys(state.selected))}\n              >\n                Delete...\n              </Button>\n            )}\n            {!isMobile && props.onBulk && (\n              <Button\n                size=\"compact-md\"\n                variant={buttonVariant}\n                color={buttonColor}\n                leftSection={<IconBoxMultiple size={iconSize} />}\n                onClick={() => (props.onBulk as (ids: string[]) => any)(Object.keys(state.selected))}\n              >\n                Bulk...\n              </Button>\n            )}\n          </Group>\n          <Group gap={2}>\n            {lastResult && (\n              <Text size=\"xs\" c=\"dimmed\" data-testid=\"count-display\">\n                {getStart(memoizedSearch, lastResult).toLocaleString()}-\n                {getEnd(memoizedSearch, lastResult).toLocaleString()}\n                {lastResult.total !== undefined &&\n                  ` of ${memoizedSearch.total === 'estimate' ? '~' : ''}${lastResult.total?.toLocaleString()}`}\n              </Text>\n            )}\n            <ActionIcon variant={buttonVariant} color={buttonColor} title=\"Refresh\" onClick={refreshResults}>\n              <IconRefresh size={iconSize} />\n            </ActionIcon>\n          </Group>\n        </Group>\n      )}\n      <Table className={classes.table}>\n        <Table.Thead>\n          <Table.Tr>\n            {checkboxColumn && (\n              <Table.Th>\n                <input\n                  type=\"checkbox\"\n                  value=\"checked\"\n                  aria-label=\"all-checkbox\"\n                  data-testid=\"all-checkbox\"\n                  checked={isAllSelected()}\n                  onChange={(e) => handleAllCheckboxClick(e)}\n                />\n              </Table.Th>\n            )}\n            {fields.map((field) => (\n              <Table.Th key={field.name}>\n                <Menu shadow=\"md\" width={240} position=\"bottom-end\">\n                  <Menu.Target>\n                    <UnstyledButton className={classes.control} p={2}>\n                      <Group justify=\"space-between\" wrap=\"nowrap\">\n                        <Text fw={500}>{buildFieldNameString(field.name)}</Text>\n                        <Center className={classes.icon}>\n                          <IconAdjustmentsHorizontal size={14} stroke={1.5} />\n                        </Center>\n                      </Group>\n                    </UnstyledButton>\n                  </Menu.Target>\n                  <SearchPopupMenu\n                    search={memoizedSearch}\n                    searchParams={field.searchParams}\n                    onPrompt={(searchParam, filter) => {\n                      setState({\n                        ...stateRef.current,\n                        filterDialogVisible: true,\n                        filterDialogSearchParam: searchParam,\n                        filterDialogFilter: filter,\n                      });\n                    }}\n                    onChange={(result) => {\n                      emitSearchChange(result);\n                    }}\n                  />\n                </Menu>\n              </Table.Th>\n            ))}\n          </Table.Tr>\n          {!props.hideFilters && (\n            <Table.Tr>\n              {checkboxColumn && <Table.Th />}\n              {fields.map((field) => (\n                <Table.Th key={field.name}>\n                  {field.searchParams && (\n                    <FilterDescription\n                      resourceType={resourceType}\n                      searchParams={field.searchParams}\n                      filters={memoizedSearch.filters}\n                    />\n                  )}\n                </Table.Th>\n              ))}\n            </Table.Tr>\n          )}\n        </Table.Thead>\n        <Table.Tbody>\n          {resources?.map(\n            (resource) =>\n              resource && (\n                <Table.Tr\n                  key={resource.id}\n                  className={classes.tr}\n                  data-testid=\"search-control-row\"\n                  onClick={(e) => handleRowClick(e, resource)}\n                  onAuxClick={(e) => handleRowClick(e, resource)}\n                >\n                  {checkboxColumn && (\n                    <Table.Td>\n                      <input\n                        type=\"checkbox\"\n                        value=\"checked\"\n                        data-testid=\"row-checkbox\"\n                        aria-label={`Checkbox for ${resource.id}`}\n                        checked={!!state.selected[resource.id as string]}\n                        onChange={(e) => handleSingleCheckboxClick(e, resource.id as string)}\n                      />\n                    </Table.Td>\n                  )}\n                  {fields.map((field) => (\n                    <Table.Td key={field.name}>{renderValue(resource, field)}</Table.Td>\n                  ))}\n                </Table.Tr>\n              )\n          )}\n        </Table.Tbody>\n      </Table>\n      {!resources?.length && (\n        <Container>\n          <Center style={{ height: 150 }}>\n            <Text size=\"xl\" c=\"dimmed\">\n              No results\n            </Text>\n          </Center>\n        </Container>\n      )}\n      {lastResult && (\n        <Center m=\"md\" p=\"md\">\n          <Pagination\n            value={getPage(memoizedSearch)}\n            total={getTotalPages(memoizedSearch, lastResult)}\n            onChange={(newPage) => emitSearchChange(setPage(memoizedSearch, newPage))}\n            getControlProps={(control) => {\n              switch (control) {\n                case 'previous':\n                  return { 'aria-label': 'Previous page' };\n                case 'next':\n                  return { 'aria-label': 'Next page' };\n                default:\n                  return {};\n              }\n            }}\n          />\n        </Center>\n      )}\n      <SearchFieldEditor\n        search={memoizedSearch}\n        visible={stateRef.current.fieldEditorVisible}\n        onOk={(result) => {\n          emitSearchChange(result);\n          setState({\n            ...stateRef.current,\n            fieldEditorVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            fieldEditorVisible: false,\n          });\n        }}\n      />\n      <SearchFilterEditor\n        search={memoizedSearch}\n        visible={stateRef.current.filterEditorVisible}\n        onOk={(result) => {\n          emitSearchChange(result);\n          setState({\n            ...stateRef.current,\n            filterEditorVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            filterEditorVisible: false,\n          });\n        }}\n      />\n      <SearchExportDialog\n        visible={stateRef.current.exportDialogVisible}\n        exportCsv={props.onExportCsv}\n        exportTransactionBundle={props.onExportTransactionBundle}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            exportDialogVisible: false,\n          });\n        }}\n      />\n      <SearchFilterValueDialog\n        key={state.filterDialogSearchParam?.code}\n        visible={stateRef.current.filterDialogVisible}\n        title={state.filterDialogSearchParam?.code ? buildFieldNameString(state.filterDialogSearchParam.code) : ''}\n        resourceType={resourceType}\n        searchParam={state.filterDialogSearchParam}\n        filter={state.filterDialogFilter}\n        defaultValue=\"\"\n        onOk={(filter) => {\n          emitSearchChange(addFilter(memoizedSearch, filter.code, filter.operator, filter.value));\n          setState({\n            ...stateRef.current,\n            filterDialogVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            filterDialogVisible: false,\n          });\n        }}\n      />\n    </div>\n  );\n}\n\n/**\n * @deprecated\n *\n * The memoization `MemoizedSearchControl` provides has been merged into `SearchControl`. Previously the memoization was done via HOC but\n * it was proven that this wasn't effective for a large number of use cases, especially when:\n * 1. `search` was an inline static object, which would trigger the memo to recompute on every re-render of the parent component\n * 2. Any of the callbacks, such as `onClick` were not memoized via `useCallback`, which would result in the recomputation as well\n *\n * Scenario 1 also retriggered the effect that runs `loadResults` on change of the `search`, which was less than desirable.\n *\n * The memoization is now accomplished via checking deep equality of the incoming `search` prop in the body of the component, and setting a memoized\n * state whenever the incoming and current memoized value are not deeply equal. See: https://github.com/medplum/medplum/pull/5023\n */\nexport const MemoizedSearchControl = SearchControl;\n\ninterface FilterDescriptionProps {\n  readonly resourceType: string;\n  readonly searchParams: SearchParameter[];\n  readonly filters?: Filter[];\n}\n\nfunction FilterDescription(props: FilterDescriptionProps): JSX.Element {\n  const filters = (props.filters ?? []).filter((f) => props.searchParams.find((p) => p.code === f.code));\n  if (filters.length === 0) {\n    return <span>no filters</span>;\n  }\n\n  return (\n    <>\n      {filters.map((filter: Filter) => (\n        <div key={`filter-${filter.code}-${filter.operator}-${filter.value}`}>\n          {getOpString(filter.operator)}\n          &nbsp;\n          <SearchFilterValueDisplay resourceType={props.resourceType} filter={filter} />\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction getPage(search: SearchRequest): number {\n  return Math.floor((search.offset ?? 0) / (search.count ?? DEFAULT_SEARCH_COUNT)) + 1;\n}\n\nfunction getTotalPages(search: SearchRequest, lastResult: Bundle): number {\n  const pageSize = search.count ?? DEFAULT_SEARCH_COUNT;\n  const total = getTotal(search, lastResult);\n  return Math.ceil(total / pageSize);\n}\n\nfunction getStart(search: SearchRequest, lastResult: Bundle): number {\n  return Math.min(getTotal(search, lastResult), (search.offset ?? 0) + 1);\n}\n\nfunction getEnd(search: SearchRequest, lastResult: Bundle): number {\n  return Math.max(getStart(search, lastResult) + (lastResult.entry?.length ?? 0) - 1, 0);\n}\n\nfunction getTotal(search: SearchRequest, lastResult: Bundle): number {\n  let total = lastResult.total;\n  if (total === undefined) {\n    // If the total is not specified, then we have to estimate it\n    total =\n      (search.offset ?? 0) +\n      (lastResult.entry?.length ?? 0) +\n      (lastResult.link?.some((l) => l.relation === 'next') ? 1 : 0);\n  }\n  return total;\n}\n", "import { Alert } from '@mantine/core';\nimport { operationOutcomeIssueToString } from '@medplum/core';\nimport { OperationOutcome, OperationOutcomeIssue } from '@medplum/fhirtypes';\nimport { IconAlertCircle } from '@tabler/icons-react';\n\nexport interface OperationOutcomeAlertProps {\n  readonly outcome?: OperationOutcome;\n  readonly issues?: OperationOutcomeIssue[];\n}\n\nexport function OperationOutcomeAlert(props: OperationOutcomeAlertProps): JSX.Element | null {\n  const issues = props.outcome?.issue || props.issues;\n  if (!issues || issues.length === 0) {\n    return null;\n  }\n  return (\n    <Alert icon={<IconAlertCircle size={16} />} color=\"red\">\n      {issues.map((issue) => (\n        <div data-testid=\"text-field-error\" key={issue.details?.text}>\n          {operationOutcomeIssueToString(issue)}\n        </div>\n      ))}\n    </Alert>\n  );\n}\n", "import { Box, Button, Modal, Text } from '@mantine/core';\n\ninterface SearchExportDialogProps {\n  readonly visible: boolean;\n  readonly exportCsv?: () => void;\n  readonly exportTransactionBundle?: () => void;\n  readonly onCancel: () => void;\n}\n\nexport function SearchExportDialog(props: SearchExportDialogProps): JSX.Element | null {\n  return (\n    <Modal title=\"Export\" closeButtonProps={{ 'aria-label': 'Close' }} opened={props.visible} onClose={props.onCancel}>\n      <Box display=\"flex\" style={{ justifyContent: 'space-between' }}>\n        {props.exportCsv && <ExportButton text=\"CSV\" exportLogic={props.exportCsv} onCancel={props.onCancel} />}\n        {props.exportTransactionBundle && (\n          <ExportButton\n            text=\"Transaction Bundle\"\n            exportLogic={props.exportTransactionBundle}\n            onCancel={props.onCancel}\n          />\n        )}\n      </Box>\n      <Text style={{ marginTop: '10px', marginLeft: '2px' }}>Limited to 1000 records</Text>\n    </Modal>\n  );\n}\n\ninterface ExportButtonProps {\n  readonly text: string;\n  readonly exportLogic: () => void;\n  readonly onCancel: () => void;\n}\n\nexport function ExportButton(props: ExportButtonProps): JSX.Element {\n  return (\n    <Button\n      onClick={() => {\n        props.exportLogic();\n        props.onCancel();\n      }}\n    >\n      {`Export as ${props.text}`}\n    </Button>\n  );\n}\n", "import { Button, Group, Modal, MultiSelect, Stack } from '@mantine/core';\nimport {\n  InternalTypeSchema,\n  SearchRequest,\n  getDataType,\n  getSearchParameters,\n  sortStringArray,\n  stringify,\n} from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { buildFieldNameString } from '../SearchControl/SearchUtils';\n\nexport interface SearchFieldEditorProps {\n  readonly visible: boolean;\n  readonly search: SearchRequest;\n  readonly onOk: (search: SearchRequest) => void;\n  readonly onCancel: () => void;\n}\n\nexport function SearchFieldEditor(props: SearchFieldEditorProps): JSX.Element | null {\n  const wasDropdownOpen = useRef(false);\n  const [state, setState] = useState({\n    search: JSON.parse(stringify(props.search)) as SearchRequest,\n  });\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    setState({ search: props.search });\n  }, [props.search]);\n\n  const allFields = useMemo(() => {\n    if (!props.visible) {\n      return [];\n    }\n\n    const resourceType = props.search.resourceType;\n    const typeSchema = getDataType(resourceType);\n    const searchParams = getSearchParameters(resourceType);\n    return sortStringArray(getFieldsList(typeSchema, searchParams)).map((field) => {\n      return { value: field, label: buildFieldNameString(field) };\n    });\n  }, [props.visible, props.search.resourceType]);\n\n  if (!props.visible) {\n    return null;\n  }\n\n  function handleChange(newFields: string[]): void {\n    setState({ search: { ...state.search, fields: newFields } });\n  }\n\n  return (\n    <Modal\n      title=\"Fields\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={() => {\n        props.onCancel();\n      }}\n      size=\"auto\"\n      /*\n      By default, the MultiSelect dropdown does not interact well with Modal's closeOnClickOutside:\n      When the MultiSelect's dropdown is opened and the user clicks outside of the dropdown to close it\n      (and outside the modal, i.e. clicks on the Modal's overlay), the Modal is undesirably also closed\n      from the same click.\n\n      Due to the sequencing of the events fired during a click on the overlay and when React\n      rerenders of various components occur, it is not possible to simply do something such as setting\n      closeOnClickOutside={!isDropdownOpened}:\n\n      * user begins a click on the overlay which triggers\n      * mousedown event on the overlay which triggers\n      * blur event on the MultiSelect's input element which invokes\n      * the MultiSelect.onDropdownClose callback which calls setIsDropdownOpen(false) which causes\n      * rerender of SearchFieldEditor with isDropdownOpen set to false\n      * the user ends the click which triggers\n      * click event on the Modal which activates the closeOnClickOutside logic\n      * since isDropdownOpen is false, closeOnClickOutside is true, so the Modal closes\n\n      Instead, emulate closeOnClickOutside's behavior only when the MultiSelect dropdown\n      was not open at the beginning of the click\n      */\n      withOverlay\n      closeOnClickOutside={false}\n      overlayProps={{\n        onMouseDownCapture: () => {\n          // capture whether the MultiSelect dropdown is open when a click on the overlay begins (i.e. mousedown)\n          wasDropdownOpen.current = isDropdownOpen;\n        },\n        onClick: () => {\n          if (!wasDropdownOpen.current) {\n            // invoke onCancel callback since the dropdown wasn't open at the start of the click on the overlay\n            props.onCancel();\n          }\n\n          // not strictly needed since onMouseDownCapture should always precede onClick, but reset the ref\n          wasDropdownOpen.current = false;\n        },\n        children: <div data-testid=\"overlay-child\" />, // can't specify testid on the overlay itself\n      }}\n    >\n      <Stack>\n        <MultiSelect\n          // withinPortal={true}\n          style={{ width: 550 }}\n          placeholder=\"Select fields to display\"\n          data={allFields}\n          value={state.search.fields ?? []}\n          onChange={handleChange}\n          onDropdownOpen={() => setIsDropdownOpen(true)}\n          onDropdownClose={() => setIsDropdownOpen(false)}\n          /* shows at most ~6.5 items; the extra half to provide a hint that there are more entries to scroll through */\n          maxDropdownHeight=\"250px\"\n          // dropdownPosition=\"bottom\"\n          clearButtonProps={{ 'aria-label': 'Clear selection' }}\n          clearable\n          searchable\n        />\n        <Group justify=\"flex-end\">\n          <Button onClick={() => props.onOk(state.search)}>OK</Button>\n        </Group>\n      </Stack>\n    </Modal>\n  );\n}\n\n/**\n * Returns a list of fields/columns available for a type.\n * The result is the union of properties and search parameters.\n * @param typeSchema - The type definition.\n * @param searchParams - The search parameters.\n * @returns A list of fields/columns available for a resource type.\n */\nfunction getFieldsList(\n  typeSchema: InternalTypeSchema,\n  searchParams: Record<string, SearchParameter> | undefined\n): string[] {\n  const result = [] as string[];\n  const keys = new Set<string>();\n  const names = new Set<string>();\n\n  // Add properties first\n  for (const key of Object.keys(typeSchema.elements)) {\n    result.push(key);\n    keys.add(key.toLowerCase());\n    names.add(buildFieldNameString(key));\n  }\n\n  // Add search parameters if unique\n  if (searchParams) {\n    for (const code of Object.keys(searchParams)) {\n      const name = buildFieldNameString(code);\n      if (!keys.has(code) && !names.has(name)) {\n        result.push(code);\n        keys.add(code);\n        names.add(name);\n      }\n    }\n  }\n\n  return result;\n}\n", "import {\n  capitalize,\n  DEFAULT_SEARCH_COUNT,\n  evalFhirPathTyped,\n  Filter,\n  formatDateTime,\n  InternalSchemaElement,\n  Operator,\n  SearchRequest,\n} from '@medplum/core';\nimport { Resource, SearchParameter } from '@medplum/fhirtypes';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { SearchControlField } from './SearchControlField';\n\nconst searchParamToOperators: Record<string, Operator[]> = {\n  string: [Operator.EQUALS, Operator.NOT, Operator.CONTAINS, Operator.EXACT],\n  fulltext: [Operator.EQUALS, Operator.NOT, Operator.CONTAINS, Operator.EXACT],\n  token: [Operator.EQUALS, Operator.NOT],\n  reference: [Operator.EQUALS, Operator.NOT],\n  numeric: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n  ],\n  quantity: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n  ],\n  date: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n    Operator.STARTS_AFTER,\n    Operator.ENDS_BEFORE,\n    Operator.APPROXIMATELY,\n  ],\n  datetime: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n    Operator.STARTS_AFTER,\n    Operator.ENDS_BEFORE,\n    Operator.APPROXIMATELY,\n  ],\n};\n\nconst operatorNames: Record<Operator, string> = {\n  eq: 'equals',\n  ne: 'not equals',\n  gt: 'greater than',\n  lt: 'less than',\n  ge: 'greater than or equals',\n  le: 'less than or equals',\n  sa: 'starts after',\n  eb: 'ends before',\n  ap: 'approximately',\n  sw: 'starts with',\n  contains: 'contains',\n  exact: 'exact',\n  text: 'text',\n  not: 'not',\n  above: 'above',\n  below: 'below',\n  in: 'in',\n  'not-in': 'not in',\n  'of-type': 'of type',\n  missing: 'missing',\n  present: 'present',\n  identifier: 'identifier',\n  iterate: 'iterate',\n};\n\n/**\n * Sets the array of filters.\n * @param definition - The original search request.\n * @param filters - The new filters.\n * @returns The updated search request.\n */\nexport function setFilters(definition: SearchRequest, filters: Filter[]): SearchRequest {\n  return {\n    ...definition,\n    filters: filters,\n    offset: 0,\n    name: undefined,\n  };\n}\n\n/**\n * Clears all of the filters.\n * @param definition - The original search request.\n * @returns The updated search request.\n */\nexport function clearFilters(definition: SearchRequest): SearchRequest {\n  return setFilters(definition, []);\n}\n\n/**\n * Clears all of the filters on a certain field.\n * @param definition - The original search request.\n * @param code - The field key name to clear filters.\n * @returns The updated search request.\n */\nexport function clearFiltersOnField(definition: SearchRequest, code: string): SearchRequest {\n  return setFilters(\n    definition,\n    (definition.filters ?? []).filter((f) => f.code !== code)\n  );\n}\n\n/**\n * Adds a filter.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param op - The operation key name.\n * @param value - The filter value.\n * @param opt_clear - Optional flag to clear filters on the field.\n * @returns The updated search request.\n */\nexport function addFilter(\n  definition: SearchRequest,\n  field: string,\n  op: Operator,\n  value?: string,\n  opt_clear?: boolean\n): SearchRequest {\n  if (opt_clear) {\n    definition = clearFiltersOnField(definition, field);\n  }\n\n  const nextFilters: Filter[] = [];\n  if (definition.filters) {\n    nextFilters.push(...definition.filters);\n  }\n  nextFilters.push({ code: field, operator: op, value: value ?? '' });\n\n  return setFilters(definition, nextFilters);\n}\n\n/**\n * Adds a field.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addField(definition: SearchRequest, field: string): SearchRequest {\n  if (definition.fields?.includes(field)) {\n    return definition;\n  }\n  const newFields = [];\n  if (definition.fields) {\n    newFields.push(...definition.fields);\n  }\n  newFields.push(field);\n  return {\n    ...definition,\n    fields: newFields,\n    name: undefined,\n  };\n}\n\n/**\n * Deletes a filter at the specified index.\n * @param definition - The original search request.\n * @param index - The filter index.\n * @returns The updated search request.\n */\nexport function deleteFilter(definition: SearchRequest, index: number): SearchRequest {\n  if (!definition.filters) {\n    return definition;\n  }\n  const newFilters = [...definition.filters];\n  newFilters.splice(index, 1);\n  return {\n    ...definition,\n    filters: newFilters,\n    name: undefined,\n  };\n}\n\n/**\n * Adds a filter that constrains the specified field to \"yesterday\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addYesterdayFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, -1);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"today\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addTodayFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, 0);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"tomorrow\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addTomorrowFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, 1);\n}\n\n/**\n * Adds a filter that constrains the specified field to a day.\n * The day is specified as a delta from the current day.\n * \"Today\" would be 0.\n * \"Yesterday\" would be -1.\n * \"Tomorrow\" would be 1.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param delta - The number of days from this day.\n * @returns The updated search request.\n */\nfunction addDayFilter(definition: SearchRequest, field: string, delta: number): SearchRequest {\n  const startTime = new Date();\n  startTime.setDate(startTime.getDate() + delta);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date(startTime.getTime());\n  endTime.setDate(endTime.getDate() + 1);\n  endTime.setTime(endTime.getTime() - 1);\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"last month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addLastMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, -1);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"this month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addThisMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, 0);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"next month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addNextMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, 1);\n}\n\n/**\n * Adds a filter that constrains the specified field to a month.\n * The month is specified as a delta from the current month.\n * \"This month\" would be 0.\n * \"Last month\" would be -1.\n * \"Next month\" would be 1.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param delta - The number of months from this month.\n * @returns The updated search request.\n */\nfunction addMonthFilter(definition: SearchRequest, field: string, delta: number): SearchRequest {\n  const startTime = new Date();\n  startTime.setMonth(startTime.getMonth() + delta);\n  startTime.setDate(1);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date(startTime.getTime());\n  endTime.setMonth(endTime.getMonth() + 1);\n  endTime.setDate(1);\n  endTime.setHours(0, 0, 0, 0);\n  endTime.setTime(endTime.getTime() - 1);\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter that constrains the specified field to the year to date.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addYearToDateFilter(definition: SearchRequest, field: string): SearchRequest {\n  const startTime = new Date();\n  startTime.setMonth(0);\n  startTime.setDate(1);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date();\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter for a date between two dates (inclusive of both dates).\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param d1 - The start date.\n * @param d2 - The end date.\n * @returns The updated search request.\n */\nexport function addDateFilterBetween(definition: SearchRequest, field: string, d1: Date, d2: Date): SearchRequest {\n  definition = clearFiltersOnField(definition, field);\n  definition = addDateFilterImpl(definition, field, Operator.GREATER_THAN_OR_EQUALS, d1);\n  definition = addDateFilterImpl(definition, field, Operator.LESS_THAN_OR_EQUALS, d2);\n  return definition;\n}\n\n/**\n * Adds a filter for a date before a certain date/time.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param op - The date/time operation.\n * @param value - The date.\n * @returns The updated search request.\n */\nfunction addDateFilterImpl(definition: SearchRequest, field: string, op: Operator, value: Date): SearchRequest {\n  return addFilter(definition, field, op, value.toISOString());\n}\n\n/**\n * Adds a filter that constrains the specified field to \"missing\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param value - Optional boolean value. Default is true.\n * @returns The updated search request.\n */\nexport function addMissingFilter(definition: SearchRequest, field: string, value = true): SearchRequest {\n  return addFilter(definition, field, Operator.MISSING, value.toString());\n}\n\n/**\n * Sets the offset (starting at zero).\n * @param definition - The original search request.\n * @param offset - The offset number.\n * @returns The updated search request.\n */\nexport function setOffset(definition: SearchRequest, offset: number): SearchRequest {\n  if (definition.offset === offset) {\n    return definition;\n  }\n  return {\n    ...definition,\n    offset,\n    name: undefined,\n  };\n}\n\n/**\n * Creates a new search request with the search offset at the specified page.\n * @param definition - The search definition.\n * @param page - The new page number\n * @returns The new search definition.\n */\nexport function setPage(definition: SearchRequest, page: number): SearchRequest {\n  const count = definition.count ?? DEFAULT_SEARCH_COUNT;\n  const newOffset = (page - 1) * count;\n  return setOffset(definition, newOffset);\n}\n\n/**\n * Sorts the search by the specified key, and optional direction.\n * Direction defaults to ascending ('asc') if not specified.\n * @param definition - The original search request.\n * @param sort - The sort key.\n * @param desc - Optional descending flag. Default is false.\n * @returns The updated search request.\n */\nexport function setSort(definition: SearchRequest, sort: string, desc?: boolean): SearchRequest {\n  if (sort === getSortField(definition) && desc !== undefined && desc === isSortDescending(definition)) {\n    return definition;\n  }\n  return {\n    ...definition,\n    sortRules: [\n      {\n        code: sort,\n        descending: !!desc,\n      },\n    ],\n    name: undefined,\n  };\n}\n\n/**\n * Toggles the sort of the search by key.\n * If the search is already sorted by the key, reverses the direction.\n * If the search is not sorted by the key, sort in ascending order.\n * @param definition - The original search request.\n * @param key - The field key name.\n * @returns The updated search request.\n */\nexport function toggleSort(definition: SearchRequest, key: string): SearchRequest {\n  let desc = false;\n  if (getSortField(definition) === key) {\n    desc = !isSortDescending(definition);\n  }\n  return setSort(definition, key, desc);\n}\n\nexport function getSortField(definition: SearchRequest): string | undefined {\n  const sortRules = definition.sortRules;\n  if (!sortRules || sortRules.length === 0) {\n    return undefined;\n  }\n  const field = sortRules[0].code;\n  return field.startsWith('-') ? field.substr(1) : field;\n}\n\nexport function isSortDescending(definition: SearchRequest): boolean {\n  const sortRules = definition.sortRules;\n  if (!sortRules || sortRules.length === 0) {\n    return false;\n  }\n  return !!sortRules[0].descending;\n}\n\n/**\n * Returns a list of operators for a search parameter.\n * @param searchParam - The search parameter.\n * @returns The list of operators that can be used for the search parameter.\n */\nexport function getSearchOperators(searchParam: SearchParameter): Operator[] | undefined {\n  return searchParamToOperators[searchParam.type as string];\n}\n\n/**\n * Returns a string representing the operation.\n * @param op - The operation code.\n * @returns A display string for the operation.\n */\nexport function getOpString(op: Operator): string {\n  return operatorNames[op] ?? '';\n}\n\n/**\n * Returns a field display name.\n * @param key - The field key.\n * @returns The field display name.\n */\nexport function buildFieldNameString(key: string): string {\n  let tmp = key;\n\n  // If dot separated, only the last part\n  if (tmp.includes('.')) {\n    tmp = tmp.split('.').pop() as string;\n  }\n\n  // Special case for Version ID\n  if (tmp === 'versionId') {\n    return 'Version ID';\n  }\n\n  // Remove choice of type\n  tmp = tmp.replace('[x]', '');\n\n  // Convert camel case to space separated\n  tmp = tmp.replace(/([A-Z])/g, ' $1');\n\n  // Convert dashes and underscores to spaces\n  tmp = tmp.replace(/[-_]/g, ' ');\n\n  // Normalize whitespace to single space character\n  tmp = tmp.replace(/\\s+/g, ' ');\n\n  // Trim\n  tmp = tmp.trim();\n\n  // Special case for ID\n  if (tmp.toLowerCase() === 'id') {\n    return 'ID';\n  }\n\n  // Capitalize the first letter of each word\n  return tmp.split(/\\s/).map(capitalize).join(' ');\n}\n\n/**\n * Returns a fragment to be displayed in the search table for the value.\n * @param resource - The parent resource.\n * @param field - The search code or FHIRPath expression.\n * @returns The fragment to display.\n */\nexport function renderValue(resource: Resource, field: SearchControlField): string | JSX.Element | null | undefined {\n  const key = field.name;\n  if (key === 'id') {\n    return resource.id;\n  }\n\n  if (key === 'meta.versionId') {\n    return resource.meta?.versionId;\n  }\n\n  if (key === '_lastUpdated') {\n    return formatDateTime(resource.meta?.lastUpdated);\n  }\n\n  // Priority 1: InternalSchemaElement by exact match\n  if (field.elementDefinition && `${resource.resourceType}.${field.name}` === field.elementDefinition.path) {\n    return renderPropertyValue(resource, field.elementDefinition);\n  }\n\n  // Priority 2: SearchParameter by exact match\n  if (field.searchParams && field.searchParams.length === 1 && field.name === field.searchParams[0].code) {\n    return renderSearchParameterValue(resource, field.searchParams[0]);\n  }\n\n  // We don't know how to render this field definition\n  return null;\n}\n\n/**\n * Returns a fragment to be displayed in the search table for a resource property.\n * @param resource - The parent resource.\n * @param elementDefinition - The property element definition.\n * @returns A React element or null.\n */\nfunction renderPropertyValue(resource: Resource, elementDefinition: InternalSchemaElement): JSX.Element | null {\n  const path = elementDefinition.path?.split('.')?.pop()?.replaceAll('[x]', '') ?? '';\n  const [value, propertyType] = getValueAndType({ type: resource.resourceType, value: resource }, path);\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <ResourcePropertyDisplay\n      path={elementDefinition.path}\n      property={elementDefinition}\n      propertyType={propertyType}\n      value={value}\n      maxWidth={200}\n      ignoreMissingValues={true}\n      link={false}\n    />\n  );\n}\n\n/**\n * Returns a fragment to be displayed in the search table for a search parameter.\n * @param resource - The parent resource.\n * @param searchParam - The search parameter.\n * @returns A React element or null.\n */\nfunction renderSearchParameterValue(resource: Resource, searchParam: SearchParameter): JSX.Element | null {\n  const value = evalFhirPathTyped(searchParam.expression as string, [{ type: resource.resourceType, value: resource }]);\n  if (!value || value.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      {value.map((v, index) => (\n        <ResourcePropertyDisplay\n          key={`${index}-${value.length}`}\n          propertyType={v.type}\n          value={v.value}\n          maxWidth={200}\n          ignoreMissingValues={true}\n          link={false}\n        />\n      ))}\n    </>\n  );\n}\n", "import { ActionIcon, Button, Group, Modal, NativeSelect } from '@mantine/core';\nimport { Filter, Operator, SearchRequest, deepClone, getSearchParameters } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport { IconX } from '@tabler/icons-react';\nimport { useEffect, useRef, useState } from 'react';\nimport { ArrayAddButton } from '../buttons/ArrayAddButton';\nimport { Form } from '../Form/Form';\nimport {\n  addFilter,\n  buildFieldNameString,\n  deleteFilter,\n  getOpString,\n  getSearchOperators,\n  setFilters,\n} from '../SearchControl/SearchUtils';\nimport { SearchFilterValueInput } from '../SearchFilterValueInput/SearchFilterValueInput';\n\nexport interface SearchFilterEditorProps {\n  readonly visible: boolean;\n  readonly search: SearchRequest;\n  readonly onOk: (search: SearchRequest) => void;\n  readonly onCancel: () => void;\n}\n\nexport function SearchFilterEditor(props: SearchFilterEditorProps): JSX.Element | null {\n  const [search, setSearch] = useState<SearchRequest>(deepClone(props.search) as SearchRequest);\n\n  const searchRef = useRef<SearchRequest>(search);\n  searchRef.current = search;\n\n  useEffect(() => {\n    setSearch(deepClone(props.search) as SearchRequest);\n  }, [props.search]);\n\n  function onAddFilter(filter: Filter): void {\n    setSearch(addFilter(searchRef.current, filter.code, filter.operator, filter.value));\n  }\n\n  if (!props.visible) {\n    return null;\n  }\n\n  const resourceType = props.search.resourceType;\n  const searchParams = getSearchParameters(resourceType) ?? {};\n  const filters = search.filters || [];\n\n  return (\n    <Modal\n      title=\"Filters\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      size={900}\n      opened={props.visible}\n      onClose={props.onCancel}\n    >\n      <Form onSubmit={() => props.onOk(searchRef.current)}>\n        <div>\n          <table>\n            <colgroup>\n              <col style={{ width: 200 }} />\n              <col style={{ width: 200 }} />\n              <col style={{ width: 380 }} />\n              <col style={{ width: 40 }} />\n            </colgroup>\n            <thead>\n              <tr>\n                <th>Field</th>\n                <th>Operation</th>\n                <th>Value</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {filters.map((filter: Filter, index: number) => (\n                <FilterRowInput\n                  id={`filter-${index}-row`}\n                  key={`filter-${index}-row`}\n                  resourceType={resourceType}\n                  searchParams={searchParams}\n                  value={filter}\n                  onChange={(newFilter: Filter) => {\n                    const newFilters = [...filters];\n                    newFilters[index] = newFilter;\n                    setSearch(setFilters(searchRef.current, newFilters));\n                  }}\n                  onDelete={() => setSearch(deleteFilter(searchRef.current, index))}\n                />\n              ))}\n            </tbody>\n          </table>\n          <ArrayAddButton propertyDisplayName=\"Filter\" onClick={() => onAddFilter({} as Filter)} />\n        </div>\n        <Group justify=\"flex-end\" mt=\"xl\">\n          <Button type=\"submit\">OK</Button>\n        </Group>\n      </Form>\n    </Modal>\n  );\n}\n\ninterface FilterRowInputProps {\n  readonly id: string;\n  readonly resourceType: string;\n  readonly searchParams: Record<string, SearchParameter>;\n  readonly value: Filter;\n  readonly onChange: (value: Filter) => void;\n  readonly onDelete?: () => void;\n}\n\nfunction FilterRowInput(props: FilterRowInputProps): JSX.Element {\n  const value: Filter = props.value;\n  const valueRef = useRef<Filter>(value);\n  valueRef.current = value;\n\n  function setFilterCode(newCode: string): void {\n    valueRef.current.code = newCode;\n    valueRef.current.operator = Operator.EQUALS;\n    valueRef.current.value = '';\n    props.onChange(valueRef.current);\n  }\n\n  function setFilterOperator(newOperator: Operator): void {\n    valueRef.current.operator = newOperator;\n    valueRef.current.value = '';\n    props.onChange(valueRef.current);\n  }\n\n  function setFilterValue(newFilterValue: string): void {\n    valueRef.current.value = newFilterValue;\n    props.onChange(valueRef.current);\n  }\n\n  const searchParam = props.searchParams[value.code];\n  const operators = searchParam && getSearchOperators(searchParam);\n\n  return (\n    <tr>\n      <td>\n        <NativeSelect\n          data-testid={`${props.id}-filter-field`}\n          defaultValue={props.value.code}\n          onChange={(e) => setFilterCode(e.currentTarget.value)}\n          data={[\n            '',\n            ...Object.keys(props.searchParams).map((param) => ({ value: param, label: buildFieldNameString(param) })),\n          ]}\n        />\n      </td>\n      <td>\n        {operators && (\n          <NativeSelect\n            data-testid={`${props.id}-filter-operation`}\n            defaultValue={value.operator}\n            onChange={(e) => setFilterOperator(e.currentTarget.value as Operator)}\n            data={['', ...operators.map((op) => ({ value: op, label: getOpString(op) }))]}\n          />\n        )}\n      </td>\n      <td>\n        {searchParam && value.operator && (\n          <SearchFilterValueInput\n            name={`${props.id}-filter-value`}\n            resourceType={props.resourceType}\n            searchParam={searchParam}\n            defaultValue={value.value}\n            onChange={setFilterValue}\n          />\n        )}\n      </td>\n      <td>\n        {props.onDelete && (\n          <ActionIcon variant=\"outline\" color=\"red\" radius=\"xl\" aria-label=\"Delete filter\" onClick={props.onDelete}>\n            <IconX style={{ width: '70%', height: '70%' }} stroke={1.5} />\n          </ActionIcon>\n        )}\n      </td>\n    </tr>\n  );\n}\n", "import { Checkbox, TextInput } from '@mantine/core';\nimport { getSearchParameterDetails, SearchParameterType } from '@medplum/core';\nimport { Quantity, Reference, SearchParameter } from '@medplum/fhirtypes';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { ReferenceInput } from '../ReferenceInput/ReferenceInput';\n\nexport interface SearchFilterValueInputProps {\n  readonly resourceType: string;\n  readonly searchParam: SearchParameter;\n  readonly name?: string;\n  readonly defaultValue?: string;\n  readonly autoFocus?: boolean;\n  readonly onChange: (value: string) => void;\n}\n\nexport function SearchFilterValueInput(props: SearchFilterValueInputProps): JSX.Element | null {\n  const details = getSearchParameterDetails(props.resourceType, props.searchParam);\n  const name = props.name ?? 'filter-value';\n\n  switch (details.type) {\n    case SearchParameterType.REFERENCE:\n      return (\n        <ReferenceInput\n          name={name}\n          defaultValue={props.defaultValue ? { reference: props.defaultValue } : undefined}\n          targetTypes={props.searchParam.target}\n          autoFocus={props.autoFocus}\n          onChange={(newReference: Reference | undefined) => {\n            if (newReference) {\n              props.onChange(newReference.reference as string);\n            } else {\n              props.onChange('');\n            }\n          }}\n        />\n      );\n\n    case SearchParameterType.BOOLEAN:\n      return (\n        <Checkbox\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultChecked={props.defaultValue === 'true'}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.checked.toString())}\n        />\n      );\n\n    case SearchParameterType.DATE:\n      return (\n        <TextInput\n          type=\"date\"\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n        />\n      );\n\n    case SearchParameterType.DATETIME:\n      return (\n        <DateTimeInput\n          name={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={props.onChange}\n        />\n      );\n\n    case SearchParameterType.NUMBER:\n      return (\n        <TextInput\n          type=\"number\"\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n        />\n      );\n\n    case SearchParameterType.QUANTITY:\n      return (\n        <QuantityInput\n          name={name}\n          path=\"\"\n          defaultValue={tryParseQuantity(props.defaultValue)}\n          autoFocus={props.autoFocus}\n          onChange={(newQuantity: Quantity | undefined) => {\n            if (newQuantity) {\n              props.onChange(`${newQuantity.value}`);\n            } else {\n              props.onChange('');\n            }\n          }}\n        />\n      );\n\n    default:\n      return (\n        <TextInput\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n          placeholder=\"Search value\"\n        />\n      );\n  }\n}\n\nfunction tryParseQuantity(value: string | undefined): Quantity | undefined {\n  if (value) {\n    const [valueString, systemString, unitString] = value.split('|');\n    if (valueString) {\n      return {\n        value: parseFloat(valueString),\n        system: systemString,\n        unit: unitString,\n      };\n    }\n  }\n  return undefined;\n}\n", "import { Button, Grid, Modal } from '@mantine/core';\nimport { Filter } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { SearchFilterValueInput } from '../SearchFilterValueInput/SearchFilterValueInput';\n\nexport interface SearchFilterValueDialogProps {\n  readonly title: string;\n  readonly visible: boolean;\n  readonly resourceType: string;\n  readonly searchParam?: SearchParameter;\n  readonly filter?: Filter;\n  readonly defaultValue?: string;\n  readonly onOk: (filter: Filter) => void;\n  readonly onCancel: () => void;\n}\n\nexport function SearchFilterValueDialog(props: SearchFilterValueDialogProps): JSX.Element | null {\n  const [value, setValue] = useState<string>(props.defaultValue ?? '');\n\n  if (!props.visible || !props.searchParam || !props.filter) {\n    return null;\n  }\n\n  function onOk(): void {\n    props.onOk({ ...(props.filter as Filter), value });\n  }\n\n  return (\n    <Modal title={props.title} size=\"xl\" opened={props.visible} onClose={props.onCancel}>\n      <Form onSubmit={onOk}>\n        <Grid>\n          <Grid.Col span={10}>\n            <SearchFilterValueInput\n              resourceType={props.resourceType}\n              searchParam={props.searchParam}\n              defaultValue={value}\n              autoFocus={true}\n              onChange={setValue}\n            />\n          </Grid.Col>\n          <Grid.Col span={2}>\n            <Button onClick={onOk} fullWidth>\n              OK\n            </Button>\n          </Grid.Col>\n        </Grid>\n      </Form>\n    </Modal>\n  );\n}\n", "import {\n  Filter,\n  formatDateTime,\n  getSearchParameterDetails,\n  globalSchema,\n  Operator,\n  SearchParameterType,\n} from '@medplum/core';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nexport interface SearchFilterValueDisplayProps {\n  readonly resourceType: string;\n  readonly filter: Filter;\n}\n\nexport function SearchFilterValueDisplay(props: SearchFilterValueDisplayProps): JSX.Element {\n  const { resourceType, filter } = props;\n\n  const searchParam = globalSchema.types[resourceType].searchParams?.[filter.code];\n  if (searchParam) {\n    if (\n      searchParam.type === 'reference' &&\n      (filter.operator === Operator.EQUALS || filter.operator === Operator.NOT_EQUALS)\n    ) {\n      return <ResourceName value={{ reference: filter.value }} />;\n    }\n\n    const searchParamDetails = getSearchParameterDetails(resourceType, searchParam);\n    if (filter.code === '_lastUpdated' || searchParamDetails.type === SearchParameterType.DATETIME) {\n      return <>{formatDateTime(filter.value)}</>;\n    }\n  }\n\n  return <>{filter.value}</>;\n}\n", "import { Menu } from '@mantine/core';\nimport { Filter, Operator, SearchRequest } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport {\n  IconBleach,\n  IconBleachOff,\n  IconBracketsContain,\n  IconBucket,\n  IconBucketOff,\n  IconCalendar,\n  IconEqual,\n  IconEqualNot,\n  IconMathGreater,\n  IconMathLower,\n  IconSettings,\n  IconSortAscending,\n  IconSortDescending,\n  IconX,\n} from '@tabler/icons-react';\nimport {\n  addLastMonthFilter,\n  addMissingFilter,\n  addNextMonthFilter,\n  addThisMonthFilter,\n  addTodayFilter,\n  addTomorrowFilter,\n  addYearToDateFilter,\n  addYesterdayFilter,\n  buildFieldNameString,\n  clearFiltersOnField,\n  setSort,\n} from '../SearchControl/SearchUtils';\n\nexport interface SearchPopupMenuProps {\n  readonly search: SearchRequest;\n  readonly searchParams?: SearchParameter[];\n  readonly onPrompt: (searchParam: SearchParameter, filter: Filter) => void;\n  readonly onChange: (definition: SearchRequest) => void;\n}\n\nexport function SearchPopupMenu(props: SearchPopupMenuProps): JSX.Element | null {\n  if (!props.searchParams) {\n    return null;\n  }\n\n  function onSort(searchParam: SearchParameter, desc: boolean): void {\n    onChange(setSort(props.search, searchParam.code as string, desc));\n  }\n\n  function onClear(searchParam: SearchParameter): void {\n    onChange(clearFiltersOnField(props.search, searchParam.code as string));\n  }\n\n  function onPrompt(searchParam: SearchParameter, operator: Operator): void {\n    props.onPrompt(searchParam, { code: searchParam.code as string, operator, value: '' });\n  }\n\n  function onChange(definition: SearchRequest): void {\n    props.onChange(definition);\n  }\n\n  // If there is only one search parameter, then show it directly\n  if (props.searchParams.length === 1) {\n    return (\n      <SearchParameterSubMenu\n        search={props.search}\n        searchParam={props.searchParams[0]}\n        onSort={onSort}\n        onPrompt={onPrompt}\n        onChange={onChange}\n        onClear={onClear}\n      />\n    );\n  }\n\n  // Otherwise, show a menu, with each search parameter as a sub menu\n  return (\n    <Menu.Dropdown>\n      {props.searchParams.map((searchParam) => (\n        <Menu.Item key={searchParam.code}>{buildFieldNameString(searchParam.code as string)}</Menu.Item>\n      ))}\n    </Menu.Dropdown>\n  );\n}\n\ninterface SearchPopupSubMenuProps {\n  readonly search: SearchRequest;\n  readonly searchParam: SearchParameter;\n  readonly onSort: (searchParam: SearchParameter, descending: boolean) => void;\n  readonly onPrompt: (searchParam: SearchParameter, operator: Operator) => void;\n  readonly onChange: (search: SearchRequest) => void;\n  readonly onClear: (searchParam: SearchParameter) => void;\n}\n\nfunction SearchParameterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  switch (props.searchParam.type) {\n    case 'date':\n      return <DateFilterSubMenu {...props} />;\n    case 'number':\n    case 'quantity':\n      return <NumericFilterSubMenu {...props} />;\n    case 'reference':\n      return <ReferenceFilterSubMenu {...props} />;\n    case 'string':\n      return <TextFilterSubMenu {...props} />;\n    case 'token':\n    case 'uri':\n      return <TokenFilterSubMenu {...props} />;\n    default:\n      return <>Unknown search param type: {props.searchParam.type}</>;\n  }\n}\n\nfunction DateFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  const code = searchParam.code as string;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item leftSection={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort Oldest to Newest\n      </Menu.Item>\n      <Menu.Item leftSection={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Newest to Oldest\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconEqualNot size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.NOT_EQUALS)}\n      >\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconMathLower size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.ENDS_BEFORE)}\n      >\n        Before...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconMathGreater size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.STARTS_AFTER)}\n      >\n        After...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconBracketsContain size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}\n      >\n        Between...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addTomorrowFilter(props.search, code))}\n      >\n        Tomorrow\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addTodayFilter(props.search, code))}\n      >\n        Today\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addYesterdayFilter(props.search, code))}\n      >\n        Yesterday\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addNextMonthFilter(props.search, code))}\n      >\n        Next Month\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addThisMonthFilter(props.search, code))}\n      >\n        This Month\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addLastMonthFilter(props.search, code))}\n      >\n        Last Month\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addYearToDateFilter(props.search, code))}\n      >\n        Year to date\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction NumericFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item leftSection={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort Smallest to Largest\n      </Menu.Item>\n      <Menu.Item leftSection={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Largest to Smallest\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconEqualNot size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.NOT_EQUALS)}\n      >\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconMathGreater size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.GREATER_THAN)}\n      >\n        Greater than...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconSettings size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.GREATER_THAN_OR_EQUALS)}\n      >\n        Greater than or equal to...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconMathLower size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.LESS_THAN)}\n      >\n        Less than...\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconSettings size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.LESS_THAN_OR_EQUALS)}\n      >\n        Less than or equal to...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction ReferenceFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item leftSection={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item leftSection={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT)}>\n        Does not equal...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction TextFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item leftSection={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort A to Z\n      </Menu.Item>\n      <Menu.Item leftSection={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Z to A\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item leftSection={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT)}>\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconBucket size={14} />} onClick={() => props.onPrompt(searchParam, Operator.CONTAINS)}>\n        Contains...\n      </Menu.Item>\n      <Menu.Item leftSection={<IconBucketOff size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Does not contain...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction TokenFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item leftSection={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item leftSection={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT)}>\n        Does not equal...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction CommonMenuItems(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  const code = searchParam.code as string;\n  return (\n    <>\n      <Menu.Divider />\n      <Menu.Item\n        leftSection={<IconBleach size={14} />}\n        onClick={() => props.onChange(addMissingFilter(props.search, code))}\n      >\n        Missing\n      </Menu.Item>\n      <Menu.Item\n        leftSection={<IconBleachOff size={14} />}\n        onClick={() => props.onChange(addMissingFilter(props.search, code, false))}\n      >\n        Not missing\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item leftSection={<IconX size={14} />} onClick={() => props.onClear(searchParam)}>\n        Clear filters\n      </Menu.Item>\n    </>\n  );\n}\n", ".root {\n  max-width: 100%;\n  overflow: auto;\n  text-align: left;\n  margin-bottom: 20px;\n}\n\n.table {\n  cursor: pointer;\n}\n\n.tr {\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.th {\n  padding: 0 !important;\n}\n\n.control {\n  width: 100%;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.icon {\n  width: 21px;\n  height: 21px;\n  border-radius: 21px;\n}\n", "import {\n  getElementDefinition,\n  getSearchParameter,\n  getSearchParameterDetails,\n  getSearchParameters,\n  InternalSchemaElement,\n  SearchRequest,\n} from '@medplum/core';\nimport { ResourceType, SearchParameter } from '@medplum/fhirtypes';\n\n/**\n * The SearchControlField type describes a field in the search control.\n *\n * In a SearchRequest, a field is a simple string. Strings can be one of the following:\n * 1) Simple property names, which refer to InternalSchemaElement objects\n * 2) Search parameter names, which refer to SearchParameter resources\n *\n * Consider a few examples of how this becomes complicated.\n *\n * \"name\" (easy)\n *  - element definition path=\"Patient.name\"\n *  - search parameter code=\"name\"\n *\n * \"birthDate\" (medium)\n *  - refers to the element definition path=\"Patient.birthDate\"\n *  - refers to the search parameter code=\"birthdate\" (note the capitalization)\n *\n * \"email\" (hard)\n *  - refers to the search parameter code=\"email\"\n *  - refers to the element definition path=\"Patient.telecom\"\n *\n * In the last case, we start with the search parameter, and walk backwards to the\n * element definition in order to get type details for rendering.\n *\n * Overall, we want columns, fields, properties, and search parameters to feel seamless,\n * so we try our darndest to make this work.\n */\nexport interface SearchControlField {\n  readonly name: string;\n  readonly elementDefinition?: InternalSchemaElement;\n  readonly searchParams?: SearchParameter[];\n}\n\n/**\n * Returns the collection of field definitions for the search request.\n * @param search - The search request definition.\n * @returns An array of field definitions.\n */\nexport function getFieldDefinitions(search: SearchRequest): SearchControlField[] {\n  const resourceType = search.resourceType;\n  const fields = [] as SearchControlField[];\n\n  for (const name of search.fields || ['id', '_lastUpdated']) {\n    fields.push(getFieldDefinition(resourceType, name));\n  }\n  return fields;\n}\n\n/**\n * Return the field definition for a given field name.\n * Field names can be either property names or search parameter codes.\n * @param resourceType - The resource type.\n * @param name - The search field name (either property name or search parameter code).\n * @returns The field definition.\n */\nfunction getFieldDefinition(resourceType: string, name: string): SearchControlField {\n  if (name === '_lastUpdated') {\n    return {\n      name: '_lastUpdated',\n      searchParams: [\n        {\n          resourceType: 'SearchParameter',\n          base: ['Resource' as ResourceType],\n          code: '_lastUpdated',\n          name: '_lastUpdated',\n          type: 'date',\n          expression: 'Resource.meta.lastUpdated',\n        } as SearchParameter,\n      ],\n    };\n  }\n\n  if (name === 'meta.versionId') {\n    return {\n      name: 'meta.versionId',\n      searchParams: [\n        {\n          resourceType: 'SearchParameter',\n          base: ['Resource' as ResourceType],\n          code: '_versionId',\n          name: '_versionId',\n          type: 'token',\n          expression: 'Resource.meta.versionId',\n        } as SearchParameter,\n      ],\n    };\n  }\n\n  const exactElementDefinition = getElementDefinition(resourceType, name);\n  const exactSearchParam = getSearchParameter(resourceType, name.toLowerCase());\n\n  // Best case: Exact match of element definition or search parameter.\n  // Examples: ServiceRequest.subject, Patient.name, Patient.birthDate\n  // In this case, we only show the one search parameter.\n  if (exactElementDefinition && exactSearchParam) {\n    return { name, elementDefinition: exactElementDefinition, searchParams: [exactSearchParam] };\n  }\n\n  // Next best case: Exact match of element definition\n  // Examples: Observation.value\n  // In this case, there could be zero or more search parameters that are a function of the element definition.\n  // So search for those search parameters.\n  if (exactElementDefinition) {\n    const allSearchParams = getSearchParameters(resourceType);\n    let searchParams: SearchParameter[] | undefined = undefined;\n    if (allSearchParams) {\n      // To avoid matching names that happen to be prefixes of other names, e.g. id and identifier,\n      // match ${resourceType}.${name} followed by a non-name character OR the end of the string\n      // Name characters include letters, numbers, underscores, and hyphens\n      const pathRegex = new RegExp(`${resourceType}\\\\.${name.replaceAll('[x]', '')}([^\\\\w-]|$)`);\n\n      searchParams = Object.values(allSearchParams).filter((p) => !!p.expression && pathRegex.test(p?.expression));\n      if (searchParams.length === 0) {\n        searchParams = undefined;\n      }\n    }\n    return { name, elementDefinition: exactElementDefinition, searchParams };\n  }\n\n  // Search parameter case: Exact match of search parameter\n  // Examples: Observation.value-quantity, Patient.email\n  // Here we have a search parameter, but no element definition.\n  // Observation.value-quantity is a search parameter for the Observation.value element.\n  // Patient.email is a search parameter for the Patient.telecom element.\n  // So we need to walk backwards to find the element definition.\n  if (exactSearchParam) {\n    const details = getSearchParameterDetails(resourceType, exactSearchParam);\n    return { name, elementDefinition: details.elementDefinitions?.[0], searchParams: [exactSearchParam] };\n  }\n\n  // Worst case: no element definition and no search parameter.\n  // This is probably a malformed URL that includes an unknown field.\n  // We will render the column header, but all cells will be empty.\n  return { name };\n}\n", "export interface LogoProps {\n  readonly size: number;\n  readonly fill?: string;\n}\n\nexport function Logo(props: LogoProps): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 491 491\" style={{ width: props.size, height: props.size }}>\n      <title>Medplum Logo</title>\n      <path fill={props.fill ?? '#ad7136'} d=\"M282 67c6-16 16-29 29-40L289 0c-22 17-37 41-43 68l17 23 19-24z\" />\n      <path\n        fill={props.fill ?? '#946af9'}\n        d=\"M311 63c-17 0-33 4-48 11-16-7-32-11-49-11-87 0-158 96-158 214s71 214 158 214c17 0 33-4 49-11 15 7 31 11 48 11 87 0 158-96 158-214S398 63 311 63z\"\n      />\n      <path\n        fill={props.fill ?? '#7857c5'}\n        d=\"M231 489l-17 2c-87 0-158-96-158-214S127 63 214 63l17 1c-39 12-70 102-70 213s31 201 70 212z\"\n      />\n      <path\n        fill={props.fill ?? '#40bc26'}\n        d=\"M207 220a176 176 0 01-177 43A176 176 0 01251 43l1 5c17 59 2 125-45 172z\"\n      />\n      <path fill={props.fill ?? '#33961e'} d=\"M252 48A421 421 0 0057 270l-27-7A176 176 0 01251 43l1 5z\" />\n    </svg>\n  );\n}\n", "import { Box, SimpleGrid } from '@mantine/core';\nimport { MeasureReport, MeasureReportGroup, Reference } from '@medplum/fhirtypes';\nimport { useResource, useSearchOne } from '@medplum/react-hooks';\nimport { MeasureReportGroupDisplay, MeasureTitle } from './MeasureReportGroupDisplay/MeasureReportGroupDisplay';\n\nexport interface MeasureReportDisplayProps {\n  readonly measureReport: MeasureReport | Reference<MeasureReport>;\n}\n\nexport function MeasureReportDisplay(props: MeasureReportDisplayProps): JSX.Element | null {\n  const report = useResource(props.measureReport);\n  const [measure] = useSearchOne('Measure', { url: report?.measure });\n\n  if (!report) {\n    return null;\n  }\n\n  return (\n    <Box>\n      {measure && <MeasureTitle measure={measure} />}\n      <SimpleGrid cols={{ base: 3, sm: 1 }} spacing={{ base: 'md', sm: 'sm' }}>\n        {report.group?.map((group: MeasureReportGroup, idx: number) => (\n          <MeasureReportGroupDisplay key={group.id ?? idx} group={group} />\n        ))}\n      </SimpleGrid>\n    </Box>\n  );\n}\n", "import { Box, Flex, Group, Paper, RingProgress, Text, Title } from '@mantine/core';\nimport { formatCodeableConcept } from '@medplum/core';\nimport { Measure, MeasureReportGroup } from '@medplum/fhirtypes';\nimport { QuantityDisplay } from '../../QuantityDisplay/QuantityDisplay';\n\ninterface MeasureReportGroupDisplayProps {\n  readonly group: MeasureReportGroup;\n}\n\ninterface MeasureProps {\n  readonly measure: Measure;\n}\n\nexport function MeasureReportGroupDisplay(props: MeasureReportGroupDisplayProps): JSX.Element | null {\n  const { group } = props;\n  return (\n    <Paper withBorder radius=\"md\" p=\"xs\" display=\"flex\" style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <Group>\n        {group.measureScore && <MeasureScore group={group} />}\n        {!group.measureScore && <MeasureReportPopulation group={group} />}\n      </Group>\n    </Paper>\n  );\n}\n\nexport function MeasureTitle(props: MeasureProps): JSX.Element {\n  const { measure } = props;\n  return (\n    <>\n      <Text fz=\"md\" fw={500} mb={8}>\n        {measure.title}\n      </Text>\n      <Text fz=\"xs\" c=\"dimmed\" mb={8}>\n        {measure.subtitle}\n      </Text>\n    </>\n  );\n}\n\nfunction MeasureReportPopulation(props: MeasureReportGroupDisplayProps): JSX.Element {\n  const { group } = props;\n  const populations = group.population;\n  const numerator = populations?.find((p: any) => formatCodeableConcept(p.code) === 'numerator');\n  const denominator = populations?.find((p: any) => formatCodeableConcept(p.code) === 'denominator');\n\n  const numeratorCount = numerator?.count;\n  const denominatorCount = denominator?.count;\n\n  if (denominatorCount === 0) {\n    return (\n      <Box>\n        <Title order={3}>Not Applicable</Title>\n        <Text>{`Denominator: ${denominatorCount}`}</Text>\n      </Box>\n    );\n  }\n\n  if (numeratorCount === undefined || denominatorCount === undefined) {\n    return (\n      <Box>\n        <Title order={3}>Insufficient Data</Title>\n        <Text>{`Numerator: ${numeratorCount}`}</Text>\n        <Text>{`Denominator: ${denominatorCount}`}</Text>\n      </Box>\n    );\n  }\n\n  const value = (numeratorCount / denominatorCount) * 100;\n  return (\n    <RingProgress\n      size={120}\n      thickness={12}\n      roundCaps\n      sections={[{ value: value, color: groupColor(value) }]}\n      label={\n        <Flex justify=\"center\">\n          <Text fw={700} fz={18}>\n            {numeratorCount} / {denominatorCount}\n          </Text>\n        </Flex>\n      }\n    />\n  );\n}\n\nfunction MeasureScore(props: MeasureReportGroupDisplayProps): JSX.Element {\n  const { group } = props;\n  const unit = group.measureScore?.unit ?? group.measureScore?.code;\n\n  return (\n    <>\n      {unit === '%' ? (\n        <RingProgress\n          size={120}\n          thickness={12}\n          roundCaps\n          sections={[{ value: groupValue(group), color: groupColor(group?.measureScore?.value ?? 0) }]}\n          label={\n            <Flex justify=\"center\">\n              <Text fw={700} fz={18}>\n                <QuantityDisplay value={group.measureScore} />\n              </Text>\n            </Flex>\n          }\n        />\n      ) : (\n        <Flex h={120} align=\"center\">\n          <Title order={3}>\n            <QuantityDisplay value={group.measureScore} />\n          </Title>\n        </Flex>\n      )}\n    </>\n  );\n}\n\nfunction groupValue(group: MeasureReportGroup): number {\n  const score = group.measureScore?.value;\n  const unit = group.measureScore?.unit;\n  if (!score) {\n    return 0;\n  }\n  if (score <= 1 && unit === '%') {\n    return score * 100;\n  }\n  return score;\n}\n\nfunction groupColor(score: number): string {\n  if (score <= 33) {\n    return 'red';\n  }\n  if (score <= 67) {\n    return 'yellow';\n  }\n  return 'green';\n}\n", "import { ActionIcon, Indicator, Tooltip } from '@mantine/core';\nimport { ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum, useSubscription } from '@medplum/react-hooks';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport interface NotificationIconProps {\n  readonly iconComponent: JSX.Element;\n  readonly label: string;\n  readonly resourceType: ResourceType;\n  readonly countCriteria: string;\n  readonly subscriptionCriteria: string;\n  readonly onClick: () => void;\n}\n\nexport function NotificationIcon(props: NotificationIconProps): JSX.Element {\n  const medplum = useMedplum();\n  const { label, resourceType, countCriteria, subscriptionCriteria, onClick } = props;\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  const updateCount = useCallback(\n    (cache: 'default' | 'reload') => {\n      medplum\n        .search(resourceType, countCriteria, { cache })\n        .then((result) => setUnreadCount(result.total as number))\n        .catch(console.error);\n    },\n    [medplum, resourceType, countCriteria]\n  );\n\n  // Initial count\n  useEffect(() => {\n    // Cache=default to use the default cache policy, and accept most recent data\n    updateCount('default');\n  }, [updateCount]);\n\n  // Subscribe to the criteria\n  useSubscription(subscriptionCriteria, () => {\n    // Cache=reload to force a reload\n    updateCount('reload');\n  });\n\n  const icon = (\n    <Tooltip label={label}>\n      <ActionIcon variant=\"subtle\" color=\"gray\" size=\"lg\" aria-label={label} onClick={onClick}>\n        {props.iconComponent}\n      </ActionIcon>\n    </Tooltip>\n  );\n\n  return unreadCount > 0 ? (\n    <Indicator inline label={unreadCount.toLocaleString()} size={16} offset={2} position=\"bottom-end\" color=\"red\">\n      {icon}\n    </Indicator>\n  ) : (\n    icon\n  );\n}\n", "import { Card, CardProps, Divider, Flex, Group, Paper, Stack, Text } from '@mantine/core';\nimport { calculateAgeString, formatHumanName, resolveId } from '@medplum/core';\nimport {\n  AllergyIntolerance,\n  Appointment,\n  Condition,\n  Encounter,\n  HumanName,\n  MedicationRequest,\n  Observation,\n  Patient,\n  Reference,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconGenderFemale, IconGenderMale, IconStethoscope, IconUserSquare } from '@tabler/icons-react';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { Allergies } from './Allergies';\nimport { Medications } from './Medications';\nimport { ProblemList } from './ProblemList';\nimport { SexualOrientation } from './SexualOrientation';\nimport { SmokingStatus } from './SmokingStatus';\nimport { Vitals } from './Vitals';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface PatientSummaryProps extends Omit<CardProps, 'children'> {\n  readonly patient: Patient | Reference<Patient>;\n  readonly background?: string;\n  /** The URL that the upcoming appointments link should navigate to or `undefined` to not show the link. */\n  readonly appointmentsUrl?: string | undefined;\n  /** The URL that the documented visits (encounters) link should navigate to or `undefined` to not show the link. */\n  readonly encountersUrl?: string | undefined;\n}\n\ninterface PatientMedicalData {\n  readonly allergies: AllergyIntolerance[];\n  readonly problems: Condition[];\n  readonly sexualOrientation?: Observation;\n  readonly smokingStatus?: Observation;\n  readonly vitals: Observation[];\n  readonly medicationRequests: MedicationRequest[];\n  readonly encounters?: Encounter[];\n  readonly appointments?: Appointment[];\n}\n\ntype IconType = typeof IconGenderFemale;\n\nfunction getGenderIcon(patient?: Patient): IconType | undefined {\n  switch (patient?.gender) {\n    case 'female':\n      return IconGenderFemale;\n    case 'male':\n      return IconGenderMale;\n    default:\n      return undefined;\n  }\n}\n\nfunction pluralize(count: number | undefined, singular: string, plural: string): string {\n  if (count === 0) {\n    return `No ${plural}`;\n  } else if (count === 1) {\n    return `1 ${singular}`;\n  } else {\n    return `${count} ${plural}`;\n  }\n}\n\nexport function PatientSummary(props: PatientSummaryProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const {\n    patient: propsPatient,\n    background,\n    appointmentsUrl: propsAppointmentsUrl,\n    encountersUrl: propsEncountersUrl,\n    ...cardProps\n  } = props;\n  const patient = useResource(propsPatient);\n  const [medicalData, setMedicalData] = useState<PatientMedicalData>();\n\n  // If a URL is explicitly specified in `props`, use it even if `undefined`.\n  // If not included in `props`, use '#' as a demonstration value.\n  const appointmentsUrl = 'appointmentsUrl' in props ? propsAppointmentsUrl : '#';\n  const encountersUrl = 'encountersUrl' in props ? propsEncountersUrl : '#';\n\n  useEffect(() => {\n    const id = resolveId(propsPatient) as string;\n    const ref = `Patient/${id}`;\n    const searchMeta = { _count: 100, _sort: '-_lastUpdated' };\n    const today = new Date().toISOString().substring(0, 10);\n\n    Promise.all([\n      medplum.searchResources('AllergyIntolerance', { patient: ref, ...searchMeta }),\n      medplum.searchResources('Condition', { patient: ref, ...searchMeta }),\n      medplum.searchResources('MedicationRequest', { subject: ref, ...searchMeta }),\n      medplum.searchResources('Observation', { subject: ref, ...searchMeta }),\n      medplum.searchResources('Appointment', {\n        patient: ref,\n        date: `ge${today}`,\n        status: 'proposed,pending,booked',\n        ...searchMeta,\n      }),\n      medplum.searchResources('Encounter', { subject: ref, date: `le${today}`, status: 'finished', ...searchMeta }),\n    ])\n      .then((results) => {\n        const observations = results[3];\n        setMedicalData({\n          allergies: results[0],\n          problems: results[1],\n          medicationRequests: results[2],\n          sexualOrientation: observations.find((obs) => obs.code?.coding?.[0].code === '76690-7'),\n          smokingStatus: observations.find((obs) => obs.code?.coding?.[0].code === '72166-2'),\n          vitals: observations.filter((obs) => obs.category?.[0]?.coding?.[0].code === 'vital-signs'),\n          appointments: results[4],\n          encounters: results[5],\n        });\n      })\n      .catch(console.error);\n  }, [medplum, propsPatient]);\n\n  const links: ReactNode[] = useMemo(() => {\n    const appointmentsLink =\n      appointmentsUrl === undefined ? undefined : (\n        <MedplumLink key=\"appt\" to={appointmentsUrl}>\n          {pluralize(medicalData?.appointments?.length, 'upcoming appointment', 'upcoming appointments')}\n        </MedplumLink>\n      );\n    const encountersLink =\n      encountersUrl === undefined ? undefined : (\n        <MedplumLink key=\"enc\" to={encountersUrl}>\n          {pluralize(medicalData?.encounters?.length, 'documented visit', 'documented visits')}\n        </MedplumLink>\n      );\n\n    return [appointmentsLink, encountersLink].filter(Boolean);\n  }, [appointmentsUrl, medicalData?.appointments?.length, medicalData?.encounters?.length, encountersUrl]);\n\n  if (!patient) {\n    return null;\n  }\n\n  const GenderIconComponent = getGenderIcon(patient);\n\n  return (\n    <Card {...cardProps}>\n      <Card.Section h={100} style={{ background }} />\n      <ResourceAvatar value={patient} size={80} radius={80} mx=\"auto\" mt={-50} style={{ border: '2px solid white' }} />\n      <Text ta=\"center\" fz=\"lg\" fw={500}>\n        {formatHumanName(patient.name?.[0] as HumanName)}\n      </Text>\n      {patient.birthDate && (\n        <Text ta=\"center\" fz=\"xs\" c=\"dimmed\">\n          {patient.birthDate} ({calculateAgeString(patient.birthDate)})\n        </Text>\n      )}\n      <Paper withBorder p=\"md\" my=\"md\">\n        <Group wrap=\"nowrap\" justify=\"space-evenly\">\n          <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={0}>\n            <IconUserSquare size={24} color=\"gray\" />\n            <Text fz=\"xs\" ta=\"center\" style={{ whiteSpace: 'nowrap' }}>\n              Self\n            </Text>\n          </Flex>\n          <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={0}>\n            <IconStethoscope size={24} color=\"gray\" />\n            <Text fz=\"xs\" style={{ whiteSpace: 'nowrap' }}>\n              {patient?.generalPractitioner?.[0]?.display ?? 'No provider'}\n            </Text>\n          </Flex>\n          {GenderIconComponent && (\n            <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={0}>\n              <GenderIconComponent size={24} color=\"gray\" />\n              <Text fz=\"xs\" style={{ whiteSpace: 'nowrap' }}>\n                {patient.gender}\n              </Text>\n            </Flex>\n          )}\n        </Group>\n      </Paper>\n      <Stack gap=\"xs\">\n        {links.length > 0 && (\n          <>\n            {links}\n            <Divider />\n          </>\n        )}\n        {medicalData && (\n          <>\n            <Allergies patient={patient} allergies={medicalData.allergies} />\n            <Divider />\n            <ProblemList patient={patient} problems={medicalData.problems} />\n            <Divider />\n            <Medications patient={patient} medicationRequests={medicalData.medicationRequests} />\n            <Divider />\n            <SexualOrientation patient={patient} sexualOrientation={medicalData.sexualOrientation} />\n            <Divider />\n            <SmokingStatus patient={patient} smokingStatus={medicalData.smokingStatus} />\n            <Divider />\n            <Vitals patient={patient} vitals={medicalData.vitals} />\n          </>\n        )}\n      </Stack>\n    </Card>\n  );\n}\n", "import { Anchor, Box, Group, Modal, Text } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { AllergyIntolerance, Encounter, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useState } from 'react';\nimport { killEvent } from '../utils/dom';\nimport { AllergyDialog } from './AllergyDialog';\nimport { ConceptBadge } from './ConceptBadge';\n\nexport interface AllergiesProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly allergies: AllergyIntolerance[];\n}\n\nexport function Allergies(props: AllergiesProps): JSX.Element {\n  const medplum = useMedplum();\n  const { patient, encounter } = props;\n  const [allergies, setAllergies] = useState<AllergyIntolerance[]>(props.allergies);\n  const [opened, { open, close }] = useDisclosure(false);\n  const [editAllergy, setEditAllergy] = useState<AllergyIntolerance>();\n\n  const handleSubmit = useCallback(\n    async (allergy: AllergyIntolerance) => {\n      if (allergy.id) {\n        const updatedAllergy = await medplum.updateResource(allergy);\n        setAllergies(allergies.map((a) => (a.id === updatedAllergy.id ? updatedAllergy : a)));\n      } else {\n        const newAllergy = await medplum.createResource(allergy);\n        setAllergies([...allergies, newAllergy]);\n      }\n      setEditAllergy(undefined);\n      close();\n    },\n    [medplum, allergies, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Allergies\n        </Text>\n        <Anchor\n          component=\"button\"\n          onClick={(e) => {\n            killEvent(e);\n            setEditAllergy(undefined);\n            open();\n          }}\n        >\n          + Add\n        </Anchor>\n      </Group>\n      {allergies.length > 0 ? (\n        <Box>\n          {allergies.map((allergy) => (\n            <ConceptBadge\n              key={allergy.id}\n              resource={allergy}\n              onEdit={(a) => {\n                setEditAllergy(a);\n                open();\n              }}\n            />\n          ))}\n        </Box>\n      ) : (\n        <Text>(none)</Text>\n      )}\n      <Modal opened={opened} onClose={close} title={editAllergy ? 'Edit Allergy' : 'Add Allergy'}>\n        <AllergyDialog patient={patient} encounter={encounter} allergy={editAllergy} onSubmit={handleSubmit} />\n      </Modal>\n    </>\n  );\n}\n", "import { Button, Group, Stack, TextInput } from '@mantine/core';\nimport { HTTP_HL7_ORG, addProfileToResource, createReference } from '@medplum/core';\nimport { AllergyIntolerance, CodeableConcept, Encounter, Patient } from '@medplum/fhirtypes';\nimport { useCallback, useState } from 'react';\nimport { CodeableConceptInput } from '../CodeableConceptInput/CodeableConceptInput';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { Form } from '../Form/Form';\n\nexport interface AllergyDialogProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly allergy?: AllergyIntolerance;\n  readonly onSubmit: (allergy: AllergyIntolerance) => void;\n}\n\nconst HTTP = 'http://';\n\nconst PATIENT_ALLERGY_PROFILE = HTTP_HL7_ORG + '/fhir/us/core/StructureDefinition/us-core-allergyintolerance';\n\nexport function AllergyDialog(props: AllergyDialogProps): JSX.Element {\n  const { patient, encounter, allergy, onSubmit } = props;\n  const [code, setCode] = useState<CodeableConcept | undefined>(allergy?.code);\n  const [clinicalStatus, setClinicalStatus] = useState<CodeableConcept | undefined>(allergy?.clinicalStatus);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      onSubmit(\n        addProfileToResource(\n          {\n            ...allergy,\n            resourceType: 'AllergyIntolerance',\n            patient: createReference(patient),\n            encounter: encounter ? createReference(encounter) : undefined,\n            code,\n            clinicalStatus,\n            onsetDateTime: formData.onsetDateTime ? formData.onsetDateTime : undefined,\n            reaction: formData.reaction ? [{ manifestation: [{ text: formData.reaction }] }] : undefined,\n          },\n          PATIENT_ALLERGY_PROFILE\n        )\n      );\n    },\n    [patient, encounter, allergy, code, clinicalStatus, onSubmit]\n  );\n\n  return (\n    <Form key={allergy?.id} onSubmit={handleSubmit}>\n      <Stack>\n        <CodeableConceptInput\n          name=\"allergy\"\n          label=\"Code\"\n          path=\"AllergyIntolerance.code\"\n          data-autofocus={true}\n          binding={HTTP + 'cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1186.8'}\n          maxValues={1}\n          defaultValue={allergy?.code}\n          onChange={(code) => setCode(code)}\n          outcome={undefined}\n        />\n        <TextInput name=\"reaction\" label=\"Reaction\" defaultValue={allergy?.reaction?.[0]?.manifestation?.[0]?.text} />\n        <CodeableConceptInput\n          name=\"clinicalStatus\"\n          label=\"Clinical Status\"\n          path=\"AllergyIntolerance.clinicalStatus\"\n          binding={HTTP_HL7_ORG + '/fhir/ValueSet/allergyintolerance-clinical'}\n          maxValues={1}\n          defaultValue={allergy?.clinicalStatus}\n          onChange={(clinicalStatus) => setClinicalStatus(clinicalStatus)}\n          outcome={undefined}\n        />\n        <DateTimeInput name=\"onsetDateTime\" label=\"Onset\" defaultValue={allergy?.recordedDate} />\n        <Group justify=\"flex-end\" gap={4} mt=\"md\">\n          <Button type=\"submit\">Save</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import { Badge } from '@mantine/core';\nimport { getDisplayString } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport { IconEdit } from '@tabler/icons-react';\nimport { ReactNode } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { killEvent } from '../utils/dom';\n\nexport interface ConceptBadgeProps<T extends Resource> {\n  readonly resource: T;\n  readonly onEdit?: (resource: T) => void;\n}\n\nexport function ConceptBadge<T extends Resource = Resource>(props: ConceptBadgeProps<T>): JSX.Element {\n  const { resource, onEdit } = props;\n\n  let rightSection: ReactNode | undefined = undefined;\n  if (onEdit) {\n    rightSection = (\n      <IconEdit\n        aria-label={`Edit ${getDisplayString(resource)}`}\n        size={12}\n        onClick={(e) => {\n          killEvent(e);\n          onEdit(resource);\n        }}\n      />\n    );\n  }\n\n  return (\n    <MedplumLink key={resource.id} to={resource}>\n      <Badge variant=\"light\" maw=\"100%\" rightSection={rightSection}>\n        {getDisplayString(resource)}\n      </Badge>\n    </MedplumLink>\n  );\n}\n", "import { Anchor, Box, Group, Modal, Text } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { Encounter, MedicationRequest, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useState } from 'react';\nimport { killEvent } from '../utils/dom';\nimport { ConceptBadge } from './ConceptBadge';\nimport { MedicationDialog } from './MedicationDialog';\n\nexport interface MedicationsProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly medicationRequests: MedicationRequest[];\n}\n\nexport function Medications(props: MedicationsProps): JSX.Element {\n  const medplum = useMedplum();\n  const [medicationRequests, setMedicationRequests] = useState<MedicationRequest[]>(props.medicationRequests);\n  const [editMedication, setEditMedication] = useState<MedicationRequest>();\n  const [opened, { open, close }] = useDisclosure(false);\n\n  const handleSubmit = useCallback(\n    async (medication: MedicationRequest) => {\n      if (medication.id) {\n        const updatedMedication = await medplum.updateResource(medication);\n        setMedicationRequests(medicationRequests.map((m) => (m.id === updatedMedication.id ? updatedMedication : m)));\n      } else {\n        const newMedication = await medplum.createResource(medication);\n        setMedicationRequests([newMedication, ...medicationRequests]);\n      }\n\n      setEditMedication(undefined);\n      close();\n    },\n    [medplum, medicationRequests, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Medications\n        </Text>\n        <Anchor\n          component=\"button\"\n          onClick={(e) => {\n            killEvent(e);\n            setEditMedication(undefined);\n            open();\n          }}\n        >\n          + Add\n        </Anchor>\n      </Group>\n      {medicationRequests.length > 0 ? (\n        <Box>\n          {medicationRequests.map((request) => (\n            <ConceptBadge<MedicationRequest>\n              key={request.id}\n              resource={request}\n              onEdit={(mr) => {\n                setEditMedication(mr);\n                open();\n              }}\n            />\n          ))}\n        </Box>\n      ) : (\n        <Text>(none)</Text>\n      )}\n      <Modal opened={opened} onClose={close} title={editMedication ? 'Edit Medication' : 'Add Medication'}>\n        <MedicationDialog\n          patient={props.patient}\n          encounter={props.encounter}\n          medication={editMedication}\n          onSubmit={handleSubmit}\n        />\n      </Modal>\n    </>\n  );\n}\n", "import { Alert, Button, Group, Radio, Stack } from '@mantine/core';\nimport { HTTP_HL7_ORG, addProfileToResource, createReference } from '@medplum/core';\nimport { CodeableConcept, Encounter, MedicationRequest, Patient } from '@medplum/fhirtypes';\nimport { useCallback, useState } from 'react';\nimport { CodeableConceptInput } from '../CodeableConceptInput/CodeableConceptInput';\nimport { Form } from '../Form/Form';\nimport { useMedplumProfile } from '@medplum/react-hooks';\n\nexport interface MedicationDialogProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly medication?: MedicationRequest;\n  readonly onSubmit: (medication: MedicationRequest) => void;\n}\n\nconst HTTP = 'http://';\n\nconst statusValues: MedicationRequest['status'][] = [\n  'active',\n  'stopped',\n  'on-hold',\n  'cancelled',\n  'completed',\n  'entered-in-error',\n  'draft',\n  'unknown',\n];\n\nexport function MedicationDialog(props: MedicationDialogProps): JSX.Element {\n  const me = useMedplumProfile();\n  const { patient, encounter, medication, onSubmit } = props;\n  const [code, setCode] = useState<CodeableConcept | undefined>(medication?.medicationCodeableConcept);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      if (!me) {\n        throw new Error('Not signed in');\n      }\n\n      onSubmit(\n        addProfileToResource(\n          {\n            ...medication,\n            resourceType: 'MedicationRequest',\n            status: formData.status as MedicationRequest['status'],\n            intent: medication?.intent ?? 'order',\n            encounter: medication?.encounter ?? (encounter && createReference(encounter)),\n            requester: medication?.requester ?? createReference(me),\n            medicationCodeableConcept: code,\n            subject: createReference(patient),\n          },\n          HTTP_HL7_ORG + '/fhir/us/core/StructureDefinition/us-core-medicationrequest'\n        )\n      );\n    },\n    [me, onSubmit, medication, encounter, code, patient]\n  );\n\n  if (!me) {\n    return <Alert color=\"red\">Not signed in</Alert>;\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Stack>\n        <CodeableConceptInput\n          name=\"request\"\n          path=\"MedicationRequest.medication[x]\"\n          data-autofocus={true}\n          binding={HTTP + 'cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1010.4'}\n          maxValues={1}\n          defaultValue={medication?.medicationCodeableConcept}\n          onChange={(request) => setCode(request)}\n          outcome={undefined}\n        />\n        <Radio.Group name=\"status\" label=\"Request Status\" required defaultValue={medication?.status}>\n          {statusValues.map((sv) => (\n            <Radio key={sv} value={sv} label={sv} my=\"xs\" required />\n          ))}\n        </Radio.Group>\n        <Group justify=\"flex-end\" gap={4}>\n          <Button type=\"submit\">Save</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import { Anchor, Grid, Group, Modal, Text } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { Condition, Encounter, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { Fragment, useCallback, useState } from 'react';\nimport { killEvent } from '../utils/dom';\nimport { ConceptBadge } from './ConceptBadge';\nimport { ConditionDialog } from './ConditionDialog';\n\nexport interface ProblemListProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly problems: Condition[];\n}\n\nexport function ProblemList(props: ProblemListProps): JSX.Element {\n  const medplum = useMedplum();\n  const { patient, encounter } = props;\n  const [problems, setProblems] = useState<Condition[]>(props.problems);\n  const [editCondition, setEditCondition] = useState<Condition>();\n  const [opened, { open, close }] = useDisclosure(false);\n\n  const handleSubmit = useCallback(\n    async (condition: Condition) => {\n      if (condition.id) {\n        const updatedCondition = await medplum.updateResource(condition);\n        setProblems(problems.map((p) => (p.id === updatedCondition.id ? updatedCondition : p)));\n      } else {\n        const newCondition = await medplum.createResource(condition);\n        setProblems([...problems, newCondition]);\n      }\n      setEditCondition(undefined);\n      close();\n    },\n    [medplum, problems, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Problem List\n        </Text>\n        <Anchor\n          component=\"button\"\n          onClick={(e) => {\n            killEvent(e);\n            setEditCondition(undefined);\n            open();\n          }}\n        >\n          + Add\n        </Anchor>\n      </Group>\n      {problems.length > 0 ? (\n        <Grid gutter=\"xs\">\n          {problems.map((problem) => (\n            <Fragment key={problem.id}>\n              <Grid.Col span={2}>{problem.onsetDateTime?.substring(0, 4)}</Grid.Col>\n              <Grid.Col span={10}>\n                <ConceptBadge<Condition>\n                  key={problem.id}\n                  resource={problem}\n                  onEdit={(c) => {\n                    setEditCondition(c);\n                    open();\n                  }}\n                />\n              </Grid.Col>\n            </Fragment>\n          ))}\n        </Grid>\n      ) : (\n        <Text>(none)</Text>\n      )}\n      <Modal opened={opened} onClose={close} title={editCondition ? 'Edit Problem' : 'Add Problem'}>\n        <ConditionDialog patient={patient} encounter={encounter} condition={editCondition} onSubmit={handleSubmit} />\n      </Modal>\n    </>\n  );\n}\n", "import { Button, Group, Stack } from '@mantine/core';\nimport { HTTP_HL7_ORG, HTTP_TERMINOLOGY_HL7_ORG, addProfileToResource, createReference } from '@medplum/core';\nimport { CodeableConcept, Condition, Encounter, Patient } from '@medplum/fhirtypes';\nimport { useCallback, useState } from 'react';\nimport { CodeableConceptInput } from '../CodeableConceptInput/CodeableConceptInput';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { convertLocalToIso } from '../DateTimeInput/DateTimeInput.utils';\nimport { Form } from '../Form/Form';\n\nexport interface ConditionDialogProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly condition?: Condition;\n  readonly onSubmit: (condition: Condition) => void;\n}\n\nexport function ConditionDialog(props: ConditionDialogProps): JSX.Element {\n  const { patient, encounter, condition, onSubmit } = props;\n  const [code, setCode] = useState<CodeableConcept | undefined>(condition?.code);\n  const [clinicalStatus, setClinicalStatus] = useState<CodeableConcept | undefined>(condition?.clinicalStatus);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      const updatedCondition: Condition = addProfileToResource(\n        {\n          ...condition,\n          resourceType: 'Condition',\n          category: [\n            {\n              coding: [\n                {\n                  system: HTTP_TERMINOLOGY_HL7_ORG + '/CodeSystem/condition-category',\n                  code: 'problem-list-item',\n                  display: 'Problem List Item',\n                },\n              ],\n              text: 'Problem List Item',\n            },\n          ],\n          subject: createReference(patient),\n          encounter: encounter && createReference(encounter),\n          code,\n          clinicalStatus,\n          onsetDateTime: formData.onsetDateTime ? convertLocalToIso(formData.onsetDateTime) : undefined,\n        },\n        HTTP_HL7_ORG + '/fhir/us/core/StructureDefinition/us-core-condition-problems-health-concerns'\n      );\n      onSubmit(updatedCondition);\n    },\n    [patient, encounter, condition, code, clinicalStatus, onSubmit]\n  );\n\n  return (\n    <Form key={condition?.id} onSubmit={handleSubmit}>\n      <Stack>\n        <CodeableConceptInput\n          name=\"code\"\n          label=\"Problem\"\n          path=\"Condition.code\"\n          data-autofocus={true}\n          binding={HTTP_HL7_ORG + '/fhir/us/core/ValueSet/us-core-condition-code'}\n          defaultValue={condition?.code}\n          onChange={(code) => setCode(code)}\n          outcome={undefined}\n        />\n        <CodeableConceptInput\n          name=\"clinicalStatus\"\n          label=\"Status\"\n          path=\"Condition.clinicalStatus\"\n          binding={HTTP_HL7_ORG + '/fhir/ValueSet/condition-clinical'}\n          defaultValue={condition?.clinicalStatus}\n          onChange={(clinicalStatus) => setClinicalStatus(clinicalStatus)}\n          outcome={undefined}\n        />\n        <DateTimeInput name=\"onsetDateTime\" label=\"Dx Date\" defaultValue={condition?.onsetDateTime} required />\n        <Group justify=\"flex-end\" gap={4} mt=\"md\">\n          <Button type=\"submit\">Save</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import { Anchor, Badge, Box, Button, Group, Modal, Radio, Stack, Text } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { HTTP_HL7_ORG, HTTP_TERMINOLOGY_HL7_ORG, LOINC, SNOMED, createReference } from '@medplum/core';\nimport { Encounter, Observation, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useState } from 'react';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { Form } from '../Form/Form';\nimport { killEvent } from '../utils/dom';\n\nconst NULLFLAVOR = HTTP_TERMINOLOGY_HL7_ORG + '/CodeSystem/v3-NullFlavor';\n\ntype SexualOrientationCode = '38628009' | '20430005' | '42035005' | 'OTH' | 'UNK' | 'ASKU';\n// Sexual orientation widget\n// See: https://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-observation-sexual-orientation.html\nconst CodesToText: Record<SexualOrientationCode, string> = {\n  '38628009': 'Homosexual',\n  '20430005': 'Heterosexual',\n  '42035005': 'Bisexual',\n  OTH: 'Other',\n  UNK: 'Unknown',\n  ASKU: 'Asked but no answer',\n};\n\nconst CodesToSystem: Record<SexualOrientationCode, string> = {\n  38628009: SNOMED,\n  20430005: SNOMED,\n  42035005: SNOMED,\n  OTH: NULLFLAVOR,\n  UNK: NULLFLAVOR,\n  ASKU: NULLFLAVOR,\n};\n\nexport interface SexualOrientationProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly sexualOrientation?: Observation;\n}\n\nexport function SexualOrientation(props: SexualOrientationProps): JSX.Element {\n  const medplum = useMedplum();\n  const { patient, encounter } = props;\n  const [sexualOrientation, setSexualOrientation] = useState<Observation | undefined>(props.sexualOrientation);\n  const [opened, { open, close }] = useDisclosure(false);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      const code = formData.sexualOrientation as SexualOrientationCode;\n      medplum\n        .createResource<Observation>({\n          resourceType: 'Observation',\n          meta: {\n            profile: [HTTP_HL7_ORG + '/fhir/us/core/ValueSet/us-core-sexual-orientation'],\n          },\n          status: 'final',\n          category: [\n            {\n              coding: [\n                {\n                  system: HTTP_TERMINOLOGY_HL7_ORG + '/CodeSystem/observation-category',\n                  code: 'social-history',\n                  display: 'Social History',\n                },\n              ],\n              text: 'Social History',\n            },\n          ],\n          code: {\n            coding: [\n              {\n                system: LOINC,\n                code: '76690-7',\n                display: 'Sexual orientation',\n              },\n            ],\n            text: 'Sexual orientation',\n          },\n          subject: createReference(patient),\n          encounter: encounter ? createReference(encounter) : undefined,\n          effectiveDateTime: new Date().toISOString(),\n          valueCodeableConcept: {\n            coding: [\n              {\n                system: CodesToSystem[code],\n                code: formData.sexualOrientation,\n              },\n            ],\n            text: CodesToText[code],\n          },\n        })\n        .then((newSexualOrientation) => {\n          setSexualOrientation(newSexualOrientation);\n          close();\n        })\n        .catch(console.error);\n    },\n    [medplum, patient, encounter, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Sexual Orientation\n        </Text>\n        <Anchor\n          href=\"#\"\n          onClick={(e) => {\n            killEvent(e);\n            open();\n          }}\n        >\n          + Edit\n        </Anchor>\n      </Group>\n      {sexualOrientation?.valueCodeableConcept ? (\n        <Box>\n          <Badge variant=\"light\">\n            <CodeableConceptDisplay value={sexualOrientation.valueCodeableConcept} />\n          </Badge>\n        </Box>\n      ) : (\n        <Text>(none)</Text>\n      )}\n      <Modal opened={opened} onClose={close} title=\"Set Sexual Orientation\">\n        <Form onSubmit={handleSubmit}>\n          <Stack>\n            <Radio.Group name=\"sexualOrientation\" label=\"Sexual Orientation\" required>\n              {Object.entries(CodesToText).map(([code, text]) => (\n                <Radio key={code} value={code} label={text} my=\"xs\" />\n              ))}\n            </Radio.Group>\n            <Group justify=\"flex-end\" gap={4} mt=\"md\">\n              <Button type=\"submit\">Save</Button>\n            </Group>\n          </Stack>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n", "import { Anchor, Badge, Box, Button, Group, Modal, Radio, Stack, Text } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { HTTP_HL7_ORG, LOINC, SNOMED, createReference } from '@medplum/core';\nimport { Encounter, Observation, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useState } from 'react';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { Form } from '../Form/Form';\nimport { killEvent } from '../utils/dom';\n\n// Smoking Status widget\n// See: https://build.fhir.org/ig/HL7/US-Core/StructureDefinition-us-core-smokingstatus.html\n\nconst smokingStatusOptions: Record<string, string> = {\n  '266919005': 'Never smoked tobacco',\n  '266927001': 'Tobacco smoking consumption unknown',\n  '428041000124106': 'Occasional tobacco smoker',\n  '428061000124105': 'Light tobacco smoker',\n  '428071000124103': 'Heavy tobacco smoker',\n  '449868002': 'Smokes tobacco daily',\n  '77176002': 'Smoker',\n  '8517006': 'Ex-smoker',\n};\n\nexport interface SmokingStatusProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly smokingStatus?: Observation;\n}\n\nexport function SmokingStatus(props: SmokingStatusProps): JSX.Element {\n  const medplum = useMedplum();\n  const { patient, encounter } = props;\n  const [smokingStatus, setSmokingStatus] = useState<Observation | undefined>(props.smokingStatus);\n  const [opened, { open, close }] = useDisclosure(false);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      medplum\n        .createResource<Observation>({\n          resourceType: 'Observation',\n          meta: {\n            profile: [HTTP_HL7_ORG + '/fhir/us/core/StructureDefinition/us-core-smokingstatus'],\n          },\n          status: 'final',\n          category: [\n            {\n              coding: [\n                {\n                  system: 'http://terminology.hl7.org/CodeSystem/observation-category',\n                  code: 'social-history',\n                  display: 'Social History',\n                },\n              ],\n              text: 'Social History',\n            },\n          ],\n          code: {\n            coding: [\n              {\n                system: LOINC,\n                code: '72166-2',\n                display: 'Tobacco smoking status',\n              },\n            ],\n            text: 'Tobacco smoking status',\n          },\n          subject: createReference(patient),\n          encounter: encounter ? createReference(encounter) : undefined,\n          effectiveDateTime: new Date().toISOString(),\n          valueCodeableConcept: {\n            coding: [\n              {\n                system: SNOMED,\n                version: SNOMED + '/731000124108',\n                code: formData.smokingStatus,\n              },\n            ],\n            text: smokingStatusOptions[formData.smokingStatus],\n          },\n        })\n        .then((newSmokingStatus) => {\n          setSmokingStatus(newSmokingStatus);\n          close();\n        })\n        .catch(console.error);\n    },\n    [medplum, patient, encounter, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Smoking Status\n        </Text>\n        <Anchor\n          href=\"#\"\n          onClick={(e) => {\n            killEvent(e);\n            open();\n          }}\n        >\n          + Edit\n        </Anchor>\n      </Group>\n      {smokingStatus?.valueCodeableConcept ? (\n        <Box>\n          <Badge variant=\"light\">\n            <CodeableConceptDisplay value={smokingStatus.valueCodeableConcept} />\n          </Badge>\n        </Box>\n      ) : (\n        <Text>(none)</Text>\n      )}\n      <Modal opened={opened} onClose={close} title=\"Set Smoking Status\">\n        <Form onSubmit={handleSubmit}>\n          <Stack>\n            <Radio.Group name=\"smokingStatus\" label=\"Smoking Status\" required>\n              {Object.entries(smokingStatusOptions).map(([code, text]) => (\n                <Radio key={code} value={code} label={text} my=\"xs\" />\n              ))}\n            </Radio.Group>\n            <Group justify=\"flex-end\" gap={4} mt=\"md\">\n              <Button type=\"submit\">Save</Button>\n            </Group>\n          </Stack>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n", "import { Anchor, Button, Grid, Group, Modal, Stack, Text, Textarea, TextInput } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { Encounter, Observation, Patient } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useCallback, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { QuantityDisplay } from '../QuantityDisplay/QuantityDisplay';\nimport { killEvent } from '../utils/dom';\nimport {\n  createCompoundObservation,\n  createLoincCode,\n  createObservation,\n  createQuantity,\n  getCompoundObservationValue,\n  getObservationValue,\n} from './Vitals.utils';\n\ninterface ObservationMeta {\n  readonly code: string;\n  readonly title: string;\n  readonly unit: string;\n}\n\nconst LOINC_CODES: Record<string, ObservationMeta> = {\n  bloodPressure: {\n    code: '85354-9',\n    title: 'Blood Pressure',\n    unit: 'mm[Hg]',\n  },\n  heartRate: {\n    code: '8867-4',\n    title: 'Heart Rate',\n    unit: '/min',\n  },\n  bodyTemperature: {\n    code: '8310-5',\n    title: 'Body Temperature',\n    unit: 'Cel',\n  },\n  respiratoryRate: {\n    code: '9279-1',\n    title: 'Respiratory Rate',\n    unit: '/min',\n  },\n  height: {\n    code: '8302-2',\n    title: 'height',\n    unit: 'cm',\n  },\n  weight: {\n    code: '29463-7',\n    title: 'weight',\n    unit: 'kg',\n  },\n  bmi: {\n    code: '39156-5',\n    title: 'BMI',\n    unit: 'kg/m2',\n  },\n  oxygen: {\n    code: '2708-6',\n    title: 'Oxygen',\n    unit: '%',\n  },\n  headCircumference: {\n    code: '9843-4',\n    title: 'Head Circumference',\n    unit: 'cm',\n  },\n};\n\nconst SYSTOLIC = '8480-6';\nconst DIASTOLIC = '8462-4';\n\nexport interface VitalsProps {\n  readonly patient: Patient;\n  readonly encounter?: Encounter;\n  readonly vitals: Observation[];\n}\n\nexport function Vitals(props: VitalsProps): JSX.Element {\n  const medplum = useMedplum();\n  const { patient, encounter } = props;\n  const [vitals, setVitals] = useState<Observation[]>(props.vitals);\n  const [opened, { open, close }] = useDisclosure(false);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      const newObservations = Object.entries(LOINC_CODES)\n        .map(([name, meta]) => {\n          if (name === 'bloodPressure') {\n            return createCompoundObservation(patient, encounter, meta.code, meta.title, [\n              {\n                code: createLoincCode(SYSTOLIC, 'Systolic blood pressure'),\n                valueQuantity: createQuantity(parseFloat(formData['systolic']), 'mm[Hg]'),\n              },\n              {\n                code: createLoincCode(DIASTOLIC, 'Diastolic blood pressure'),\n                valueQuantity: createQuantity(parseFloat(formData['diastolic']), 'mm[Hg]'),\n              },\n            ]);\n          }\n          return createObservation(\n            patient,\n            encounter,\n            meta.code,\n            meta.title,\n            createQuantity(parseFloat(formData[name]), meta.unit)\n          );\n        })\n        .filter(Boolean) as Observation[];\n\n      // Execute all create requests in parallel to take advantage of autobatching\n      Promise.all(newObservations.map((obs) => medplum.createResource<Observation>(obs)))\n        .then((newVitals) => setVitals([...newVitals, ...vitals]))\n        .catch(console.error);\n\n      close();\n    },\n    [medplum, patient, encounter, vitals, close]\n  );\n\n  return (\n    <>\n      <Group justify=\"space-between\">\n        <Text fz=\"md\" fw={700}>\n          Vitals\n        </Text>\n        <Anchor\n          href=\"#\"\n          onClick={(e) => {\n            killEvent(e);\n            open();\n          }}\n        >\n          + Add\n        </Anchor>\n      </Group>\n      <Grid>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          BP Sys\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getCompoundObservationValue(vitals, LOINC_CODES.bloodPressure.code, SYSTOLIC)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          BP Dias\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getCompoundObservationValue(vitals, LOINC_CODES.bloodPressure.code, DIASTOLIC)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          HR\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.heartRate.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          Temp\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.bodyTemperature.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          RR\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.respiratoryRate.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          Height\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.height.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          Weight\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.weight.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          BMI\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.bmi.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          O2\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.oxygen.code)} />\n        </Grid.Col>\n        <Grid.Col span={3} ta=\"right\" c=\"dimmed\">\n          HC\n        </Grid.Col>\n        <Grid.Col span={3}>\n          <QuantityDisplay value={getObservationValue(vitals, LOINC_CODES.headCircumference.code)} />\n        </Grid.Col>\n      </Grid>\n      <Modal opened={opened} onClose={close} title=\"Add Vitals\">\n        <Form onSubmit={handleSubmit}>\n          <Stack>\n            <Group grow>\n              <TextInput name=\"systolic\" label=\"BP Sys\" data-autofocus={true} autoFocus />\n              <TextInput name=\"diastolic\" label=\"BP Dias\" />\n            </Group>\n            <Group grow>\n              <TextInput name=\"heartRate\" label=\"HR\" />\n              <TextInput name=\"bodyTemperature\" label=\"Temp\" />\n            </Group>\n            <Group grow>\n              <TextInput name=\"respiratoryRate\" label=\"RR\" />\n              <TextInput name=\"height\" label=\"height\" />\n            </Group>\n            <Group grow>\n              <TextInput name=\"weight\" label=\"Wt\" />\n              <TextInput name=\"bmi\" label=\"BMI\" />\n            </Group>\n            <Group grow>\n              <TextInput name=\"oxygen\" label=\"O2\" />\n              <TextInput name=\"headCircumference\" label=\"HC\" />\n            </Group>\n            <Textarea name=\"notes\" label=\"Notes\" />\n          </Stack>\n          <Group justify=\"flex-end\" gap={4} mt=\"md\">\n            <Button type=\"submit\">Save</Button>\n          </Group>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n", "import { LOINC, UCUM, createReference } from '@medplum/core';\nimport { CodeableConcept, Encounter, Observation, ObservationComponent, Patient, Quantity } from '@medplum/fhirtypes';\n\nexport function getObservationValue(observations: Observation[], code: string): Quantity | undefined {\n  const observation = observations.find((o) => o.code?.coding?.[0].code === code);\n  return observation?.valueQuantity;\n}\n\nexport function getCompoundObservationValue(\n  observations: Observation[],\n  code: string,\n  innerCode: string\n): Quantity | undefined {\n  const observation = observations.find((o) => o.code?.coding?.[0].code === code);\n  const component = observation?.component?.find((c) => c.code?.coding?.[0].code === innerCode);\n  return component?.valueQuantity;\n}\n\nexport function createObservation(\n  patient: Patient,\n  encounter: Encounter | undefined,\n  code: string,\n  title: string,\n  valueQuantity: Quantity\n): Observation | undefined {\n  if (!isValidNumber(valueQuantity.value)) {\n    return undefined;\n  }\n  return {\n    ...createBaseObservation(patient, encounter, code, title),\n    valueQuantity,\n  };\n}\n\nexport function createCompoundObservation(\n  patient: Patient,\n  encounter: Encounter | undefined,\n  code: string,\n  title: string,\n  components: ObservationComponent[]\n): Observation | undefined {\n  const component = components.filter((c) => isValidNumber(c.valueQuantity?.value));\n  if (component.length === 0) {\n    return undefined;\n  }\n  return {\n    ...createBaseObservation(patient, encounter, code, title),\n    component,\n  };\n}\n\nexport function createBaseObservation(\n  patient: Patient,\n  encounter: Encounter | undefined,\n  code: string,\n  title: string\n): Observation {\n  return {\n    resourceType: 'Observation',\n    status: 'preliminary',\n    subject: createReference(patient),\n    encounter: encounter ? createReference(encounter) : undefined,\n    effectiveDateTime: new Date().toISOString(),\n    category: [\n      {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/observation-category',\n            code: 'vital-signs',\n            display: 'Vital Signs',\n          },\n        ],\n      },\n    ],\n    code: createLoincCode(code, title),\n  };\n}\n\nexport function createLoincCode(code: string, display: string): CodeableConcept {\n  return {\n    coding: [\n      {\n        code,\n        display,\n        system: LOINC,\n      },\n    ],\n    text: display,\n  };\n}\n\nexport function createQuantity(value: number, unit: string): Quantity {\n  return {\n    value,\n    system: UCUM,\n    unit,\n    code: unit,\n  };\n}\n\nfunction isValidNumber(value: number | undefined): boolean {\n  return value !== undefined && !isNaN(value) && isFinite(value);\n}\n", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Patient, Reference, ResourceType } from '@medplum/fhirtypes';\nimport { useCallback } from 'react';\nimport { ResourceTimeline, ResourceTimelineProps } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface PatientTimelineProps extends Pick<ResourceTimelineProps<Patient>, 'getMenu'> {\n  readonly patient: Patient | Reference<Patient>;\n}\n\nexport function PatientTimeline(props: PatientTimelineProps): JSX.Element {\n  const { patient, ...rest } = props;\n\n  const loadTimelineResources = useCallback((medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n    const ref = `${resourceType}/${id}`;\n    const _count = 100;\n    return Promise.allSettled([\n      medplum.readHistory('Patient', id),\n      medplum.search('Communication', { subject: ref, _count }),\n      medplum.search('Device', { patient: ref, _count }),\n      medplum.search('DeviceRequest', { patient: ref, _count }),\n      medplum.search('DiagnosticReport', { subject: ref, _count }),\n      medplum.search('Media', { subject: ref, _count }),\n      medplum.search('ServiceRequest', { subject: ref, _count }),\n      medplum.search('Task', { subject: ref, _count }),\n    ]);\n  }, []);\n\n  return (\n    <ResourceTimeline\n      value={patient}\n      loadTimelineResources={loadTimelineResources}\n      createCommunication={(resource: Patient, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        subject: createReference(resource),\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: Patient, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        subject: createReference(resource),\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n      {...rest}\n    />\n  );\n}\n", "import { Anchor, Button, NativeSelect, Stack, TextInput } from '@mantine/core';\nimport { InternalSchemaElement, getReferenceString } from '@medplum/core';\nimport { PlanDefinition, PlanDefinitionAction, Reference, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport cx from 'clsx';\nimport { MouseEvent, SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { FormSection } from '../FormSection/FormSection';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { setPropertyValue } from '../ResourceForm/ResourceForm.utils';\nimport { ResourceInput } from '../ResourceInput/ResourceInput';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { killEvent } from '../utils/dom';\nimport classes from './PlanDefinitionBuilder.module.css';\n\nexport interface PlanDefinitionBuilderProps {\n  readonly value: Partial<PlanDefinition> | Reference<PlanDefinition>;\n  readonly onSubmit: (result: PlanDefinition) => void;\n}\n\nexport function PlanDefinitionBuilder(props: PlanDefinitionBuilderProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.value);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [selectedKey, setSelectedKey] = useState<string>();\n  const [hoverKey, setHoverKey] = useState<string>();\n  const [value, setValue] = useState<PlanDefinition>();\n\n  function handleDocumentMouseOver(): void {\n    setHoverKey(undefined);\n  }\n\n  function handleDocumentClick(): void {\n    setSelectedKey(undefined);\n  }\n\n  const valueRef = useRef<PlanDefinition>();\n  valueRef.current = value;\n\n  useEffect(() => {\n    medplum\n      .requestSchema('PlanDefinition')\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setValue(ensurePlanDefinitionKeys(defaultValue ?? { resourceType: 'PlanDefinition', status: 'active' }));\n    document.addEventListener('mouseover', handleDocumentMouseOver);\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('mouseover', handleDocumentMouseOver);\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [defaultValue]);\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  function changeProperty(property: string, newValue: any): void {\n    setValue({\n      ...valueRef.current,\n      [property]: newValue,\n    } as PlanDefinition);\n  }\n\n  return (\n    <div>\n      <Form testid=\"questionnaire-form\" onSubmit={() => props.onSubmit(value)}>\n        <TextInput\n          label=\"Plan Title\"\n          defaultValue={value.title}\n          onChange={(e) => changeProperty('title', e.currentTarget.value)}\n        />\n        <ActionArrayBuilder\n          actions={value.action || []}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n          hoverKey={hoverKey}\n          setHoverKey={setHoverKey}\n          onChange={(x) => changeProperty('action', x)}\n        />\n        <Button type=\"submit\">Save</Button>\n      </Form>\n    </div>\n  );\n}\n\ninterface ActionArrayBuilderProps {\n  readonly actions: PlanDefinitionAction[];\n  readonly selectedKey: string | undefined;\n  readonly setSelectedKey: (key: string | undefined) => void;\n  readonly hoverKey: string | undefined;\n  readonly setHoverKey: (key: string | undefined) => void;\n  readonly onChange: (actions: PlanDefinitionAction[]) => void;\n}\n\nfunction ActionArrayBuilder(props: ActionArrayBuilderProps): JSX.Element {\n  const actionsRef = useRef<PlanDefinitionAction[]>();\n  actionsRef.current = props.actions;\n\n  function changeAction(changedAction: PlanDefinitionAction): void {\n    props.onChange(\n      (actionsRef.current as PlanDefinition[]).map((i) => (i.id === changedAction.id ? changedAction : i))\n    );\n  }\n\n  function addAction(addedAction: PlanDefinitionAction): void {\n    props.onChange([...(actionsRef.current as PlanDefinition[]), addedAction]);\n    props.setSelectedKey(addedAction.id);\n  }\n\n  function removeAction(removedAction: PlanDefinitionAction): void {\n    props.onChange((actionsRef.current as PlanDefinition[]).filter((i) => i !== removedAction));\n  }\n\n  return (\n    <div className={classes.section}>\n      {props.actions.map((action) => (\n        <div key={action.id}>\n          <ActionBuilder\n            action={action}\n            selectedKey={props.selectedKey}\n            setSelectedKey={props.setSelectedKey}\n            hoverKey={props.hoverKey}\n            setHoverKey={props.setHoverKey}\n            onChange={changeAction}\n            onRemove={() => removeAction(action)}\n          />\n        </div>\n      ))}\n      <div className={classes.bottomActions}>\n        <Anchor\n          href=\"#\"\n          onClick={(e: MouseEvent) => {\n            killEvent(e);\n            addAction({ id: generateId() });\n          }}\n        >\n          Add action\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\ninterface ActionBuilderProps {\n  readonly action: PlanDefinitionAction;\n  readonly selectedKey: string | undefined;\n  readonly setSelectedKey: (key: string | undefined) => void;\n  readonly hoverKey: string | undefined;\n  readonly setHoverKey: (key: string | undefined) => void;\n  readonly onChange: (action: PlanDefinitionAction) => void;\n  readonly onRemove: () => void;\n}\n\nfunction ActionBuilder(props: ActionBuilderProps): JSX.Element {\n  const { action } = props;\n  const actionType = getInitialActionType(action);\n  const editing = props.selectedKey === props.action.id;\n  const hovering = props.hoverKey === props.action.id;\n\n  function onClick(e: SyntheticEvent): void {\n    e.stopPropagation();\n    props.setSelectedKey(props.action.id);\n  }\n\n  function onHover(e: SyntheticEvent): void {\n    killEvent(e);\n    props.setHoverKey(props.action.id);\n  }\n\n  const className = cx(classes.section, {\n    [classes.editing]: editing,\n    [classes.hovering]: hovering && !editing,\n  });\n\n  return (\n    <div data-testid={action.id} className={className} onClick={onClick} onMouseOver={onHover} onFocus={onHover}>\n      {editing ? (\n        <ActionEditor\n          action={action}\n          actionType={actionType}\n          onChange={props.onChange}\n          selectedKey={props.selectedKey}\n          setSelectedKey={props.setSelectedKey}\n          hoverKey={props.hoverKey}\n          setHoverKey={props.setHoverKey}\n          onRemove={props.onRemove}\n        />\n      ) : (\n        <ActionDisplay action={action} actionType={actionType} />\n      )}\n      <div className={classes.bottomActions}>\n        <Anchor\n          href=\"#\"\n          onClick={(e: MouseEvent) => {\n            e.preventDefault();\n            props.onRemove();\n          }}\n        >\n          Remove\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\nconst timingProperty: InternalSchemaElement = {\n  path: 'PlanDefinition.action.timing[x]',\n  min: 0,\n  max: 1,\n  description: '',\n  isArray: false,\n  constraints: [],\n  type: ['dateTime', 'Period', 'Range', 'Timing'].map((t) => ({ code: t })),\n};\n\ninterface ActionDisplayProps {\n  readonly action: PlanDefinitionAction;\n  readonly actionType: string | undefined;\n}\n\nfunction ActionDisplay(props: ActionDisplayProps): JSX.Element {\n  const { action, actionType } = props;\n  const [propertyValue, propertyType] = getActionTiming(action);\n  return (\n    <div>\n      <div>\n        {action.title || 'Untitled'} {actionType && `(${actionType})`}\n      </div>\n      {action.definitionCanonical && (\n        <div>\n          <ReferenceDisplay value={{ reference: action.definitionCanonical }} />\n        </div>\n      )}\n      {propertyValue && (\n        <div>\n          <ResourcePropertyDisplay property={timingProperty} propertyType={propertyType} value={propertyValue} />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ActionEditorProps {\n  readonly action: PlanDefinitionAction;\n  readonly actionType: string | undefined;\n  readonly selectedKey: string | undefined;\n  readonly setSelectedKey: (key: string | undefined) => void;\n  readonly hoverKey: string | undefined;\n  readonly setHoverKey: (key: string | undefined) => void;\n  readonly onChange: (action: PlanDefinitionAction) => void;\n  readonly onRemove: () => void;\n}\n\nfunction ActionEditor(props: ActionEditorProps): JSX.Element {\n  const { action } = props;\n  const [actionType, setActionType] = useState<string | undefined>(props.actionType);\n\n  function changeProperty(property: string, value: any): void {\n    props.onChange({\n      ...action,\n      [property]: value,\n    } as PlanDefinitionAction);\n  }\n\n  return (\n    <Stack gap=\"xl\">\n      <TextInput\n        name={`actionTitle-${action.id}`}\n        label=\"Title\"\n        defaultValue={action.title}\n        onChange={(e) => changeProperty('title', e.currentTarget.value)}\n      />\n      <TextInput\n        name={`actionDescription-${action.id}`}\n        label=\"Description\"\n        defaultValue={action.description}\n        onChange={(e) => changeProperty('description', e.currentTarget.value)}\n      />\n      <NativeSelect\n        label=\"Type of Action\"\n        description=\"The type of the action to be performed.\"\n        name={`actionType-${action.id}`}\n        defaultValue={actionType}\n        onChange={(e) => setActionType(e.currentTarget.value)}\n        data={['', 'appointment', 'lab', 'questionnaire', 'task']}\n      />\n      {action.action && action.action.length > 0 && (\n        <ActionArrayBuilder\n          actions={action.action}\n          selectedKey={props.selectedKey}\n          setSelectedKey={props.setSelectedKey}\n          hoverKey={props.hoverKey}\n          setHoverKey={props.setHoverKey}\n          onChange={(x) => changeProperty('action', x)}\n        />\n      )}\n      {(() => {\n        switch (actionType) {\n          case 'appointment':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Appointment\"\n                description=\"The subject must schedule an appointment from the schedule.\"\n                resourceType=\"Schedule\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'lab':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Lab\"\n                description=\"The subject must complete the following lab panel.\"\n                resourceType=\"ActivityDefinition\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'questionnaire':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Questionnaire\"\n                description=\"The subject must complete the selected questionnaire.\"\n                resourceType=\"Questionnaire\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'task':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Task\"\n                description=\"The subject must complete the following task.\"\n                resourceType=\"ActivityDefinition\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          default:\n            return null;\n        }\n      })()}\n      <FormSection title=\"Timing\" description=\"When the action should take place.\">\n        <ActionTimingInput name={'timing-' + action.id} action={action} onChange={props.onChange} />\n      </FormSection>\n    </Stack>\n  );\n}\n\ninterface ActionResourceTypeBuilderProps {\n  readonly action: PlanDefinitionAction;\n  readonly title: string;\n  readonly description: string;\n  readonly resourceType: ResourceType;\n  readonly onChange: (action: PlanDefinitionAction) => void;\n}\n\nfunction ActionResourceTypeBuilder(props: ActionResourceTypeBuilderProps): JSX.Element {\n  const { id, definitionCanonical } = props.action;\n  const reference = definitionCanonical?.startsWith(props.resourceType + '/')\n    ? { reference: definitionCanonical }\n    : undefined;\n  return (\n    <ResourceInput\n      name={id as string}\n      resourceType={props.resourceType}\n      defaultValue={reference}\n      loadOnFocus={true}\n      onChange={(newValue) => {\n        if (newValue) {\n          props.onChange({ ...props.action, definitionCanonical: getReferenceString(newValue) });\n        } else {\n          props.onChange({ ...props.action, definitionCanonical: undefined });\n        }\n      }}\n    />\n  );\n}\n\ninterface ActionTimingInputProps {\n  readonly name: string;\n  readonly action: PlanDefinitionAction;\n  readonly onChange: (action: PlanDefinitionAction) => void;\n}\n\nfunction ActionTimingInput(props: ActionTimingInputProps): JSX.Element {\n  const value = props.action;\n  const key = 'timing';\n  const [propertyValue, propertyType] = getActionTiming(value);\n  return (\n    <ResourcePropertyInput\n      property={timingProperty}\n      name=\"timing[x]\"\n      path=\"PlanDefinition.timing[x]\"\n      defaultValue={propertyValue}\n      defaultPropertyType={propertyType}\n      onChange={(newValue: any, propName?: string) => {\n        props.onChange(setPropertyValue(value, key, propName ?? key, timingProperty, newValue));\n      }}\n      outcome={undefined}\n    />\n  );\n}\n\nfunction getInitialActionType(action: PlanDefinitionAction): string | undefined {\n  if (action.definitionCanonical?.startsWith('Schedule')) {\n    return 'appointment';\n  }\n\n  if (action.definitionCanonical?.startsWith('Questionnaire/')) {\n    return 'questionnaire';\n  }\n\n  if (action.definitionCanonical?.startsWith('ActivityDefinition/')) {\n    return 'task';\n  }\n\n  return undefined;\n}\n\nfunction getActionTiming(action: PlanDefinitionAction): [any, string] {\n  return getValueAndType({ type: 'PlanDefinitionAction', value: action }, 'timing');\n}\n\nlet nextId = 1;\n\n/**\n * Generates a unique ID.\n * React needs unique IDs for components for rendering performance.\n * All of the important components in the questionnaire builder have id properties for this:\n * Questionnaire, QuestionnaireItem, and QuestionnaireItemAnswerOption.\n * @param existing - Optional existing id which will update nextId.\n * @returns A unique key.\n */\nfunction generateId(existing?: string): string {\n  if (existing) {\n    if (existing.startsWith('id-')) {\n      const existingNum = parseInt(existing.substring(3), 10);\n      if (!isNaN(existingNum)) {\n        nextId = Math.max(nextId, existingNum + 1);\n      }\n    }\n    return existing;\n  }\n  return 'id-' + nextId++;\n}\n\nfunction ensurePlanDefinitionKeys(planDefinition: PlanDefinition): PlanDefinition {\n  return {\n    ...planDefinition,\n    action: ensurePlanDefinitionActionKeys(planDefinition.action),\n  } as PlanDefinition;\n}\n\nfunction ensurePlanDefinitionActionKeys(\n  actions: PlanDefinitionAction[] | undefined\n): PlanDefinitionAction[] | undefined {\n  if (!actions) {\n    return undefined;\n  }\n  return actions.map((action) => ({\n    ...action,\n    id: generateId(action.id),\n    action: ensurePlanDefinitionActionKeys(action.action),\n  }));\n}\n", "\n.section {\n  position: relative;\n  margin: 4px 4px 8px;\n  padding: 6px 12px 16px 6px;\n  border: 1.5px solid var(--mantine-color-gray-1);\n  border-radius: var(--mantine-radius-sm);\n  transition: all 0.1;\n}\n\n.hovering {\n  border: 1.5px solid var(--mantine-color-blue-5);\n}\n\n.editing {\n  border: 1.5px solid var(--mantine-color-gray-1);\n  border-left: 4px solid var(--mantine-color-blue-5);\n}\n\n.bottomActions {\n  position: absolute;\n  right: 4px;\n  bottom: 0;\n  font-size: var(--mantine-font-size-xs);\n\n  & a {\n    margin-left: 8px;\n  }\n}", "import { Anchor, Box, Button, Group, NativeSelect, Space, Textarea, TextInput, Title } from '@mantine/core';\nimport { getElementDefinition, isResource as isResourceType } from '@medplum/core';\nimport {\n  Extension,\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  Reference,\n  ResourceType,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconArrowDown, IconArrowUp } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { MouseEvent, SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { QuestionnaireFormItem } from '../QuestionnaireForm/QuestionnaireFormItem/QuestionnaireFormItem';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\nimport { killEvent } from '../utils/dom';\nimport {\n  getQuestionnaireItemReferenceTargetTypes,\n  isChoiceQuestion,\n  QuestionnaireItemType,\n  setQuestionnaireItemReferenceTargetTypes,\n} from '../utils/questionnaire';\nimport classes from './QuestionnaireBuilder.module.css';\n\nexport interface QuestionnaireBuilderProps {\n  readonly questionnaire: Partial<Questionnaire> | Reference<Questionnaire>;\n  readonly onSubmit: (result: Questionnaire) => void;\n  readonly autoSave?: boolean;\n}\n\nexport function QuestionnaireBuilder(props: QuestionnaireBuilderProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.questionnaire);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [value, setValue] = useState<Questionnaire>();\n  const [selectedKey, setSelectedKey] = useState<string>();\n  const [hoverKey, setHoverKey] = useState<string>();\n\n  function handleDocumentMouseOver(): void {\n    setHoverKey(undefined);\n  }\n\n  function handleDocumentClick(): void {\n    setSelectedKey(undefined);\n  }\n\n  useEffect(() => {\n    medplum\n      .requestSchema('Questionnaire')\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setValue(ensureQuestionnaireKeys(defaultValue ?? { resourceType: 'Questionnaire', status: 'active' }));\n    document.addEventListener('mouseover', handleDocumentMouseOver);\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('mouseover', handleDocumentMouseOver);\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [defaultValue]);\n\n  const handleChange = (questionnaire: Questionnaire, disableSubmit?: boolean): void => {\n    setValue(questionnaire);\n    if (props.autoSave && !disableSubmit && props.onSubmit) {\n      props.onSubmit(questionnaire);\n    }\n  };\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Form testid=\"questionnaire-form\" onSubmit={() => props.onSubmit(value)}>\n        <ItemBuilder\n          item={value}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n          hoverKey={hoverKey}\n          setHoverKey={setHoverKey}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Save</Button>\n      </Form>\n    </div>\n  );\n}\n\ninterface ItemBuilderProps<T extends Questionnaire | QuestionnaireItem> {\n  readonly item: T;\n  readonly selectedKey: string | undefined;\n  readonly setSelectedKey: (key: string | undefined) => void;\n  readonly hoverKey: string | undefined;\n  readonly isFirst?: boolean;\n  readonly isLast?: boolean;\n  readonly setHoverKey: (key: string | undefined) => void;\n  readonly onChange: (item: T, disableSubmit?: boolean) => void;\n  readonly onRemove?: () => void;\n  readonly onRepeatable?: (item: QuestionnaireItem) => void;\n  onMoveUp?(): void;\n  onMoveDown?(): void;\n}\n\nfunction ItemBuilder<T extends Questionnaire | QuestionnaireItem>(props: ItemBuilderProps<T>): JSX.Element {\n  const resource = props.item as Questionnaire;\n  const item = props.item as QuestionnaireItem;\n  const isResource = isResourceType(props.item);\n  const isContainer = isResource || item.type === QuestionnaireItemType.group;\n  const linkId = item.linkId ?? '[untitled]';\n  const editing = props.selectedKey === props.item.id;\n  const hovering = props.hoverKey === props.item.id;\n\n  const itemRef = useRef<T>();\n  itemRef.current = props.item;\n\n  function onClick(e: SyntheticEvent): void {\n    killEvent(e);\n    props.setSelectedKey(props.item.id);\n  }\n\n  function onHover(e: SyntheticEvent): void {\n    killEvent(e);\n    props.setHoverKey(props.item.id);\n  }\n\n  function changeItem(changedItem: QuestionnaireItem): void {\n    const curr = itemRef.current as T;\n    props.onChange({\n      ...curr,\n      item: curr.item?.map((i) => (i.id === changedItem.id ? changedItem : i)),\n    } as T);\n  }\n\n  function addItem(addedItem: QuestionnaireItem, disableSubmit?: boolean): void {\n    props.onChange(\n      {\n        ...props.item,\n        item: [...(props.item.item ?? []), addedItem],\n      },\n      disableSubmit\n    );\n  }\n\n  function removeItem(removedItem: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      item: props.item.item?.filter((i) => i !== removedItem),\n    });\n  }\n\n  function changeProperty(property: string, value: any): void {\n    props.onChange({\n      ...itemRef.current,\n      [property]: value,\n    } as T);\n  }\n\n  function updateItem(updatedItem: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      ...updatedItem,\n    });\n  }\n\n  function toggleRepeatable(item: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      item: props.item.item?.map((i) => (i === item ? { ...i, repeats: !i.repeats } : i)),\n    });\n  }\n\n  function moveItem(itemIndex: number, delta: number): void {\n    const updatedItems = reorderItems(props.item.item, itemIndex, delta);\n\n    props.onChange({\n      ...props.item,\n      item: updatedItems,\n    });\n  }\n\n  const className = cx(classes.section, {\n    [classes.editing]: editing,\n    [classes.hovering]: hovering && !editing,\n  });\n\n  return (\n    <div data-testid={item.linkId} className={className} onClick={onClick} onMouseOver={onHover} onFocus={onHover}>\n      <div className={classes.questionBody}>\n        {editing ? (\n          <>\n            {isResource && (\n              <TextInput\n                size=\"xl\"\n                defaultValue={resource.title}\n                onBlur={(e) => changeProperty('title', e.currentTarget.value)}\n              />\n            )}\n            {!isResource && (\n              <Textarea\n                autosize\n                minRows={2}\n                defaultValue={item.text}\n                onBlur={(e) => changeProperty('text', e.currentTarget.value)}\n              />\n            )}\n            {item.type === 'reference' && <ReferenceProfiles item={item} onChange={updateItem} />}\n            {isChoiceQuestion(item) && <AnswerBuilder item={item} onChange={(item) => updateItem(item)} />}\n          </>\n        ) : (\n          <>\n            {resource.title && <Title>{resource.title}</Title>}\n            {item.text && <div className={classes.preserveBreaks}>{item.text}</div>}\n            {!isContainer && (\n              <QuestionnaireFormItem\n                item={item}\n                index={0}\n                onChange={() => undefined}\n                response={{ linkId: item.linkId }}\n              />\n            )}\n          </>\n        )}\n      </div>\n      {item.item?.map((item, i) => (\n        <div key={item.id}>\n          <ItemBuilder\n            item={item}\n            selectedKey={props.selectedKey}\n            setSelectedKey={props.setSelectedKey}\n            hoverKey={props.hoverKey}\n            isFirst={i === 0}\n            isLast={i === (props.item.item ?? []).length - 1}\n            setHoverKey={props.setHoverKey}\n            onChange={changeItem}\n            onRemove={() => removeItem(item)}\n            onRepeatable={toggleRepeatable}\n            onMoveUp={() => moveItem(i, -1)}\n            onMoveDown={() => moveItem(i, 1)}\n          />\n        </div>\n      ))}\n      {!isContainer && (\n        <div className={classes.topActions}>\n          {editing ? (\n            <>\n              <TextInput\n                size=\"xs\"\n                className={classes.linkIdInput}\n                defaultValue={item.linkId}\n                onBlur={(e) => changeProperty('linkId', e.currentTarget.value)}\n              />\n              {!isContainer && (\n                <NativeSelect\n                  size=\"xs\"\n                  className={classes.typeSelect}\n                  defaultValue={item.type}\n                  onChange={(e) => changeProperty('type', e.currentTarget.value)}\n                  data={[\n                    { value: 'display', label: 'Display' },\n                    { value: 'boolean', label: 'Boolean' },\n                    { value: 'decimal', label: 'Decimal' },\n                    { value: 'integer', label: 'Integer' },\n                    { value: 'date', label: 'Date' },\n                    { value: 'dateTime', label: 'Date/Time' },\n                    { value: 'time', label: 'Time' },\n                    { value: 'string', label: 'String' },\n                    { value: 'text', label: 'Text' },\n                    { value: 'url', label: 'URL' },\n                    { value: 'choice', label: 'Choice' },\n                    { value: 'open-choice', label: 'Open Choice' },\n                    { value: 'attachment', label: 'Attachment' },\n                    { value: 'reference', label: 'Reference' },\n                    { value: 'quantity', label: 'Quantity' },\n                  ]}\n                />\n              )}\n            </>\n          ) : (\n            <div>{linkId}</div>\n          )}\n        </div>\n      )}\n      {!isResource && (\n        <Box className={classes.movementActions}>\n          <Box className={classes.columnAlignment}>\n            {!props.isFirst && (\n              <Anchor\n                href=\"#\"\n                onClick={(e: MouseEvent) => {\n                  e.preventDefault();\n                  if (props.onMoveUp) {\n                    props.onMoveUp();\n                  }\n                }}\n              >\n                <IconArrowUp data-testid=\"up-button\" size={15} className={classes.movementIcons} />\n              </Anchor>\n            )}\n            {!props.isLast && (\n              <Anchor\n                href=\"#\"\n                onClick={(e: MouseEvent) => {\n                  e.preventDefault();\n                  if (props.onMoveDown) {\n                    props.onMoveDown();\n                  }\n                }}\n              >\n                <IconArrowDown data-testid=\"down-button\" size={15} className={classes.movementIcons} />\n              </Anchor>\n            )}\n          </Box>\n        </Box>\n      )}\n      <div className={classes.bottomActions}>\n        {isContainer && (\n          <>\n            <Anchor\n              href=\"#\"\n              onClick={(e: MouseEvent) => {\n                e.preventDefault();\n                addItem({\n                  id: generateId(),\n                  linkId: generateLinkId('q'),\n                  type: 'string',\n                  text: 'Question',\n                } as QuestionnaireItem);\n              }}\n            >\n              Add item\n            </Anchor>\n            <Anchor\n              href=\"#\"\n              onClick={(e: MouseEvent) => {\n                e.preventDefault();\n                addItem(\n                  {\n                    id: generateId(),\n                    linkId: generateLinkId('g'),\n                    type: 'group',\n                    text: 'Group',\n                  } as QuestionnaireItem,\n                  true\n                );\n              }}\n            >\n              Add group\n            </Anchor>\n          </>\n        )}\n        {isResource && (\n          <Anchor\n            href=\"#\"\n            onClick={(e: MouseEvent) => {\n              e.preventDefault();\n              addItem(createPage(), true);\n            }}\n          >\n            Add Page\n          </Anchor>\n        )}\n        {editing && !isResource && (\n          <>\n            <Anchor\n              href=\"#\"\n              onClick={(e: MouseEvent) => {\n                e.preventDefault();\n                if (props.onRepeatable) {\n                  props.onRepeatable(item);\n                }\n              }}\n            >\n              {item.repeats ? 'Remove Repeatable' : 'Make Repeatable'}\n            </Anchor>\n            <Anchor\n              href=\"#\"\n              onClick={(e: MouseEvent) => {\n                e.preventDefault();\n                if (props.onRemove) {\n                  props.onRemove();\n                }\n              }}\n            >\n              Remove\n            </Anchor>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface AnswerBuilderProps {\n  readonly item: QuestionnaireItem;\n  readonly onChange: (item: QuestionnaireItem) => void;\n}\n\nfunction AnswerBuilder(props: AnswerBuilderProps): JSX.Element {\n  const property = getElementDefinition('QuestionnaireItemAnswerOption', 'value[x]');\n  const options = props.item.answerOption ?? [];\n  return (\n    <div>\n      {props.item.answerValueSet !== undefined ? (\n        <TextInput\n          placeholder=\"Enter Value Set\"\n          defaultValue={props.item.answerValueSet}\n          onChange={(e) => props.onChange({ ...props.item, answerValueSet: e.target.value })}\n        />\n      ) : (\n        <AnswerOptionsInput options={options} property={property} item={props.item} onChange={props.onChange} />\n      )}\n      <Box display=\"flex\">\n        <Anchor\n          href=\"#\"\n          onClick={(e: SyntheticEvent) => {\n            killEvent(e);\n            props.onChange({\n              ...props.item,\n              answerValueSet: undefined,\n              answerOption: [\n                ...options,\n                {\n                  id: generateId(),\n                },\n              ],\n            });\n          }}\n        >\n          Add choice\n        </Anchor>\n        <Space w=\"lg\" />\n        <Anchor\n          href=\"#\"\n          onClick={(e: SyntheticEvent) => {\n            killEvent(e);\n            props.onChange({\n              ...props.item,\n              answerOption: [],\n              answerValueSet: '',\n            });\n          }}\n        >\n          Add value set\n        </Anchor>\n      </Box>\n    </div>\n  );\n}\n\ninterface AnswerOptionsInputProps {\n  readonly options: QuestionnaireItemAnswerOption[];\n  readonly property: any;\n  readonly item: QuestionnaireItem;\n  readonly onChange: (item: QuestionnaireItem) => void;\n}\n\nfunction AnswerOptionsInput(props: AnswerOptionsInputProps): JSX.Element {\n  return (\n    <div>\n      {props.options.map((option: QuestionnaireItemAnswerOption) => {\n        const [propertyValue, propertyType] = getValueAndType(\n          { type: 'QuestionnaireItemAnswerOption', value: option },\n          'value'\n        );\n        return (\n          <div\n            key={option.id}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              width: '80%',\n            }}\n          >\n            <div>\n              <ResourcePropertyInput\n                key={option.id}\n                name=\"value[x]\"\n                path=\"Questionnaire.answerOption.value[x]\"\n                property={props.property}\n                defaultPropertyType={propertyType}\n                defaultValue={propertyValue}\n                onChange={(newValue: any, propName?: string) => {\n                  const newOptions = [...props.options];\n                  const index = newOptions.findIndex((o) => o.id === option.id);\n                  newOptions[index] = { id: option.id, [propName as string]: newValue };\n                  props.onChange({\n                    ...props.item,\n                    answerOption: newOptions,\n                  });\n                }}\n                outcome={undefined}\n              />\n            </div>\n\n            <div>\n              <Anchor\n                href=\"#\"\n                onClick={(e: SyntheticEvent) => {\n                  killEvent(e);\n                  props.onChange({\n                    ...props.item,\n                    answerOption: props.options.filter((o) => o.id !== option.id),\n                  });\n                }}\n              >\n                Remove\n              </Anchor>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\ninterface ReferenceTypeProps {\n  readonly item: QuestionnaireItem;\n  readonly onChange: (updatedItem: QuestionnaireItem) => void;\n}\n\nfunction ReferenceProfiles(props: ReferenceTypeProps): JSX.Element {\n  const targetTypes = getQuestionnaireItemReferenceTargetTypes(props.item) ?? [];\n  return (\n    <>\n      {targetTypes.map((targetType: ResourceType, index: number) => {\n        return (\n          <Group key={`${targetType}-${index}`}>\n            <ResourceTypeInput\n              name=\"resourceType\"\n              placeholder=\"Resource Type\"\n              defaultValue={targetType}\n              onChange={(newValue) => {\n                props.onChange(\n                  setQuestionnaireItemReferenceTargetTypes(\n                    props.item,\n                    targetTypes.map((t) => (t === targetType ? (newValue as ResourceType) : t))\n                  )\n                );\n              }}\n            />\n            <Anchor\n              href=\"#\"\n              onClick={(e: SyntheticEvent) => {\n                killEvent(e);\n                props.onChange(\n                  setQuestionnaireItemReferenceTargetTypes(\n                    props.item,\n                    targetTypes.filter((t) => t !== targetType)\n                  )\n                );\n              }}\n            >\n              Remove\n            </Anchor>\n          </Group>\n        );\n      })}\n      <Anchor\n        href=\"#\"\n        onClick={(e: SyntheticEvent) => {\n          killEvent(e);\n          props.onChange(setQuestionnaireItemReferenceTargetTypes(props.item, [...targetTypes, '' as ResourceType]));\n        }}\n      >\n        Add Resource Type\n      </Anchor>\n    </>\n  );\n}\n\nlet nextLinkId = 1;\nlet nextId = 1;\n\n/**\n * Generates a link ID for an item.\n * Link IDs are required properties on QuestionnaireItem objects.\n * @param prefix - The link ID prefix string.\n * @returns A unique link ID.\n */\nfunction generateLinkId(prefix: string): string {\n  return prefix + nextLinkId++;\n}\n\n/**\n * Generates a unique ID.\n * React needs unique IDs for components for rendering performance.\n * All of the important components in the questionnaire builder have id properties for this:\n * Questionnaire, QuestionnaireItem, and QuestionnaireItemAnswerOption.\n * @returns A unique key.\n */\nfunction generateId(): string {\n  return 'id-' + nextId++;\n}\n\nfunction ensureQuestionnaireKeys(questionnaire: Questionnaire): Questionnaire {\n  return {\n    ...questionnaire,\n    id: questionnaire.id || generateId(),\n    item: ensureQuestionnaireItemKeys(questionnaire.item),\n  } as Questionnaire;\n}\n\nfunction ensureQuestionnaireItemKeys(items: QuestionnaireItem[] | undefined): QuestionnaireItem[] | undefined {\n  if (!items) {\n    return undefined;\n  }\n  items.forEach((item) => {\n    if (item.id?.match(/^id-\\d+$/)) {\n      nextId = Math.max(nextId, parseInt(item.id.substring(3), 10) + 1);\n    }\n    if (item.linkId?.match(/^q\\d+$/)) {\n      nextLinkId = Math.max(nextLinkId, parseInt(item.linkId.substring(1), 10) + 1);\n    }\n  });\n  return items.map((item) => ({\n    ...item,\n    id: item.id || generateId(),\n    item: ensureQuestionnaireItemKeys(item.item),\n    answerOption: ensureQuestionnaireOptionKeys(item.answerOption),\n  }));\n}\n\nfunction ensureQuestionnaireOptionKeys(\n  options: QuestionnaireItemAnswerOption[] | undefined\n): QuestionnaireItemAnswerOption[] | undefined {\n  if (!options) {\n    return undefined;\n  }\n  return options.map((option) => ({\n    ...option,\n    id: option.id || generateId(),\n  }));\n}\n\nfunction createPage(): QuestionnaireItem {\n  return {\n    id: generateId(),\n    linkId: generateLinkId('s'),\n    type: 'group',\n    text: `New Page`,\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl',\n        valueCodeableConcept: {\n          coding: [\n            {\n              system: 'http://hl7.org/fhir/questionnaire-item-control',\n              code: 'page',\n            },\n          ],\n        },\n      } as Extension,\n    ],\n  } as QuestionnaireItem;\n}\n\nfunction reorderItems(items: QuestionnaireItem[] | undefined, itemIndex: number, delta: number): QuestionnaireItem[] {\n  const currentItems = items ?? [];\n  const newIndex = itemIndex + delta;\n  if (newIndex < 0 || newIndex >= currentItems.length) {\n    return currentItems;\n  }\n\n  const updatedItems = [...currentItems];\n  [updatedItems[itemIndex], updatedItems[newIndex]] = [updatedItems[newIndex], updatedItems[itemIndex]];\n\n  return updatedItems;\n}\n", "import { Checkbox, Group, MultiSelect, NativeSelect, Radio, Textarea, TextInput } from '@mantine/core';\nimport {\n  capitalize,\n  deepEquals,\n  formatCodeableConcept,\n  formatCoding,\n  getElementDefinition,\n  HTTP_HL7_ORG,\n  stringify,\n  TypedValue,\n} from '@medplum/core';\nimport {\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  QuestionnaireItemInitial,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n} from '@medplum/fhirtypes';\nimport { ChangeEvent, useContext } from 'react';\nimport { AttachmentInput } from '../../AttachmentInput/AttachmentInput';\nimport { CheckboxFormSection } from '../../CheckboxFormSection/CheckboxFormSection';\nimport { CodingInput } from '../../CodingInput/CodingInput';\nimport { DateTimeInput } from '../../DateTimeInput/DateTimeInput';\nimport { QuantityInput } from '../../QuantityInput/QuantityInput';\nimport { ReferenceInput } from '../../ReferenceInput/ReferenceInput';\nimport { ResourcePropertyDisplay } from '../../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport {\n  formatReferenceString,\n  getItemAnswerOptionValue,\n  getItemInitialValue,\n  getNewMultiSelectValues,\n  getQuestionnaireItemReferenceFilter,\n  getQuestionnaireItemReferenceTargetTypes,\n  QuestionnaireItemType,\n} from '../../utils/questionnaire';\nimport { QuestionnaireFormContext } from '../QuestionnaireForm.context';\n\nexport interface QuestionnaireFormItemProps {\n  readonly item: QuestionnaireItem;\n  readonly index: number;\n  readonly response: QuestionnaireResponseItem;\n  readonly onChange: (newResponseItem: QuestionnaireResponseItem) => void;\n}\n\nexport function QuestionnaireFormItem(props: QuestionnaireFormItemProps): JSX.Element | null {\n  const context = useContext(QuestionnaireFormContext);\n  const item = props.item;\n  const response = props.response;\n\n  function onChangeAnswer(\n    newResponseAnswer: QuestionnaireResponseItemAnswer | QuestionnaireResponseItemAnswer[]\n  ): void {\n    let updatedAnswers: QuestionnaireResponseItemAnswer[];\n    if (Array.isArray(newResponseAnswer)) {\n      // It's a multi-select case, so use the array directly.\n      updatedAnswers = newResponseAnswer;\n    } else if (props.index >= (props.response?.answer?.length ?? 0)) {\n      // if adding a new answer\n      updatedAnswers = (props.response?.answer ?? []).concat([newResponseAnswer]);\n    } else {\n      // if updating an existing answer\n      const newAnswers = (props.response?.answer ?? []).map((a, idx) =>\n        idx === props.index ? newResponseAnswer : a\n      ) as QuestionnaireResponseItemAnswer[];\n      updatedAnswers = newAnswers ?? [];\n    }\n    props.onChange({\n      id: response?.id,\n      linkId: response?.linkId,\n      text: item.text,\n      answer: updatedAnswers,\n    });\n  }\n\n  const type = item.type;\n  if (!type) {\n    return null;\n  }\n\n  const name = item.linkId;\n  if (!name) {\n    return null;\n  }\n\n  const initial = item.initial && item.initial.length > 0 ? item.initial[0] : undefined;\n  const defaultValue = getCurrentAnswer(response, props.index) ?? getItemInitialValue(initial);\n\n  switch (type) {\n    case QuestionnaireItemType.display:\n      return <p key={props.item.linkId}>{props.item.text}</p>;\n    case QuestionnaireItemType.boolean:\n      return (\n        <CheckboxFormSection key={props.item.linkId} title={props.item.text} htmlFor={props.item.linkId}>\n          <Checkbox\n            id={props.item.linkId}\n            name={props.item.linkId}\n            defaultChecked={defaultValue?.value}\n            onChange={(e) => onChangeAnswer({ valueBoolean: e.currentTarget.checked })}\n          />\n        </CheckboxFormSection>\n      );\n    case QuestionnaireItemType.decimal:\n      return (\n        <TextInput\n          type=\"number\"\n          step=\"any\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueDecimal: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.integer:\n      return (\n        <TextInput\n          type=\"number\"\n          step={1}\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueInteger: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.date:\n      return (\n        <TextInput\n          type=\"date\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueDate: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.dateTime:\n      return (\n        <DateTimeInput\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue: string) => onChangeAnswer({ valueDateTime: newValue })}\n        />\n      );\n    case QuestionnaireItemType.time:\n      return (\n        <TextInput\n          type=\"time\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueTime: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.string:\n    case QuestionnaireItemType.url:\n      return (\n        <TextInput\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.text:\n      return (\n        <Textarea\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.attachment:\n      return (\n        <Group py={4}>\n          <AttachmentInput\n            path=\"\"\n            name={name}\n            defaultValue={defaultValue?.value}\n            onChange={(newValue) => onChangeAnswer({ valueAttachment: newValue })}\n          />\n        </Group>\n      );\n    case QuestionnaireItemType.reference:\n      return (\n        <ReferenceInput\n          name={name}\n          required={item.required}\n          targetTypes={getQuestionnaireItemReferenceTargetTypes(item)}\n          searchCriteria={getQuestionnaireItemReferenceFilter(item, context.subject, context.encounter)}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue) => onChangeAnswer({ valueReference: newValue })}\n        />\n      );\n    case QuestionnaireItemType.quantity:\n      return (\n        <QuantityInput\n          path=\"\"\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue) => onChangeAnswer({ valueQuantity: newValue })}\n          disableWheel\n        />\n      );\n    case QuestionnaireItemType.choice:\n    case QuestionnaireItemType.openChoice:\n      if (isDropDownChoice(item) && !item.answerValueSet) {\n        return (\n          <QuestionnaireChoiceDropDownInput\n            name={name}\n            item={item}\n            initial={initial}\n            response={response}\n            onChangeAnswer={(e) => onChangeAnswer(e)}\n          />\n        );\n      } else if (isMultiSelectChoice(item) && !item.answerValueSet) {\n        return (\n          <QuestionnaireMultiSelectInput\n            name={name}\n            item={item}\n            initial={initial}\n            response={response}\n            onChangeAnswer={(e) => onChangeAnswer(e)}\n          />\n        );\n      } else {\n        return (\n          <QuestionnaireChoiceSetInput\n            name={name}\n            item={item}\n            initial={initial}\n            response={response}\n            onChangeAnswer={(e) => onChangeAnswer(e)}\n          />\n        );\n      }\n    default:\n      return null;\n  }\n}\n\ninterface QuestionnaireChoiceInputProps {\n  readonly name: string;\n  readonly item: QuestionnaireItem;\n  readonly initial: QuestionnaireItemInitial | undefined;\n  readonly response: QuestionnaireResponseItem;\n  readonly onChangeAnswer: (\n    newResponseAnswer: QuestionnaireResponseItemAnswer | QuestionnaireResponseItemAnswer[]\n  ) => void;\n}\n\nfunction QuestionnaireChoiceDropDownInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, response } = props;\n\n  if (!item.answerOption?.length) {\n    return <NoAnswerDisplay />;\n  }\n\n  const initialValue = getItemInitialValue(initial);\n\n  const data = [''];\n\n  for (const option of item.answerOption) {\n    const optionValue = getItemAnswerOptionValue(option);\n    data.push(typedValueToString(optionValue) as string);\n  }\n\n  const defaultValue = getCurrentAnswer(response) ?? initialValue;\n\n  if (item.repeats) {\n    const { propertyName, data } = formatSelectData(props.item);\n    const currentAnswer = getCurrentMultiSelectAnswer(response);\n\n    return (\n      <MultiSelect\n        data={data}\n        placeholder=\"Select items\"\n        searchable\n        defaultValue={currentAnswer || [typedValueToString(initialValue)]}\n        onChange={(selected) => {\n          const values = getNewMultiSelectValues(selected, propertyName, item);\n          props.onChangeAnswer(values);\n        }}\n      />\n    );\n  }\n\n  return (\n    <NativeSelect\n      id={name}\n      name={name}\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n        const index = e.currentTarget.selectedIndex;\n        if (index === 0) {\n          props.onChangeAnswer({});\n          return;\n        }\n        const option = (item.answerOption as QuestionnaireItemAnswerOption[])[index - 1];\n        const optionValue = getItemAnswerOptionValue(option);\n        const propertyName = 'value' + capitalize(optionValue.type);\n        props.onChangeAnswer({ [propertyName]: optionValue.value });\n      }}\n      defaultValue={formatCoding(defaultValue?.value) || defaultValue?.value}\n      data={data}\n    />\n  );\n}\n\nfunction QuestionnaireMultiSelectInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { item, initial, response } = props;\n\n  if (!item.answerOption?.length) {\n    return <NoAnswerDisplay />;\n  }\n\n  const initialValue = getItemInitialValue(initial);\n  const { propertyName, data } = formatSelectData(props.item);\n  const currentAnswer = getCurrentMultiSelectAnswer(response);\n\n  return (\n    <MultiSelect\n      data={data}\n      placeholder=\"Select items\"\n      searchable\n      defaultValue={currentAnswer || [typedValueToString(initialValue)]}\n      onChange={(selected) => {\n        const values = getNewMultiSelectValues(selected, propertyName, item);\n        props.onChangeAnswer(values);\n      }}\n    />\n  );\n}\n\nfunction QuestionnaireChoiceSetInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, onChangeAnswer, response } = props;\n\n  if (!item.answerOption?.length && !item.answerValueSet) {\n    return <NoAnswerDisplay />;\n  }\n\n  if (item.answerValueSet) {\n    return (\n      <CodingInput\n        path=\"\"\n        name={name}\n        binding={item.answerValueSet}\n        onChange={(code) => onChangeAnswer({ valueCoding: code })}\n        creatable={item.type === QuestionnaireItemType.openChoice}\n      />\n    );\n  }\n  return (\n    <QuestionnaireChoiceRadioInput\n      name={response?.id ?? name}\n      item={item}\n      initial={initial}\n      response={response}\n      onChangeAnswer={onChangeAnswer}\n    />\n  );\n}\n\nfunction QuestionnaireChoiceRadioInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, onChangeAnswer, response } = props;\n  const valueElementDefinition = getElementDefinition('QuestionnaireItemAnswerOption', 'value[x]');\n  const initialValue = getItemInitialValue(initial);\n\n  const options: [string, TypedValue][] = [];\n  let defaultValue = undefined;\n  if (item.answerOption) {\n    for (let i = 0; i < item.answerOption.length; i++) {\n      const option = item.answerOption[i];\n      const optionName = `${name}-option-${i}`;\n      const optionValue = getItemAnswerOptionValue(option);\n\n      if (!optionValue?.value) {\n        continue;\n      }\n\n      if (initialValue && stringify(optionValue) === stringify(initialValue)) {\n        defaultValue = optionName;\n      }\n      options.push([optionName, optionValue]);\n    }\n  }\n\n  const defaultAnswer = getCurrentAnswer(response);\n  const answerLinkId = getCurrentRadioAnswer(options, defaultAnswer);\n\n  return (\n    <Radio.Group\n      name={name}\n      value={answerLinkId ?? defaultValue}\n      onChange={(newValue) => {\n        const option = options.find((option) => option[0] === newValue);\n        if (option) {\n          const optionValue = option[1];\n          const propertyName = 'value' + capitalize(optionValue.type);\n          onChangeAnswer({ [propertyName]: optionValue.value });\n        }\n      }}\n    >\n      {options.map(([optionName, optionValue]) => (\n        <Radio\n          key={optionName}\n          id={optionName}\n          value={optionName}\n          py={4}\n          label={\n            <ResourcePropertyDisplay\n              property={valueElementDefinition}\n              propertyType={optionValue.type}\n              value={optionValue.value}\n            />\n          }\n        />\n      ))}\n    </Radio.Group>\n  );\n}\n\nfunction NoAnswerDisplay(): JSX.Element {\n  return <TextInput disabled placeholder=\"No Answers Defined\" />;\n}\n\nfunction getCurrentAnswer(response: QuestionnaireResponseItem, index: number = 0): TypedValue {\n  const results = response.answer;\n  return getItemAnswerOptionValue(results?.[index] ?? {});\n}\n\nfunction getCurrentMultiSelectAnswer(response: QuestionnaireResponseItem): string[] {\n  const results = response.answer;\n  if (!results) {\n    return [];\n  }\n  const typedValues = results.map((a) => getItemAnswerOptionValue(a));\n  return typedValues.map((type) => formatCoding(type?.value) || type?.value);\n}\n\nfunction getCurrentRadioAnswer(options: [string, TypedValue][], defaultAnswer: TypedValue): string | undefined {\n  return options.find((option) => deepEquals(option[1].value, defaultAnswer?.value))?.[0];\n}\n\nfunction typedValueToString(typedValue: TypedValue | undefined): string | undefined {\n  if (!typedValue) {\n    return undefined;\n  }\n  if (typedValue.type === 'CodeableConcept') {\n    return formatCodeableConcept(typedValue.value);\n  }\n  if (typedValue.type === 'Coding') {\n    return formatCoding(typedValue.value);\n  }\n  if (typedValue.type === 'Reference') {\n    return formatReferenceString(typedValue);\n  }\n  return typedValue.value.toString();\n}\n\nfunction isDropDownChoice(item: QuestionnaireItem): boolean {\n  return !!item.extension?.some(\n    (e) =>\n      e.url === 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl' &&\n      e.valueCodeableConcept?.coding?.[0]?.code === 'drop-down'\n  );\n}\n\nfunction isMultiSelectChoice(item: QuestionnaireItem): boolean {\n  return !!item.extension?.some(\n    (e) =>\n      e.url === HTTP_HL7_ORG + '/fhir/StructureDefinition/questionnaire-itemControl' &&\n      e.valueCodeableConcept?.coding?.[0]?.code === 'multi-select'\n  );\n}\n\ninterface MultiSelect {\n  readonly value: any;\n  readonly label: any;\n}\n\ninterface FormattedData {\n  readonly propertyName: string;\n  readonly data: MultiSelect[];\n}\n\nfunction formatSelectData(item: QuestionnaireItem): FormattedData {\n  if (item.answerOption?.length === 0) {\n    return { propertyName: '', data: [] };\n  }\n  const option = (item.answerOption as QuestionnaireItemAnswerOption[])[0];\n  const optionValue = getItemAnswerOptionValue(option);\n  const propertyName = 'value' + capitalize(optionValue.type);\n\n  const data = (item.answerOption ?? []).map((a) => ({\n    value: getValueAndLabel(a, propertyName),\n    label: getValueAndLabel(a, propertyName),\n  }));\n  return { propertyName, data };\n}\n\nfunction getValueAndLabel(option: QuestionnaireItemAnswerOption, propertyName: string): string | undefined {\n  return formatCoding(option.valueCoding) || option[propertyName as keyof QuestionnaireItemAnswerOption]?.toString();\n}\n", "import {\n  HTTP_HL7_ORG,\n  TypedValue,\n  deepClone,\n  evalFhirPathTyped,\n  formatCoding,\n  getExtension,\n  getReferenceString,\n  getTypedPropertyValueWithoutSchema,\n  splitN,\n  stringify,\n  toJsBoolean,\n  toTypedValue,\n} from '@medplum/core';\nimport {\n  Encounter,\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  QuestionnaireItemEnableWhen,\n  QuestionnaireItemInitial,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n  Reference,\n  ResourceType,\n} from '@medplum/fhirtypes';\n\nexport enum QuestionnaireItemType {\n  group = 'group',\n  display = 'display',\n  question = 'question',\n  boolean = 'boolean',\n  decimal = 'decimal',\n  integer = 'integer',\n  date = 'date',\n  dateTime = 'dateTime',\n  time = 'time',\n  string = 'string',\n  text = 'text',\n  url = 'url',\n  choice = 'choice',\n  openChoice = 'open-choice',\n  attachment = 'attachment',\n  reference = 'reference',\n  quantity = 'quantity',\n}\n\nexport function isChoiceQuestion(item: QuestionnaireItem): boolean {\n  return item.type === 'choice' || item.type === 'open-choice';\n}\n\nexport function isQuestionEnabled(\n  item: QuestionnaireItem,\n  questionnaireResponse: QuestionnaireResponse | undefined\n): boolean {\n  const extension = getExtension(\n    item,\n    HTTP_HL7_ORG + '/fhir/uv/sdc/StructureDefinition/sdc-questionnaire-enableWhenExpression'\n  );\n  if (questionnaireResponse && extension) {\n    const expression = extension.valueExpression?.expression;\n    if (expression) {\n      const value = toTypedValue(questionnaireResponse);\n      const result = evalFhirPathTyped(expression, [value], { '%resource': value });\n      return toJsBoolean(result);\n    }\n  }\n\n  if (!item.enableWhen) {\n    return true;\n  }\n\n  const enableBehavior = item.enableBehavior ?? 'any';\n  for (const enableWhen of item.enableWhen) {\n    const actualAnswers = getByLinkId(questionnaireResponse?.item, enableWhen.question as string);\n\n    if (enableWhen.operator === 'exists' && !enableWhen.answerBoolean && !actualAnswers?.length) {\n      if (enableBehavior === 'any') {\n        return true;\n      } else {\n        continue;\n      }\n    }\n    const { anyMatch, allMatch } = checkAnswers(enableWhen, actualAnswers, enableBehavior);\n\n    if (enableBehavior === 'any' && anyMatch) {\n      return true;\n    }\n    if (enableBehavior === 'all' && !allMatch) {\n      return false;\n    }\n  }\n\n  return enableBehavior !== 'any';\n}\n\nexport function getNewMultiSelectValues(\n  selected: string[],\n  propertyName: string,\n  item: QuestionnaireItem\n): QuestionnaireResponseItemAnswer[] {\n  return selected.map((o) => {\n    const option = item.answerOption?.find(\n      (option) =>\n        formatCoding(option.valueCoding) === o || option[propertyName as keyof QuestionnaireItemAnswerOption] === o\n    );\n    const optionValue = getItemAnswerOptionValue(option ?? {});\n    return { [propertyName]: optionValue?.value };\n  });\n}\n\nfunction getByLinkId(\n  responseItems: QuestionnaireResponseItem[] | undefined,\n  linkId: string\n): QuestionnaireResponseItemAnswer[] | undefined {\n  if (!responseItems) {\n    return undefined;\n  }\n\n  for (const response of responseItems) {\n    if (response.linkId === linkId) {\n      return response.answer;\n    }\n    if (response.item) {\n      const nestedAnswer = getByLinkId(response.item, linkId);\n      if (nestedAnswer) {\n        return nestedAnswer;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction evaluateMatch(actualAnswer: TypedValue | undefined, expectedAnswer: TypedValue, operator?: string): boolean {\n  // We handle exists separately since its so different in terms of comparisons than the other mathematical operators\n  if (operator === 'exists') {\n    // if actualAnswer is not undefined, then exists: true passes\n    // if actualAnswer is undefined, then exists: false passes\n    return !!actualAnswer === expectedAnswer.value;\n  } else if (!actualAnswer) {\n    return false;\n  } else {\n    // `=` and `!=` should be treated as the FHIRPath `~` and `!~`\n    // All other operators should be unmodified\n    const fhirPathOperator = operator === '=' || operator === '!=' ? operator?.replace('=', '~') : operator;\n    const [{ value }] = evalFhirPathTyped(`%actualAnswer ${fhirPathOperator} %expectedAnswer`, [actualAnswer], {\n      '%actualAnswer': actualAnswer,\n      '%expectedAnswer': expectedAnswer,\n    });\n    return value;\n  }\n}\n\nfunction checkAnswers(\n  enableWhen: QuestionnaireItemEnableWhen,\n  answers: QuestionnaireResponseItemAnswer[] | undefined,\n  enableBehavior: 'any' | 'all'\n): { anyMatch: boolean; allMatch: boolean } {\n  const actualAnswers = answers || [];\n  const expectedAnswer = getItemEnableWhenValueAnswer(enableWhen);\n\n  let anyMatch = false;\n  let allMatch = true;\n\n  for (const actualAnswerValue of actualAnswers) {\n    const actualAnswer = getResponseItemAnswerValue(actualAnswerValue);\n    const { operator } = enableWhen;\n    const match = evaluateMatch(actualAnswer, expectedAnswer, operator);\n    if (match) {\n      anyMatch = true;\n    } else {\n      allMatch = false;\n    }\n\n    if (enableBehavior === 'any' && anyMatch) {\n      break;\n    }\n  }\n\n  return { anyMatch, allMatch };\n}\n\nexport function getQuestionnaireItemReferenceTargetTypes(item: QuestionnaireItem): ResourceType[] | undefined {\n  const extension = getExtension(item, 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource');\n  if (!extension) {\n    return undefined;\n  }\n  if (extension.valueCode !== undefined) {\n    return [extension.valueCode] as ResourceType[];\n  }\n  if (extension.valueCodeableConcept) {\n    return extension.valueCodeableConcept?.coding?.map((c) => c.code) as ResourceType[];\n  }\n  return undefined;\n}\n\nexport function setQuestionnaireItemReferenceTargetTypes(\n  item: QuestionnaireItem,\n  targetTypes: ResourceType[] | undefined\n): QuestionnaireItem {\n  const result = deepClone(item);\n  let extension = getExtension(result, 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource');\n\n  if (!targetTypes || targetTypes.length === 0) {\n    if (extension) {\n      result.extension = result.extension?.filter((e) => e !== extension);\n    }\n    return result;\n  }\n\n  if (!extension) {\n    if (!result.extension) {\n      result.extension = [];\n    }\n    extension = { url: 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource' };\n    result.extension.push(extension);\n  }\n\n  if (targetTypes.length === 1) {\n    extension.valueCode = targetTypes[0];\n    delete extension.valueCodeableConcept;\n  } else {\n    extension.valueCodeableConcept = { coding: targetTypes.map((t) => ({ code: t })) };\n    delete extension.valueCode;\n  }\n\n  return result;\n}\n\n/**\n * Returns the reference filter for the given questionnaire item.\n * @see https://build.fhir.org/ig/HL7/fhir-extensions//StructureDefinition-questionnaire-referenceFilter-definitions.html\n * @param item - The questionnaire item to get the reference filter for.\n * @param subject - Optional subject reference.\n * @param encounter - Optional encounter reference.\n * @returns The reference filter as a map of key/value pairs.\n */\nexport function getQuestionnaireItemReferenceFilter(\n  item: QuestionnaireItem,\n  subject: Reference | undefined,\n  encounter: Reference<Encounter> | undefined\n): Record<string, string> | undefined {\n  const extension = getExtension(item, 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceFilter');\n  if (!extension?.valueString) {\n    return undefined;\n  }\n\n  // Replace variables\n  let filter = extension.valueString;\n  if (subject?.reference) {\n    filter = filter.replaceAll('$subj', subject.reference);\n  }\n  if (encounter?.reference) {\n    filter = filter.replaceAll('$encounter', encounter.reference);\n  }\n\n  // Parse the valueString into a map\n  const result: Record<string, string> = {};\n  const parts = filter.split('&');\n  for (const part of parts) {\n    const [key, value] = splitN(part, '=', 2);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport function buildInitialResponse(questionnaire: Questionnaire): QuestionnaireResponse {\n  const response: QuestionnaireResponse = {\n    resourceType: 'QuestionnaireResponse',\n    questionnaire: getReferenceString(questionnaire),\n    item: buildInitialResponseItems(questionnaire.item),\n    status: 'in-progress',\n  };\n\n  return response;\n}\n\nfunction buildInitialResponseItems(items: QuestionnaireItem[] | undefined): QuestionnaireResponseItem[] {\n  return items?.map(buildInitialResponseItem) ?? [];\n}\n\nexport function buildInitialResponseItem(item: QuestionnaireItem): QuestionnaireResponseItem {\n  return {\n    id: generateId(),\n    linkId: item.linkId,\n    text: item.text,\n    item: buildInitialResponseItems(item.item),\n    answer: item.initial?.map(buildInitialResponseAnswer) ?? [],\n  };\n}\n\nlet nextId = 1;\nfunction generateId(): string {\n  return 'id-' + nextId++;\n}\n\nfunction buildInitialResponseAnswer(answer: QuestionnaireItemInitial): QuestionnaireResponseItemAnswer {\n  // This works because QuestionnaireItemInitial and QuestionnaireResponseItemAnswer\n  // have the same properties.\n  return { ...answer };\n}\n\nexport function formatReferenceString(typedValue: TypedValue): string {\n  return typedValue.value.display || typedValue.value.reference || stringify(typedValue.value);\n}\n\n/**\n * Returns the number of pages in the questionnaire.\n *\n * By default, a questionnaire is represented as a simple single page questionnaire,\n * so the default return value is 1.\n *\n * If the questionnaire has a page extension on the first item, then the number of pages\n * is the number of top level items in the questionnaire.\n *\n * @param questionnaire - The questionnaire to get the number of pages for.\n * @returns The number of pages in the questionnaire. Default is 1.\n */\nexport function getNumberOfPages(questionnaire: Questionnaire): number {\n  const firstItem = questionnaire?.item?.[0];\n  if (firstItem) {\n    const extension = getExtension(firstItem, 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl');\n    if (extension?.valueCodeableConcept?.coding?.[0]?.code === 'page') {\n      return (questionnaire.item as QuestionnaireItem[]).length;\n    }\n  }\n  return 1;\n}\n\nexport function getItemInitialValue(initial: QuestionnaireItemInitial | undefined): TypedValue {\n  return getTypedPropertyValueWithoutSchema(\n    { type: 'QuestionnaireItemInitial', value: initial },\n    'value'\n  ) as TypedValue;\n}\n\nexport function getItemAnswerOptionValue(option: QuestionnaireItemAnswerOption): TypedValue {\n  return getTypedPropertyValueWithoutSchema(\n    { type: 'QuestionnaireItemAnswerOption', value: option },\n    'value'\n  ) as TypedValue;\n}\n\nexport function getItemEnableWhenValueAnswer(enableWhen: QuestionnaireItemEnableWhen): TypedValue {\n  return getTypedPropertyValueWithoutSchema(\n    { type: 'QuestionnaireItemEnableWhen', value: enableWhen },\n    'answer'\n  ) as TypedValue;\n}\n\nexport function getResponseItemAnswerValue(answer: QuestionnaireResponseItemAnswer): TypedValue | undefined {\n  return getTypedPropertyValueWithoutSchema({ type: 'QuestionnaireResponseItemAnswer', value: answer }, 'value') as\n    | TypedValue\n    | undefined;\n}\n", "import { Encounter, Reference } from '@medplum/fhirtypes';\nimport { createContext } from 'react';\n\nexport const QuestionnaireFormContext = createContext<{ subject?: Reference; encounter?: Reference<Encounter> }>({});\n", ".section {\n  position: relative;\n  margin: 4px 4px 8px;\n  padding: 6px 12px 16px 6px;\n  border: 1.5px solid var(--mantine-color-gray-1);\n  border-radius: var(--mantine-radius-sm);\n  transition: all 0.1;\n}\n\n.hovering {\n  border: 1.5px solid var(--mantine-color-blue-5);\n}\n\n.editing {\n  border: 1.5px solid var(--mantine-color-gray-1);\n  border-left: 4px solid var(--mantine-color-blue-5);\n  min-height: 100px;\n}\n\n.questionBody {\n  max-width: 600px;\n}\n\n.topActions {\n  position: absolute;\n  right: 32px;\n  top: 1px;\n  padding: 4px;\n  color: var(--mantine-color-gray-5);\n  font-size: var(--mantine-font-size-xs);\n}\n\n.bottomActions {\n  position: absolute;\n  right: 4px;\n  bottom: 0;\n  --text-fz: var(--mantine-font-size-xs);\n\n  & a {\n    margin-left: 8px;\n  }\n}\n\n.movementActions {\n  position: absolute;\n  right: 8px;\n  top: 0;\n  padding-top: 8px;\n  font-size: var(--mantine-font-size-xs);\n\n  & a {\n    margin-left: 8px;\n  }\n}\n\n.movementIcons {\n  color: var(--mantine-color-gray-5);\n}\n\n.columnAlignment {\n  display: flex;\n  flex-direction: column;\n}\n\n.linkIdInput {\n  width: 100px;\n  margin-bottom: 4px;\n}\n\n.typeSelect {\n  width: 100px;\n}\n\n.preserveBreaks {\n  white-space: pre-wrap;\n}", "import { Title } from '@mantine/core';\nimport { createReference, getReferenceString } from '@medplum/core';\nimport {\n  Encounter,\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  Reference,\n} from '@medplum/fhirtypes';\nimport { useMedplum, usePrevious, useResource } from '@medplum/react-hooks';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { buildInitialResponse, getNumberOfPages, isQuestionEnabled } from '../utils/questionnaire';\nimport { QuestionnaireFormContext } from './QuestionnaireForm.context';\nimport { QuestionnairePageSequence } from './QuestionnaireFormComponents/QuestionnaireFormPageSequence';\n\nexport interface QuestionnaireFormProps {\n  readonly questionnaire: Questionnaire | Reference<Questionnaire>;\n  readonly subject?: Reference;\n  readonly encounter?: Reference<Encounter>;\n  readonly source?: QuestionnaireResponse['source'];\n  readonly disablePagination?: boolean;\n  readonly excludeButtons?: boolean;\n  readonly submitButtonText?: string;\n  readonly onChange?: (response: QuestionnaireResponse) => void;\n  readonly onSubmit?: (response: QuestionnaireResponse) => void;\n}\n\nexport function QuestionnaireForm(props: QuestionnaireFormProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const { subject, source: sourceFromProps } = props;\n  const questionnaire = useResource(props.questionnaire);\n  const prevQuestionnaire = usePrevious(questionnaire);\n  const [response, setResponse] = useState<QuestionnaireResponse | undefined>();\n  const [activePage, setActivePage] = useState(0);\n\n  const onChangeRef = useRef(props.onChange);\n  onChangeRef.current = props.onChange;\n\n  const onSubmitRef = useRef(props.onSubmit);\n  onSubmitRef.current = props.onSubmit;\n\n  useEffect(() => {\n    // If the Questionnaire remains \"the same\", keep the existing response\n    if (questionnaire && getQuestionnaireIdentity(prevQuestionnaire) === getQuestionnaireIdentity(questionnaire)) {\n      return;\n    }\n\n    // throw out the existing response and start over\n    setResponse(questionnaire ? buildInitialResponse(questionnaire) : undefined);\n  }, [questionnaire, prevQuestionnaire]);\n\n  useEffect(() => {\n    if (response && onChangeRef.current) {\n      try {\n        onChangeRef.current(response);\n      } catch (e) {\n        console.error('Error invoking QuestionnaireForm.onChange callback', e);\n      }\n    }\n  }, [response]);\n\n  const setItems = useCallback((newResponseItems: QuestionnaireResponseItem | QuestionnaireResponseItem[]): void => {\n    setResponse((prevResponse) => {\n      const currentItems = prevResponse?.item ?? [];\n      const mergedItems = mergeItems(\n        currentItems,\n        Array.isArray(newResponseItems) ? newResponseItems : [newResponseItems]\n      );\n\n      const newResponse: QuestionnaireResponse = {\n        resourceType: 'QuestionnaireResponse',\n        status: 'in-progress',\n        item: mergedItems,\n      };\n      return newResponse;\n    });\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    const onSubmit = onSubmitRef.current;\n    if (onSubmit && response) {\n      let source = sourceFromProps;\n      if (!source) {\n        const profile = medplum.getProfile();\n        if (profile) {\n          source = createReference(profile);\n        }\n      }\n      onSubmit({\n        ...response,\n        questionnaire: getReferenceString(questionnaire as Questionnaire),\n        subject,\n        source,\n        authored: new Date().toISOString(),\n        status: 'completed',\n      });\n    }\n  }, [medplum, questionnaire, response, subject, sourceFromProps]);\n\n  function checkForQuestionEnabled(item: QuestionnaireItem): boolean {\n    return isQuestionEnabled(item, response);\n  }\n\n  if (!questionnaire || !response) {\n    return null;\n  }\n\n  const numberOfPages = getNumberOfPages(questionnaire);\n  const nextStep = (): void => setActivePage((current) => current + 1);\n  const prevStep = (): void => setActivePage((current) => current - 1);\n\n  return (\n    <QuestionnaireFormContext.Provider value={{ subject: props.subject, encounter: props.encounter }}>\n      <Form testid=\"questionnaire-form\" onSubmit={handleSubmit}>\n        {questionnaire.title && <Title>{questionnaire.title}</Title>}\n        <QuestionnairePageSequence\n          items={questionnaire.item ?? []}\n          response={response}\n          onChange={setItems}\n          renderPages={!props.disablePagination && numberOfPages > 1}\n          activePage={activePage}\n          numberOfPages={numberOfPages}\n          excludeButtons={props.excludeButtons}\n          submitButtonText={props.submitButtonText}\n          checkForQuestionEnabled={checkForQuestionEnabled}\n          nextStep={nextStep}\n          prevStep={prevStep}\n        />\n      </Form>\n    </QuestionnaireFormContext.Provider>\n  );\n}\n\nfunction mergeIndividualItems(\n  prevItem: QuestionnaireResponseItem,\n  newItem: QuestionnaireResponseItem\n): QuestionnaireResponseItem {\n  // Recursively merge the nested items based on their ids.\n  const mergedNestedItems = mergeItems(prevItem.item ?? [], newItem.item ?? []);\n\n  return {\n    ...newItem,\n    item: mergedNestedItems.length > 0 ? mergedNestedItems : undefined,\n    answer: newItem.answer && newItem.answer.length > 0 ? newItem.answer : prevItem.answer,\n  };\n}\n\nfunction mergeItems(\n  prevItems: QuestionnaireResponseItem[],\n  newItems: QuestionnaireResponseItem[]\n): QuestionnaireResponseItem[] {\n  const result: QuestionnaireResponseItem[] = [];\n  const usedIds = new Set<string>();\n\n  for (const prevItem of prevItems) {\n    const itemId = prevItem.id;\n    const newItem = newItems.find((item) => item.id === itemId);\n\n    if (newItem) {\n      result.push(mergeIndividualItems(prevItem, newItem));\n      usedIds.add(newItem.id as string);\n    } else {\n      result.push(prevItem);\n    }\n  }\n\n  // Add items from newItems that were not in prevItems.\n  for (const newItem of newItems) {\n    if (!usedIds.has(newItem.id as string)) {\n      result.push(newItem);\n    }\n  }\n\n  return result;\n}\n\nfunction getQuestionnaireIdentity(questionnaire: Questionnaire | undefined): Questionnaire | string | undefined {\n  return questionnaire?.id || questionnaire;\n}\n", "import { Button, Group, Stack, Stepper } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponse, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport { QuestionnaireItemType } from '../../utils/questionnaire';\nimport { QuestionnaireRepeatableItem } from '../QuestionnaireFormItem/QuestionnaireRepeatableItem';\nimport { QuestionnaireRepeatedGroup } from './QuestionnaireFormGroup';\n\ninterface QuestionnairePageSequenceProps {\n  readonly items: QuestionnaireItem[];\n  readonly response?: QuestionnaireResponse;\n  readonly renderPages: boolean;\n  readonly activePage?: number;\n  readonly numberOfPages: number;\n  readonly excludeButtons?: boolean;\n  readonly submitButtonText?: string;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (items: QuestionnaireResponseItem | QuestionnaireResponseItem[]) => void;\n  readonly nextStep: () => void;\n  readonly prevStep: () => void;\n}\n\nexport function QuestionnairePageSequence(props: QuestionnairePageSequenceProps): JSX.Element {\n  const {\n    items,\n    response,\n    activePage,\n    onChange,\n    nextStep,\n    prevStep,\n    numberOfPages,\n    renderPages,\n    submitButtonText,\n    excludeButtons,\n    checkForQuestionEnabled,\n  } = props;\n\n  const form = items.map((item) => {\n    const itemResponse = response?.item?.filter((i) => i.linkId === item.linkId) ?? [];\n\n    const repeatedItem =\n      item.type === QuestionnaireItemType.group ? (\n        <QuestionnaireRepeatedGroup\n          key={item.linkId}\n          item={item}\n          response={itemResponse}\n          onChange={onChange}\n          checkForQuestionEnabled={checkForQuestionEnabled}\n        />\n      ) : (\n        <QuestionnaireRepeatableItem\n          key={item.linkId}\n          item={item}\n          response={itemResponse?.[0]}\n          onChange={onChange}\n          checkForQuestionEnabled={checkForQuestionEnabled}\n        />\n      );\n\n    if (renderPages) {\n      return (\n        <Stepper.Step key={item.linkId} label={item.text}>\n          {repeatedItem}\n        </Stepper.Step>\n      );\n    }\n    return repeatedItem;\n  });\n\n  return (\n    <>\n      {renderPages && (\n        <Stepper active={activePage ?? 0} allowNextStepsSelect={false} p={6}>\n          {form}\n        </Stepper>\n      )}\n      {!renderPages && <Stack>{form}</Stack>}\n      {!excludeButtons && (\n        <ButtonGroup\n          activePage={activePage ?? 0}\n          numberOfPages={numberOfPages}\n          nextStep={renderPages ? nextStep : undefined}\n          prevStep={renderPages ? prevStep : undefined}\n          renderPages={renderPages}\n          submitButtonText={submitButtonText}\n        />\n      )}\n    </>\n  );\n}\n\ninterface ButtonGroupProps {\n  readonly activePage: number;\n  readonly numberOfPages: number;\n  readonly renderPages: boolean;\n  readonly submitButtonText?: string;\n  readonly nextStep?: () => void;\n  readonly prevStep?: () => void;\n}\n\nfunction ButtonGroup(props: ButtonGroupProps): JSX.Element {\n  const showBackButton = props.renderPages && props.activePage > 0;\n  const showNextButton = props.renderPages && props.activePage < props.numberOfPages - 1;\n  const showSubmitButton = !props.renderPages || props.activePage === props.numberOfPages - 1;\n\n  return (\n    <Group justify=\"flex-end\" mt=\"xl\" gap=\"xs\">\n      {showBackButton && <Button onClick={props.prevStep}>Back</Button>}\n      {showNextButton && (\n        <Button\n          onClick={(e) => {\n            const form = e.currentTarget.closest('form') as HTMLFormElement;\n            if (props.nextStep && form.reportValidity()) {\n              props.nextStep();\n            }\n          }}\n        >\n          Next\n        </Button>\n      )}\n      {showSubmitButton && <Button type=\"submit\">{props.submitButtonText ?? 'Submit'}</Button>}\n    </Group>\n  );\n}\n", "import { Anchor } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { FormSection } from '../../FormSection/FormSection';\nimport { QuestionnaireItemType } from '../../utils/questionnaire';\nimport { QuestionnaireFormItem } from './QuestionnaireFormItem';\n\ninterface QuestionnaireRepeatableItemProps {\n  readonly item: QuestionnaireItem;\n  readonly response?: QuestionnaireResponseItem;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (items: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireRepeatableItem(props: QuestionnaireRepeatableItemProps): JSX.Element | null {\n  const { item, response, onChange } = props;\n  const [number, setNumber] = useState(getNumberOfRepeats(item, response ?? { linkId: item.linkId }));\n  if (!props.checkForQuestionEnabled(item)) {\n    return null;\n  }\n\n  if (!response) {\n    return null;\n  }\n\n  if (item.type === QuestionnaireItemType.display) {\n    return <p key={item.linkId}>{item.text}</p>;\n  }\n\n  const showAddButton =\n    item?.repeats && item.type !== QuestionnaireItemType.choice && item.type !== QuestionnaireItemType.openChoice;\n\n  // Styling reason to avoid duplicate text\n  if (item.type === QuestionnaireItemType.boolean) {\n    return (\n      <QuestionnaireFormItem\n        key={item.linkId}\n        item={item}\n        response={response}\n        onChange={(r) => onChange([r])}\n        index={0}\n      />\n    );\n  }\n\n  return (\n    <FormSection\n      key={props.item.linkId}\n      htmlFor={props.item.linkId}\n      title={props.item.text}\n      withAsterisk={props.item.required}\n    >\n      {[...Array(number)].map((_, index) => (\n        <QuestionnaireFormItem\n          key={`${item.linkId}-${index}`}\n          item={item}\n          response={response}\n          onChange={(r) => onChange([r])}\n          index={index}\n        />\n      ))}\n      {showAddButton && <Anchor onClick={() => setNumber((n) => n + 1)}>Add Item</Anchor>}\n    </FormSection>\n  );\n}\n\nfunction getNumberOfRepeats(item: QuestionnaireItem, response: QuestionnaireResponseItem): number {\n  if (item.type === QuestionnaireItemType.choice || item.type === QuestionnaireItemType.openChoice) {\n    return 1;\n  }\n  const answers = response.answer;\n  return answers?.length ? answers.length : 1;\n}\n", "import { Anchor, Stack, Title } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport { useState } from 'react';\nimport { QuestionnaireItemType, buildInitialResponseItem } from '../../utils/questionnaire';\nimport { QuestionnaireRepeatableItem } from '../QuestionnaireFormItem/QuestionnaireRepeatableItem';\n\ninterface QuestionnaireRepeatableGroupProps {\n  readonly item: QuestionnaireItem;\n  readonly response: QuestionnaireResponseItem[];\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (responses: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireRepeatedGroup(props: QuestionnaireRepeatableGroupProps): JSX.Element | null {\n  const [responses, setResponses] = useState(props.response);\n\n  if (responses.length === 0) {\n    return null;\n  }\n\n  function handleRepeatableGroup(newResponseItems: QuestionnaireResponseItem[], index: number): void {\n    const newResponses = responses.map((responses, idx) => (idx === index ? newResponseItems[0] : responses));\n    setResponses(newResponses);\n    props.onChange(newResponses);\n  }\n\n  function insertNewGroup(): void {\n    const newResponse = buildInitialResponseItem(props.item);\n    setResponses([...responses, newResponse]);\n  }\n\n  return (\n    <>\n      {responses.map((response, idx) => (\n        <QuestionnaireGroup\n          key={response.id}\n          item={props.item}\n          response={response}\n          checkForQuestionEnabled={props.checkForQuestionEnabled}\n          onChange={(r) => handleRepeatableGroup(r, idx)}\n        />\n      ))}\n      {props.item.repeats && <Anchor onClick={insertNewGroup}>{`Add Group: ${props.item.text}`}</Anchor>}\n    </>\n  );\n}\n\ninterface QuestionnaireGroupProps {\n  readonly item: QuestionnaireItem;\n  readonly response: QuestionnaireResponseItem;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (response: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireGroup(props: QuestionnaireGroupProps): JSX.Element | null {\n  const { response, checkForQuestionEnabled, onChange } = props;\n  function onSetGroup(newResponseItem: QuestionnaireResponseItem[]): void {\n    const newResponse = response.item?.map((current) => {\n      const matchingItem = newResponseItem.find((newResponse) => newResponse.id === current.id);\n      return matchingItem ?? current;\n    });\n    // This checks to see if there were any nested repeated groups that we need to add\n    const mergedResponse = newResponse?.concat(newResponseItem.slice(1));\n    const groupResponse = { ...response, item: mergedResponse };\n    onChange([groupResponse]);\n  }\n\n  if (!props.checkForQuestionEnabled(props.item)) {\n    return null;\n  }\n\n  return (\n    <div key={props.item.linkId}>\n      {props.item.text && (\n        <Title order={3} mb=\"md\">\n          {props.item.text}\n        </Title>\n      )}\n      <Stack>\n        {props.item.item?.map((item) => {\n          if (item.type === QuestionnaireItemType.group) {\n            return item.repeats ? (\n              <QuestionnaireRepeatedGroup\n                key={item.linkId}\n                item={item}\n                response={response.item?.filter((i) => i.linkId === item.linkId) ?? []}\n                checkForQuestionEnabled={checkForQuestionEnabled}\n                onChange={onSetGroup}\n              />\n            ) : (\n              <QuestionnaireGroup\n                key={item.linkId}\n                item={item}\n                checkForQuestionEnabled={checkForQuestionEnabled}\n                response={response.item?.find((i) => i.linkId === item.linkId) ?? { linkId: item.linkId }}\n                onChange={onSetGroup}\n              />\n            );\n          }\n          return (\n            <QuestionnaireRepeatableItem\n              key={item.linkId}\n              item={item}\n              response={response.item?.find((i) => i.linkId === item.linkId)}\n              onChange={onSetGroup}\n              checkForQuestionEnabled={checkForQuestionEnabled}\n            />\n          );\n        })}\n      </Stack>\n    </div>\n  );\n}\n", "import { ActionIcon, Button, Divider, Group, NativeSelect, Stack, Text, TextInput } from '@mantine/core';\nimport { formatRange, getCodeBySystem } from '@medplum/core';\nimport { CodeableConcept, ObservationDefinition, ObservationDefinitionQualifiedInterval } from '@medplum/fhirtypes';\nimport { IconCircleMinus, IconCirclePlus } from '@tabler/icons-react';\nimport { MouseEvent, useEffect, useState } from 'react';\nimport { Container } from '../Container/Container';\nimport { Form } from '../Form/Form';\nimport { RangeInput } from '../RangeInput/RangeInput';\nimport { killEvent } from '../utils/dom';\nimport classes from './ReferenceRangeEditor.module.css';\n\n// Properties of qualified intervals used for grouping\nconst intervalFilters = ['gender', 'age', 'gestationalAge', 'context', 'appliesTo', 'category'] as const;\n\nexport interface ReferenceRangeEditorProps {\n  readonly definition: ObservationDefinition;\n  readonly onSubmit: (result: ObservationDefinition) => void;\n}\n\n// Helper type that groups of qualified intervals by equal filter criteria\nexport type IntervalGroup = {\n  id: string;\n  filters: Record<string, any>;\n  intervals: ObservationDefinitionQualifiedInterval[];\n};\n\nconst defaultProps: ReferenceRangeEditorProps = {\n  definition: {\n    resourceType: 'ObservationDefinition',\n    code: { text: '' },\n  },\n  onSubmit: () => {\n    return undefined;\n  },\n};\n\nexport function ReferenceRangeEditor(props: ReferenceRangeEditorProps): JSX.Element {\n  props = Object.assign(defaultProps, props);\n  const defaultDefinition = props.definition;\n\n  const [intervalGroups, setIntervalGroups] = useState<IntervalGroup[]>([]);\n  const [groupId, setGroupId] = useState(1);\n  const [intervalId, setIntervalId] = useState(1);\n\n  useEffect(() => {\n    const definition = ensureQualifiedIntervalKeys(defaultDefinition, setIntervalId);\n    setIntervalGroups(groupQualifiedIntervals(definition.qualifiedInterval || [], setGroupId));\n  }, [defaultDefinition]);\n\n  return (\n    <Form testid=\"reference-range-editor\" onSubmit={submitDefinition}>\n      <Stack>\n        {intervalGroups.map((intervalGroup) => (\n          <ReferenceRangeGroupEditor\n            unit={getUnitString(defaultDefinition.quantitativeDetails?.unit)}\n            onChange={changeInterval}\n            onAdd={addInterval}\n            onRemove={removeInterval}\n            onRemoveGroup={removeGroup}\n            key={`group-${intervalGroup.id}`}\n            intervalGroup={intervalGroup}\n          />\n        ))}\n      </Stack>\n      <ActionIcon\n        title=\"Add Group\"\n        variant=\"subtle\"\n        size=\"sm\"\n        onClick={(e: MouseEvent) => {\n          killEvent(e);\n          addGroup({ id: `group-id-${groupId}`, filters: {} as IntervalGroup['filters'], intervals: [] });\n          setGroupId((id) => id + 1);\n        }}\n      >\n        <IconCirclePlus />\n      </ActionIcon>\n\n      <Group justify=\"flex-end\">\n        <Button type=\"submit\">Save</Button>\n      </Group>\n    </Form>\n  );\n\n  /**\n   * Submit qualified intervals\n   */\n\n  function submitDefinition(): void {\n    const qualifiedInterval = intervalGroups\n      .flatMap((group) => group.intervals)\n      .filter((interval) => !isEmptyInterval(interval));\n    props.onSubmit({ ...defaultDefinition, qualifiedInterval });\n  }\n\n  /**\n   * Add Remove Interval Groups\n   */\n\n  function addGroup(addedGroup: IntervalGroup): void {\n    setIntervalGroups((currentGroups) => [...currentGroups, addedGroup]);\n  }\n\n  function removeGroup(removedGroup: IntervalGroup): void {\n    setIntervalGroups((currentGroups) => currentGroups.filter((group) => group.id !== removedGroup.id));\n  }\n\n  /**\n   * Add/Remove/Update specific Qualified Intervals\n   * @param groupId - The reference range group ID.\n   * @param changedInterval - The updated reference range interval.\n   */\n  function changeInterval(groupId: string, changedInterval: ObservationDefinitionQualifiedInterval): void {\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroup = groups.find((g) => g.id === groupId);\n\n      const index = currentGroup?.intervals.findIndex((interval) => interval.id === changedInterval.id);\n      if (index !== undefined && currentGroup?.intervals[index]) {\n        currentGroup.intervals[index] = changedInterval;\n      }\n      return groups;\n    });\n  }\n\n  function addInterval(groupId: string, addedInterval: ObservationDefinitionQualifiedInterval): void {\n    if (addedInterval.id === undefined) {\n      addedInterval.id = `id-${intervalId}`;\n      setIntervalId((id) => id + 1);\n    }\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroupIndex = groups.findIndex((g) => g.id === groupId);\n\n      if (currentGroupIndex !== -1) {\n        const currentGroup = { ...groups[currentGroupIndex] };\n        addedInterval = { ...addedInterval, ...currentGroup.filters };\n        currentGroup.intervals = [...currentGroup.intervals, addedInterval];\n        groups[currentGroupIndex] = currentGroup;\n      }\n\n      return groups;\n    });\n  }\n\n  function removeInterval(groupId: string, removedInterval: ObservationDefinitionQualifiedInterval): void {\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroup = groups.find((g) => g.id === groupId);\n      if (currentGroup) {\n        currentGroup.intervals = currentGroup.intervals.filter((interval) => interval.id !== removedInterval.id);\n      }\n      return groups;\n    });\n  }\n}\n\n/**\n * Helper component that renders an \"interval group\", which is a set of ObservationDefinitionQualifiedIntervals\n * that have the same filter values\n */\nexport interface ReferenceRangeGroupEditorProps {\n  readonly intervalGroup: IntervalGroup;\n  readonly unit: string | undefined;\n  readonly onChange: (groupId: string, changed: ObservationDefinitionQualifiedInterval) => void;\n  readonly onAdd: (groupId: string, added: ObservationDefinitionQualifiedInterval) => void;\n  readonly onRemove: (groupId: string, removed: ObservationDefinitionQualifiedInterval) => void;\n  readonly onRemoveGroup: (removedGroup: IntervalGroup) => void;\n}\n\nexport function ReferenceRangeGroupEditor(props: ReferenceRangeGroupEditorProps): JSX.Element {\n  const { intervalGroup, unit } = props;\n  return (\n    <Container data-testid={intervalGroup.id} className={classes.section}>\n      <Stack gap=\"lg\">\n        <Group justify=\"flex-end\">\n          <ActionIcon\n            title=\"Remove Group\"\n            variant=\"subtle\"\n            data-testid={`remove-group-button-${intervalGroup.id}`}\n            key={`remove-group-button-${intervalGroup.id}`}\n            size=\"sm\"\n            onClick={(e: MouseEvent) => {\n              killEvent(e);\n              props.onRemoveGroup(intervalGroup);\n            }}\n          >\n            <IconCircleMinus />\n          </ActionIcon>\n        </Group>\n        <ReferenceRangeGroupFilters intervalGroup={intervalGroup} onChange={props.onChange} />\n        <Divider />\n        {intervalGroup.intervals.map((interval) => (\n          <Stack key={`interval-${interval.id}`} gap=\"xs\">\n            <Group>\n              <TextInput\n                key={`condition-${interval.id}`}\n                data-testid={`condition-${interval.id}`}\n                defaultValue={interval.condition}\n                label=\"Condition: \"\n                size=\"sm\"\n                onChange={(e) => {\n                  killEvent(e);\n                  props.onChange(intervalGroup.id, { ...interval, condition: e.currentTarget.value.trim() });\n                }}\n              />\n              <ActionIcon\n                title=\"Remove Interval\"\n                variant=\"subtle\"\n                size=\"sm\"\n                key={`remove-interval-${interval.id}`}\n                data-testid={`remove-interval-${interval.id}`}\n                onClick={(e: MouseEvent) => {\n                  killEvent(e);\n                  props.onRemove(intervalGroup.id, interval);\n                }}\n              >\n                <IconCircleMinus />\n              </ActionIcon>\n            </Group>\n\n            <RangeInput\n              path=\"\"\n              onChange={(range) => {\n                props.onChange(intervalGroup.id, { ...interval, range });\n              }}\n              key={`range-${interval.id}`}\n              name={`range-${interval.id}`}\n              defaultValue={interval.range}\n            />\n          </Stack>\n        ))}\n        <ActionIcon\n          title=\"Add Interval\"\n          variant=\"subtle\"\n          size=\"sm\"\n          onClick={(e: MouseEvent) => {\n            killEvent(e);\n            props.onAdd(intervalGroup.id, {\n              range: {\n                low: { unit },\n                high: { unit },\n              },\n            });\n          }}\n        >\n          <IconCirclePlus />\n        </ActionIcon>\n      </Stack>\n    </Container>\n  );\n}\n\ninterface ReferenceRangeGroupFiltersProps {\n  readonly intervalGroup: IntervalGroup;\n  readonly onChange: ReferenceRangeGroupEditorProps['onChange'];\n}\n\n/**\n * Render the \"filters\" section of the IntervalGroup.\n * @param props - The ReferenceRangeGroupFilter React props.\n * @returns The ReferenceRangeGroupFilter React node.\n */\nfunction ReferenceRangeGroupFilters(props: ReferenceRangeGroupFiltersProps): JSX.Element {\n  const { intervalGroup, onChange } = props;\n\n  // Pre-populate the units of the age filter\n  if (!intervalGroup.filters.age) {\n    intervalGroup.filters.age = {};\n  }\n  for (const key of ['low', 'high']) {\n    if (!intervalGroup.filters.age[key]?.unit) {\n      intervalGroup.filters.age[key] = {\n        ...intervalGroup.filters.age[key],\n        unit: 'years',\n        system: 'http://unitsofmeasure.org',\n      };\n    }\n  }\n\n  return (\n    <Stack style={{ maxWidth: '50%' }}>\n      <Group>\n        <NativeSelect\n          data={['', 'male', 'female']}\n          label=\"Gender:\"\n          defaultValue={intervalGroup.filters.gender || ''}\n          onChange={(e) => {\n            for (const interval of intervalGroup.intervals) {\n              let newGender: string | undefined = e.currentTarget.value;\n              if (newGender === '') {\n                newGender = undefined;\n              }\n              onChange(intervalGroup.id, {\n                ...interval,\n                gender: newGender as ObservationDefinitionQualifiedInterval['gender'],\n              });\n            }\n          }}\n        />\n      </Group>\n      <Group gap=\"xs\">\n        <Text component=\"label\" htmlFor={`div-age-${intervalGroup.id}`}>\n          Age:\n        </Text>\n        <div id={`div-age-${intervalGroup.id}`}>\n          <RangeInput\n            path=\"\"\n            key={`age-${intervalGroup.id}`}\n            name={`age-${intervalGroup.id}`}\n            defaultValue={intervalGroup.filters['age']}\n            onChange={(ageRange) => {\n              for (const interval of intervalGroup.intervals) {\n                onChange(intervalGroup.id, { ...interval, age: ageRange });\n              }\n            }}\n          />\n        </div>\n      </Group>\n      <NativeSelect\n        data={['', 'pre-puberty', 'follicular', 'midcycle', 'luteal', 'postmenopausal']}\n        label=\"Endocrine:\"\n        defaultValue={intervalGroup.filters.context?.text || ''}\n        onChange={(e) => {\n          for (const interval of intervalGroup.intervals) {\n            let newEndocrine: string | undefined = e.currentTarget.value;\n            if (newEndocrine === '') {\n              newEndocrine = undefined;\n              onChange(intervalGroup.id, { ...interval, context: undefined });\n            } else {\n              onChange(intervalGroup.id, {\n                ...interval,\n                context: {\n                  text: newEndocrine,\n                  coding: [\n                    { code: newEndocrine, system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning' },\n                  ],\n                },\n              });\n            }\n          }\n        }}\n      />\n      <NativeSelect\n        data={['', 'reference', 'critical', 'absolute']}\n        label=\"Category: \"\n        defaultValue={intervalGroup.filters.category}\n        onChange={(e) => {\n          for (const interval of intervalGroup.intervals) {\n            const newCategory: string | undefined = e.currentTarget.value;\n            if (newCategory === '') {\n              onChange(intervalGroup.id, { ...interval, category: undefined });\n            } else {\n              onChange(intervalGroup.id, {\n                ...interval,\n                category: newCategory as 'reference' | 'critical' | 'absolute',\n              });\n            }\n          }\n        }}\n      />\n    </Stack>\n  );\n}\n\n/**\n * Helper function that assigns ids to each qualifiedInterval of an ObservationDefinition\n * @param definition - An ObservationDefinition\n * @param setIntervalId - React setState function for the intervalId\n * @returns The updated observation definition.\n */\nfunction ensureQualifiedIntervalKeys(\n  definition: ObservationDefinition,\n  setIntervalId: (id: number) => void\n): ObservationDefinition {\n  const intervals = definition.qualifiedInterval || [];\n  // Set the nextId to the max of any existing numeric id\n  let nextId =\n    Math.max(\n      ...intervals.map((interval) => {\n        const existingNum = parseInt(interval.id?.substring(3) || '', 10);\n        return !isNaN(existingNum) ? existingNum : Number.NEGATIVE_INFINITY;\n      })\n    ) + 1;\n\n  if (!Number.isFinite(nextId)) {\n    nextId = 1;\n  }\n\n  // If an interval doesn't have an id, set it to the nextId\n  definition = {\n    ...definition,\n    qualifiedInterval: intervals.map((interval) => ({\n      ...interval,\n      id: interval.id || `id-${nextId++}`,\n    })),\n  };\n  setIntervalId(nextId);\n  return definition;\n}\n\n/**\n * Group all ObservationDefinitionQualifiedIntervals based on the values of their \"filter\" properties,\n * so that similar ranges can be grouped together.\n * @param intervals - Array of reference range intervals.\n * @param setGroupId - Callback to set the group ID.\n * @returns The grouped intervals.\n */\nfunction groupQualifiedIntervals(\n  intervals: ObservationDefinitionQualifiedInterval[],\n  setGroupId: (id: number) => void\n): IntervalGroup[] {\n  let groupId = 1;\n  const groups: Record<string, IntervalGroup> = {};\n  for (const interval of intervals) {\n    const groupKey = generateGroupKey(interval);\n    if (!(groupKey in groups)) {\n      groups[groupKey] = {\n        id: `group-id-${groupId++}`,\n        filters: Object.fromEntries(intervalFilters.map((f) => [f, interval[f]])) as Record<string, any>,\n        intervals: [],\n      };\n    }\n    groups[groupKey].intervals.push(interval);\n  }\n  setGroupId(groupId);\n  return Object.values(groups);\n}\n\n/**\n * Generates a unique string for each set of filter values, so that similarly filtered intervals can be grouped together.\n * @param interval - The reference range interval.\n * @returns A \"group key\" that corresponds to the value of the interval filter properties.\n */\nfunction generateGroupKey(interval: ObservationDefinitionQualifiedInterval): string {\n  const results = [\n    `gender=${interval.gender}`,\n    `age=${formatRange(interval.age)}`,\n    `gestationalAge=${formatRange(interval.gestationalAge)}`,\n    `context=${interval.context?.text}`,\n    `appliesTo=${interval.appliesTo?.map((c) => c.text).join('+')}`,\n    `category=${interval.category}`,\n  ];\n\n  return results.join(':');\n}\n\nfunction getUnitString(unit: CodeableConcept | undefined): string | undefined {\n  return unit && (getCodeBySystem(unit, 'http://unitsofmeasure.org') || unit.text);\n}\n\nfunction isEmptyInterval(interval: ObservationDefinitionQualifiedInterval): boolean {\n  return interval.range?.low?.value === undefined && interval.range?.high?.value === undefined;\n}\n", ".section {\n  position: relative;\n  margin: 4px 4px 8px;\n  padding: 6px 12px 16px 6px;\n  border: 1.5px solid var(--mantine-color-gray-3);\n  border-radius: var(--mantine-radius-sm);\n  transition: all 0.1;\n}\n", "import { Button, Grid, Text } from '@mantine/core';\nimport { formatDateTime, getReferenceString } from '@medplum/core';\nimport { Bundle, BundleEntry, Reference, RequestGroup, Resource, Task } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconCheckbox, IconSquare } from '@tabler/icons-react';\nimport { Fragment, useEffect, useState } from 'react';\nimport { ResourceName } from '../ResourceName/ResourceName';\nimport { StatusBadge } from '../StatusBadge/StatusBadge';\n\nexport interface RequestGroupDisplayProps {\n  readonly value?: RequestGroup | Reference<RequestGroup>;\n  readonly onStart: (task: Task, input: Reference) => void;\n  readonly onEdit: (task: Task, input: Reference, output: Reference) => void;\n}\n\nexport function RequestGroupDisplay(props: RequestGroupDisplayProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const requestGroup = useResource(props.value);\n  const [startedLoading, setStartedLoading] = useState(false);\n  const [responseBundle, setResponseBundle] = useState<Bundle>();\n\n  useEffect(() => {\n    if (requestGroup && !startedLoading) {\n      medplum.executeBatch(buildBatchRequest(requestGroup)).then(setResponseBundle).catch(console.log);\n      setStartedLoading(true);\n    }\n  }, [medplum, requestGroup, startedLoading]);\n\n  if (!requestGroup || !responseBundle) {\n    return null;\n  }\n\n  return (\n    <Grid>\n      {requestGroup.action?.map((action, index) => {\n        const task = action.resource && findBundleEntry(action.resource as Reference<Task>);\n        const taskInput = task?.input?.[0]?.valueReference;\n        const taskOutput = task?.output?.[0]?.valueReference;\n        return (\n          <Fragment key={`action-${index}`}>\n            <Grid.Col span={1} p=\"md\">\n              {task?.status === 'completed' ? <IconCheckbox /> : <IconSquare color=\"gray\" />}\n            </Grid.Col>\n            <Grid.Col span={9} p=\"xs\">\n              <Text fw={500}>{action.title}</Text>\n              {action.description && <div>{action.description}</div>}\n              <div>\n                Last edited by&nbsp;\n                <ResourceName value={task?.meta?.author as Reference} />\n                &nbsp;on&nbsp;\n                {formatDateTime(task?.meta?.lastUpdated)}\n              </div>\n              <div>\n                Status: <StatusBadge status={task?.status || 'unknown'} />\n              </div>\n            </Grid.Col>\n            <Grid.Col span={2} p=\"md\">\n              {taskInput && !taskOutput && <Button onClick={() => props.onStart(task, taskInput)}>Start</Button>}\n              {taskInput && taskOutput && (\n                <Button onClick={() => props.onEdit(task, taskInput, taskOutput)}>Edit</Button>\n              )}\n            </Grid.Col>\n          </Fragment>\n        );\n      })}\n    </Grid>\n  );\n\n  function buildBatchRequest(request: RequestGroup): Bundle {\n    const batchEntries: BundleEntry[] = [];\n    if (request.action) {\n      for (const action of request.action) {\n        if (action.resource?.reference) {\n          batchEntries.push({ request: { method: 'GET', url: action.resource.reference } });\n        }\n      }\n    }\n\n    return {\n      resourceType: 'Bundle',\n      type: 'batch',\n      entry: batchEntries,\n    };\n  }\n\n  function findBundleEntry<T extends Resource>(reference: Reference<T>): T | undefined {\n    for (const entry of responseBundle?.entry ?? []) {\n      if (entry.resource && reference.reference === getReferenceString(entry.resource)) {\n        return entry.resource as T;\n      }\n    }\n    return undefined;\n  }\n}\n", "import { Bundle, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useEffect, useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\nimport { blame } from '../utils/blame';\nimport classes from './ResourceBlame.module.css';\nimport { getTimeString, getVersionUrl } from './ResourceBlame.utils';\n\nexport interface ResourceBlameProps {\n  readonly history?: Bundle;\n  readonly resourceType?: ResourceType;\n  readonly id?: string;\n}\n\nexport function ResourceBlame(props: ResourceBlameProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const [value, setValue] = useState<Bundle | undefined>(props.history);\n\n  useEffect(() => {\n    if (!props.history && props.resourceType && props.id) {\n      medplum.readHistory(props.resourceType, props.id).then(setValue).catch(console.log);\n    }\n  }, [medplum, props.history, props.resourceType, props.id]);\n\n  if (!value) {\n    return <div>Loading...</div>;\n  }\n\n  const resource = value.entry?.[0]?.resource as Resource;\n\n  if (!resource) {\n    return null;\n  }\n\n  const table = blame(value);\n\n  return (\n    <div className={classes.container}>\n      <table className={classes.root}>\n        <tbody>\n          {table.map((row, index) => (\n            <tr key={'row-' + index} className={row.span > 0 ? classes.startRow : classes.normalRow}>\n              {row.span > 0 && (\n                <>\n                  <td className={classes.author} rowSpan={row.span}>\n                    <ResourceBadge value={row.meta.author} link={true} />\n                  </td>\n                  <td className={classes.dateTime} rowSpan={row.span}>\n                    <MedplumLink to={getVersionUrl(resource, row.meta.versionId as string)}>\n                      {getTimeString(row.meta.lastUpdated as string)}\n                    </MedplumLink>\n                  </td>\n                </>\n              )}\n              <td className={classes.lineNumber}>{index + 1}</td>\n              <td className={classes.line}>\n                <pre className={classes.pre}>{row.value}</pre>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n", "import { stringify } from '@medplum/core';\nimport { Bundle, Meta } from '@medplum/fhirtypes';\nimport { diff } from './diff';\n\nexport interface BlameRow {\n  id: string;\n  meta: Meta;\n  value: string;\n  span: number;\n}\n\nexport function blame(history: Bundle): BlameRow[] {\n  // Convert to array of array of lines\n  const versions = (history.entry ?? [])\n    .filter((entry) => !!entry.resource)\n    .map((entry) => ({\n      meta: entry.resource?.meta as Meta,\n      lines: stringify(entry.resource, true).match(/[^\\r\\n]+/g) as string[],\n    }))\n    .sort((a, b) => (a.meta.lastUpdated as string).localeCompare(b.meta.lastUpdated as string));\n\n  if (!versions.length) {\n    return [];\n  }\n\n  // Start with array of lines from the first version\n  const table: BlameRow[] = versions[0].lines.map((line) => ({\n    id: versions[0].meta.versionId as string,\n    meta: versions[0].meta,\n    value: line,\n    span: 1,\n  }));\n\n  compareVersions(table, versions);\n  combineSpans(table);\n  return table;\n}\n\n/**\n * For each version, update the blame table with revisions.\n * @param table - The output blame table.\n * @param versions - The array of versions.\n */\nfunction compareVersions(table: BlameRow[], versions: { meta: Meta; lines: string[] }[]): void {\n  for (let i = 1; i < versions.length; i++) {\n    const revisions = diff(versions[i - 1].lines, versions[i].lines);\n\n    for (const revision of revisions) {\n      const position = revision.original.position;\n      const oldLines = revision.original.lines;\n      const newLines = revision.revised.lines;\n\n      if (revision.type === 'delete' || revision.type === 'change') {\n        // Remove the old rows\n        table.splice(position, oldLines.length);\n      }\n\n      if (revision.type === 'insert' || revision.type === 'change') {\n        // Add the new lines\n        for (let k = 0; k < revision.revised.lines.length; k++) {\n          table.splice(position + k, 0, {\n            id: versions[i].meta.versionId as string,\n            meta: versions[i].meta,\n            value: newLines[k],\n            span: 1,\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Combine adjacent rows into spans.\n * @param table - The output blame table.\n */\nfunction combineSpans(table: BlameRow[]): void {\n  let start = 0;\n  while (start < table.length) {\n    let curr = start;\n    while (curr < table.length && table[curr].id === table[start].id) {\n      table[curr].span = -1;\n      curr++;\n    }\n    table[start].span = curr - start;\n    start = curr;\n  }\n}\n", "/*\n * Myers Diff algorithm\n * Based on: https://github.com/KengoTODA/java-diff-utils/blob/master/src/main/java/difflib/myers/MyersDiff.java\n * Apache Software License, Version 1.1\n */\n\nexport function diff(original: string[], revised: string[]): Delta[] {\n  const path = buildPath(original, revised) as PathNode;\n  return buildRevisions(path, original, revised);\n}\n\nexport interface PathNode {\n  readonly i: number;\n  readonly j: number;\n  readonly prev: PathNode | undefined;\n  readonly snake: boolean;\n}\n\nexport interface Delta {\n  readonly original: Chunk;\n  readonly revised: Chunk;\n  readonly type: 'change' | 'delete' | 'insert';\n}\n\nexport interface Chunk {\n  readonly position: number;\n  readonly lines: string[];\n}\n\nfunction buildPath(orig: string[], rev: string[]): PathNode | undefined {\n  const N = orig.length;\n  const M = rev.length;\n  const MAX = N + M + 1;\n  const size = 1 + 2 * MAX;\n  const middle = (size / 2) | 0;\n  const diagonal: (PathNode | undefined)[] = new Array(size);\n\n  diagonal[middle + 1] = {\n    i: 0,\n    j: -1,\n    prev: undefined,\n    snake: true,\n  };\n\n  for (let d = 0; d < MAX; d++) {\n    for (let k = -d; k <= d; k += 2) {\n      const kmiddle = middle + k;\n      const kplus = kmiddle + 1;\n      const kminus = kmiddle - 1;\n      const kplusNode = diagonal[kplus] as PathNode;\n      const kminusNode = diagonal[kminus] as PathNode;\n      let prev: PathNode | undefined = undefined;\n      let i = 0;\n\n      if (k === -d || (k !== d && kminusNode.i < kplusNode.i)) {\n        i = kplusNode.i;\n        prev = kplusNode;\n      } else {\n        i = kminusNode.i + 1;\n        prev = kminusNode;\n      }\n\n      diagonal[kminus] = undefined; // no longer used\n\n      let j = i - k;\n      let node = {\n        i,\n        j,\n        prev: previousSnake(prev),\n        snake: false,\n      };\n\n      // orig and rev are zero-based\n      // but the algorithm is one-based\n      // that's why there's no +1 when indexing the sequences\n      while (i < N && j < M && orig[i] === rev[j]) {\n        i++;\n        j++;\n      }\n\n      if (i > node.i) {\n        node = {\n          i,\n          j,\n          prev: node,\n          snake: true,\n        };\n      }\n\n      diagonal[kmiddle] = node;\n\n      if (i >= N && j >= M) {\n        return diagonal[kmiddle] as PathNode;\n      }\n    }\n    diagonal[middle + d - 1] = undefined;\n  }\n\n  // According to Myers, this cannot happen\n  return undefined;\n}\n\nfunction buildRevisions(startNode: PathNode, orig: string[], rev: string[]): Delta[] {\n  const deltas: Delta[] = [];\n  let path: PathNode | undefined = startNode;\n\n  if (path.snake) {\n    path = path.prev;\n  }\n\n  while (path?.prev && path.prev.j >= 0) {\n    const i = path.i;\n    const j = path.j;\n\n    path = path.prev;\n    const ianchor = path.i;\n    const janchor = path.j;\n\n    const original = {\n      position: ianchor,\n      lines: orig.slice(ianchor, i),\n    };\n\n    const revised = {\n      position: janchor,\n      lines: rev.slice(janchor, j),\n    };\n\n    let type: 'insert' | 'delete' | 'change';\n\n    if (original.lines.length === 0 && revised.lines.length > 0) {\n      type = 'insert';\n    } else if (original.lines.length > 0 && revised.lines.length === 0) {\n      type = 'delete';\n    } else {\n      type = 'change';\n    }\n\n    deltas.push({ original, revised, type });\n\n    if (path.snake) {\n      path = path.prev;\n    }\n  }\n\n  return deltas;\n}\n\nfunction previousSnake(node: PathNode): PathNode {\n  if (node && !node.snake && node.prev) {\n    return node.prev;\n  }\n  return node;\n}\n", ".container {\n  overflow-x: auto;\n}\n\n.root {\n  border: 0.1px solid var(--mantine-color-gray-3);\n  border-collapse: collapse;\n  border-radius: var(--mantine-radius-sm);\n  border-spacing: 0;\n  font-size: var(--mantine-font-size-xs);\n  width: 100px;\n\n  & td {\n    padding: 2px 4px 0 4px;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n}\n\n.startRow {\n  border-top: 0.1px solid var(--mantine-color-gray-3);\n}\n\n.normalRow {\n  border-top: 0;\n}\n\n.author {\n  line-height: 10px;\n}\n\n.dateTime {\n  border-right: 0.1px solid var(--mantine-color-gray-3);\n  line-height: 20px;\n}\n\n.lineNumber {\n  background-color: var(--mantine-color-gray-1);\n  border: 0;\n  color: var(--mantine-color-gray-5);\n  font-family: var(--mantine-font-family-monospace);\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  text-align: right;\n}\n\n.line {\n  font-family: var(--mantine-font-family-monospace);\n  font-size: var(--mantine-font-size-sm);\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n}\n\n.pre {\n  margin: 0;\n}\n", "import { Resource } from '@medplum/fhirtypes';\n\nexport function getVersionUrl(resource: Resource, versionId: string): string {\n  return `/${resource.resourceType}/${resource.id}/_history/${versionId}`;\n}\n\nexport function getTimeString(lastUpdated: string): string {\n  const seconds = Math.floor((Date.now() - Date.parse(lastUpdated)) / 1000);\n\n  const years = Math.floor(seconds / 31536000);\n  if (years > 0) {\n    return pluralizeTime(years, 'year');\n  }\n\n  const months = Math.floor(seconds / 2592000);\n  if (months > 0) {\n    return pluralizeTime(months, 'month');\n  }\n\n  const days = Math.floor(seconds / 86400);\n  if (days > 0) {\n    return pluralizeTime(days, 'day');\n  }\n\n  const hours = Math.floor(seconds / 3600);\n  if (hours > 0) {\n    return pluralizeTime(hours, 'hour');\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  if (minutes > 0) {\n    return pluralizeTime(minutes, 'minute');\n  }\n\n  return pluralizeTime(seconds, 'second');\n}\n\nfunction pluralizeTime(count: number, noun: string): string {\n  return `${count} ${count === 1 ? noun : noun + 's'} ago`;\n}\n", "import { stringify } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport { Delta, diff } from '../utils/diff';\nimport classes from './ResourceDiff.module.css';\n\nexport interface ResourceDiffProps {\n  readonly original: Resource;\n  readonly revised: Resource;\n  readonly ignoreMeta?: boolean;\n}\n\nexport function ResourceDiff(props: ResourceDiffProps): JSX.Element {\n  let originalResource = props.original;\n  let revisedResource = props.revised;\n\n  if (props.ignoreMeta) {\n    originalResource = { ...originalResource, meta: undefined };\n    revisedResource = { ...revisedResource, meta: undefined };\n  }\n\n  const original = stringify(originalResource, true).match(/[^\\r\\n]+/g) as string[];\n  const revised = stringify(revisedResource, true).match(/[^\\r\\n]+/g) as string[];\n  const deltas = diff(original, revised);\n  return (\n    <pre style={{ color: 'gray' }}>\n      {deltas.map((delta, index) => (\n        <ChangeDiff key={'delta' + index} delta={delta} />\n      ))}\n    </pre>\n  );\n}\n\nfunction ChangeDiff(props: { delta: Delta }): JSX.Element {\n  return (\n    <>\n      ...\n      <br />\n      {props.delta.original.lines.length > 0 && (\n        <div className={classes.removed}>{props.delta.original.lines.join('\\n')}</div>\n      )}\n      {props.delta.revised.lines.length > 0 && (\n        <div className={classes.added}>{props.delta.revised.lines.join('\\n')}</div>\n      )}\n      ...\n      <br />\n    </>\n  );\n}\n", "\n.removed {\n  color: var(--mantine-color-red-7);\n  text-decoration: line-through;\n}\n\n.added {\n  color: var(--mantine-color-green-7);\n}", "import { ActionIcon, Alert, Button, Group, Menu, Stack, TextInput, useMantineTheme } from '@mantine/core';\nimport {\n  AccessPolicyInteraction,\n  applyDefaultValuesToResource,\n  canWriteResourceType,\n  isPopulated,\n  satisfiedAccessPolicy,\n  tryGetProfile,\n} from '@medplum/core';\nimport { OperationOutcome, Reference, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconAlertCircle, IconChevronDown, IconEdit, IconTrash } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { FormEvent, useEffect, useMemo, useState } from 'react';\nimport { BackboneElementInput } from '../BackboneElementInput/BackboneElementInput';\nimport { FormSection } from '../FormSection/FormSection';\nimport classes from './ResourceForm.module.css';\n\nexport interface ResourceFormProps {\n  readonly defaultValue: Partial<Resource> | Reference;\n  readonly outcome?: OperationOutcome;\n  readonly onSubmit: (resource: Resource) => void;\n  readonly onPatch?: (resource: Resource) => void;\n  readonly onDelete?: (resource: Resource) => void;\n  /** (optional) URL of the resource profile used to display the form. Takes priority over schemaName. */\n  readonly profileUrl?: string;\n}\n\nexport function ResourceForm(props: ResourceFormProps): JSX.Element {\n  const { outcome } = props;\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.defaultValue);\n  const resourceType = defaultValue?.resourceType as ResourceType;\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [value, setValue] = useState<Resource>();\n  const accessPolicy = medplum.getAccessPolicy();\n  const theme = useMantineTheme();\n\n  useEffect(() => {\n    if (defaultValue) {\n      if (props.profileUrl) {\n        const profileUrl: string = props.profileUrl;\n        medplum\n          .requestProfileSchema(props.profileUrl, { expandProfile: true })\n          .then(() => {\n            const profile = tryGetProfile(profileUrl);\n            if (profile) {\n              setSchemaLoaded(true);\n              const modifiedDefaultValue = applyDefaultValuesToResource(defaultValue, profile);\n              setValue(modifiedDefaultValue);\n            } else {\n              console.error(`Schema not found for ${profileUrl}`);\n            }\n          })\n          .catch((reason) => {\n            console.error('Error in requestProfileSchema', reason);\n          });\n      } else {\n        medplum\n          .requestSchema(resourceType)\n          .then(() => {\n            setValue(defaultValue);\n            setSchemaLoaded(true);\n          })\n          .catch(console.log);\n      }\n    }\n  }, [medplum, defaultValue, resourceType, props.profileUrl]);\n\n  const accessPolicyResource = useMemo(() => {\n    return defaultValue && satisfiedAccessPolicy(defaultValue, AccessPolicyInteraction.READ, accessPolicy);\n  }, [accessPolicy, defaultValue]);\n\n  const canWrite = useMemo<boolean>(() => {\n    if (medplum.isSuperAdmin()) {\n      return true;\n    }\n\n    if (!accessPolicy) {\n      return true;\n    }\n\n    if (!isPopulated(value?.resourceType)) {\n      return true;\n    }\n\n    return canWriteResourceType(accessPolicy, value?.resourceType);\n  }, [medplum, accessPolicy, value?.resourceType]);\n\n  if (!schemaLoaded || !value) {\n    return <div>Loading...</div>;\n  }\n\n  if (!canWrite) {\n    return (\n      <Alert color=\"red\" title=\"Permission denied\" icon={<IconAlertCircle />}>\n        Your access level prevents you from editing and creating {value.resourceType} resources.\n      </Alert>\n    );\n  }\n\n  return (\n    <form\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={(e: FormEvent) => {\n        e.preventDefault();\n        if (props.onSubmit) {\n          props.onSubmit(value);\n        }\n      }}\n    >\n      <Stack mb=\"xl\">\n        <FormSection title=\"Resource Type\" htmlFor=\"resourceType\" outcome={outcome}>\n          <TextInput name=\"resourceType\" defaultValue={value.resourceType} disabled={true} />\n        </FormSection>\n        <FormSection title=\"ID\" htmlFor=\"id\" outcome={outcome}>\n          <TextInput name=\"id\" defaultValue={value.id} disabled={true} />\n        </FormSection>\n      </Stack>\n      <BackboneElementInput\n        path={value.resourceType}\n        valuePath={value.resourceType}\n        typeName={resourceType}\n        defaultValue={value}\n        outcome={outcome}\n        onChange={setValue}\n        profileUrl={props.profileUrl}\n        accessPolicyResource={accessPolicyResource}\n      />\n      <Group justify=\"flex-end\" mt=\"xl\" wrap=\"nowrap\" gap={0}>\n        <Button type=\"submit\" className={cx((props.onPatch || props.onDelete) && classes.splitButton)}>\n          {defaultValue?.id ? 'Update' : 'Create'}\n        </Button>\n        {(props.onPatch || props.onDelete) && (\n          <Menu transitionProps={{ transition: 'pop' }} position=\"bottom-end\" withinPortal>\n            <Menu.Target>\n              <ActionIcon\n                variant=\"filled\"\n                color={theme.primaryColor}\n                size={36}\n                className={classes.menuControl}\n                aria-label=\"More actions\"\n              >\n                <IconChevronDown size={14} stroke={1.5} />\n              </ActionIcon>\n            </Menu.Target>\n            <Menu.Dropdown>\n              {props.onPatch && (\n                <Menu.Item\n                  leftSection={<IconEdit size={14} stroke={1.5} />}\n                  onClick={() => {\n                    (props.onPatch as (resource: Resource) => void)(value);\n                  }}\n                >\n                  Patch\n                </Menu.Item>\n              )}\n              {props.onDelete && (\n                <Menu.Item\n                  color=\"red\"\n                  leftSection={<IconTrash size={14} stroke={1.5} color=\"red\" />}\n                  onClick={() => {\n                    (props.onDelete as (resource: Resource) => void)(value);\n                  }}\n                >\n                  Delete\n                </Menu.Item>\n              )}\n            </Menu.Dropdown>\n          </Menu>\n        )}\n      </Group>\n    </form>\n  );\n}\n", ".splitButton {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.menuControl {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border: 0;\n  border-left: rem(1px) solid var(--mantine-color-body);\n}\n", "import { Table } from '@mantine/core';\nimport { formatDateTime, normalizeErrorString } from '@medplum/core';\nimport { Bundle, BundleEntry, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useEffect, useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\n\nexport interface ResourceHistoryTableProps {\n  readonly history?: Bundle;\n  readonly resourceType?: string;\n  readonly id?: string;\n}\n\nexport function ResourceHistoryTable(props: ResourceHistoryTableProps): JSX.Element {\n  const medplum = useMedplum();\n  const [value, setValue] = useState<Bundle | undefined>(props.history);\n\n  useEffect(() => {\n    if (!props.history && props.resourceType && props.id) {\n      medplum\n        .readHistory(props.resourceType as ResourceType, props.id)\n        .then(setValue)\n        .catch(console.log);\n    }\n  }, [medplum, props.history, props.resourceType, props.id]);\n\n  if (!value) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Table withTableBorder withRowBorders withColumnBorders>\n      <Table.Thead>\n        <Table.Tr>\n          <Table.Th>Author</Table.Th>\n          <Table.Th>Date</Table.Th>\n          <Table.Th>Version</Table.Th>\n        </Table.Tr>\n      </Table.Thead>\n      <Table.Tbody>\n        {value.entry?.map((entry, index) => <HistoryRow key={'entry-' + index} entry={entry} />)}\n      </Table.Tbody>\n    </Table>\n  );\n}\n\ninterface HistoryRowProps {\n  readonly entry: BundleEntry;\n}\n\nfunction HistoryRow(props: HistoryRowProps): JSX.Element {\n  const { response, resource } = props.entry;\n  if (resource) {\n    return (\n      <Table.Tr>\n        <Table.Td>\n          <ResourceBadge value={resource.meta?.author} link={true} />\n        </Table.Td>\n        <Table.Td>{formatDateTime(resource.meta?.lastUpdated)}</Table.Td>\n        <Table.Td>\n          <MedplumLink to={getVersionUrl(resource)}>{resource.meta?.versionId}</MedplumLink>\n        </Table.Td>\n      </Table.Tr>\n    );\n  } else {\n    return (\n      <Table.Tr>\n        <Table.Td colSpan={3}>{normalizeErrorString(response?.outcome)}</Table.Td>\n      </Table.Tr>\n    );\n  }\n}\n\nfunction getVersionUrl(resource: Resource): string {\n  return `/${resource.resourceType}/${resource.id}/_history/${resource.meta?.versionId}`;\n}\n", "import { Button, Stack, Text } from '@mantine/core';\nimport { getReferenceString, isReference } from '@medplum/core';\nimport { Questionnaire, QuestionnaireResponse, Reference, Schedule, Slot } from '@medplum/fhirtypes';\nimport { useResource, useSearchResources } from '@medplum/react-hooks';\nimport { useState } from 'react';\nimport { CalendarInput } from '../CalendarInput/CalendarInput';\nimport { getStartMonth } from '../CalendarInput/CalendarInput.utils';\nimport { QuestionnaireForm } from '../QuestionnaireForm/QuestionnaireForm';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\nimport classes from './Scheduler.module.css';\n\nexport interface SchedulerProps {\n  readonly schedule: Schedule | Reference<Schedule>;\n  readonly questionnaire: Questionnaire | Reference<Questionnaire>;\n}\n\nexport function Scheduler(props: SchedulerProps): JSX.Element | null {\n  const schedule = useResource(props.schedule);\n  const questionnaire = useResource(props.questionnaire);\n\n  const [month, setMonth] = useState<Date>(getStartMonth());\n  const [date, setDate] = useState<Date>();\n  const [slot, setSlot] = useState<Slot>();\n  const [response, setResponse] = useState<QuestionnaireResponse>();\n\n  const [slots] = useSearchResources(\n    'Slot',\n    new URLSearchParams([\n      ['_count', (30 * 24).toString()],\n      [\n        'schedule',\n        isReference(props.schedule)\n          ? (props.schedule.reference as string)\n          : getReferenceString(props.schedule as Schedule),\n      ],\n      ['start', 'gt' + getStart(month)],\n      ['start', 'lt' + getEnd(month)],\n    ])\n  );\n\n  if (!schedule || !slots || !questionnaire) {\n    return null;\n  }\n\n  const actor = schedule.actor?.[0];\n\n  return (\n    <div className={classes.container} data-testid=\"scheduler\">\n      <div className={classes.info}>\n        {actor && <ResourceAvatar value={actor} size=\"xl\" />}\n        {actor && (\n          <Text size=\"xl\" fw={500}>\n            <ResourceName value={actor} />\n          </Text>\n        )}\n        <p>1 hour</p>\n        {date && <p>{date.toLocaleDateString()}</p>}\n        {slot && <p>{formatTime(new Date(slot.start as string))}</p>}\n      </div>\n      <div className={classes.selection}>\n        {!date && (\n          <div>\n            <h3>Select date</h3>\n            <CalendarInput slots={slots} onChangeMonth={setMonth} onClick={setDate} />\n          </div>\n        )}\n        {date && !slot && (\n          <div>\n            <h3>Select time</h3>\n            <Stack>\n              {slots.map((s) => {\n                const slotStart = new Date(s.start as string);\n                return (\n                  slotStart.getTime() > date.getTime() &&\n                  slotStart.getTime() < date.getTime() + 24 * 3600 * 1000 && (\n                    <div key={s.id}>\n                      <Button variant=\"outline\" style={{ width: 150 }} onClick={() => setSlot(s)}>\n                        {formatTime(slotStart)}\n                      </Button>\n                    </div>\n                  )\n                );\n              })}\n            </Stack>\n          </div>\n        )}\n        {date && slot && !response && (\n          <QuestionnaireForm questionnaire={questionnaire} submitButtonText=\"Next\" onSubmit={setResponse} />\n        )}\n        {date && slot && response && (\n          <div>\n            <h3>You're all set!</h3>\n            <p>Check your email for a calendar invite.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getStart(month: Date): string {\n  return formatSlotInstant(month.getTime());\n}\n\nfunction getEnd(month: Date): string {\n  return formatSlotInstant(month.getTime() + 31 * 24 * 60 * 60 * 1000);\n}\n\nfunction formatSlotInstant(time: number): string {\n  const date = new Date(Math.max(Date.now(), time));\n  date.setHours(0, 0, 0, 0);\n  return date.toISOString();\n}\n\nfunction formatTime(date: Date): string {\n  return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });\n}\n", "\n.container {\n  display: flex;\n  min-height: 400px;\n}\n\n.info {\n  min-width: 300px;\n  padding: 20px;\n  border-right: 1px solid var(--mantine-color-gray-3);\n}\n\n.selection {\n  min-width: 300px;\n  padding: 20px;\n}", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Group, Patient, Reference, ResourceType, ServiceRequest } from '@medplum/fhirtypes';\nimport { ResourceTimeline, ResourceTimelineProps } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface ServiceRequestTimelineProps extends Pick<ResourceTimelineProps<ServiceRequest>, 'getMenu'> {\n  readonly serviceRequest: ServiceRequest | Reference<ServiceRequest>;\n}\n\nexport function ServiceRequestTimeline(props: ServiceRequestTimelineProps): JSX.Element {\n  const { serviceRequest, ...rest } = props;\n  return (\n    <ResourceTimeline\n      value={serviceRequest}\n      loadTimelineResources={async (medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n        const ref = `${resourceType}/${id}`;\n        const _count = 100;\n        return Promise.allSettled([\n          medplum.readHistory('ServiceRequest', id),\n          medplum.search('Communication', { 'based-on': ref, _count }),\n          medplum.search('DiagnosticReport', { 'based-on': ref, _count }),\n          medplum.search('Media', { 'based-on': ref, _count }),\n          medplum.search('DocumentReference', { related: ref, _count }),\n          medplum.search('Task', { _filter: `based-on eq ${ref} or focus eq ${ref} or subject eq ${ref}`, _count }),\n        ]);\n      }}\n      createCommunication={(resource: ServiceRequest, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        basedOn: [createReference(resource)],\n        subject: resource.subject as Reference<Group | Patient>,\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: ServiceRequest, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        basedOn: [createReference(resource)],\n        subject: resource.subject,\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n      {...rest}\n    />\n  );\n}\n", "import { Anchor, AnchorProps } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { normalizeErrorString } from '@medplum/core';\nimport { ClientApplication, Encounter, Patient, Reference, SmartAppLaunch } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ReactNode } from 'react';\n\nexport interface SmartAppLaunchLinkProps extends AnchorProps {\n  readonly client: ClientApplication;\n  readonly patient?: Reference<Patient>;\n  readonly encounter?: Reference<Encounter>;\n  readonly children?: ReactNode;\n}\n\nexport function SmartAppLaunchLink(props: SmartAppLaunchLinkProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const { client, patient, encounter, children, ...rest } = props;\n\n  function launchApp(): void {\n    medplum\n      .createResource<SmartAppLaunch>({\n        resourceType: 'SmartAppLaunch',\n        patient,\n        encounter,\n      })\n      .then((result) => {\n        const url = new URL(client.launchUri as string);\n        url.searchParams.set('iss', medplum.getBaseUrl() + 'fhir/R4');\n        url.searchParams.set('launch', result.id as string);\n        window.location.assign(url.toString());\n      })\n      .catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err), autoClose: false }));\n  }\n\n  return (\n    <Anchor onClick={() => launchApp()} {...rest}>\n      {children}\n    </Anchor>\n  );\n}\n", "import { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ReactNode, useEffect, useState } from 'react';\nimport { Document } from '../Document/Document';\nimport { NewProjectForm } from './NewProjectForm';\nimport { NewUserForm } from './NewUserForm';\n\nexport interface RegisterFormProps {\n  readonly type: 'patient' | 'project';\n  readonly projectId?: string;\n  readonly clientId?: string;\n  readonly googleClientId?: string;\n  readonly recaptchaSiteKey?: string;\n  readonly children?: ReactNode;\n  readonly onSuccess: () => void;\n}\n\nexport function RegisterForm(props: RegisterFormProps): JSX.Element {\n  const { type, projectId, clientId, googleClientId, recaptchaSiteKey, onSuccess } = props;\n  const medplum = useMedplum();\n  const [login, setLogin] = useState<string>();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n\n  useEffect(() => {\n    if (type === 'patient' && login) {\n      medplum\n        .startNewPatient({ login, projectId: projectId as string })\n        .then((response) => medplum.processCode(response.code as string))\n        .then(() => onSuccess())\n        .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n    }\n  }, [medplum, type, projectId, login, onSuccess]);\n\n  function handleAuthResponse(response: LoginAuthenticationResponse): void {\n    if (response.code) {\n      medplum\n        .processCode(response.code)\n        .then(() => onSuccess())\n        .catch(console.log);\n    } else if (response.login) {\n      setLogin(response.login);\n    }\n  }\n\n  return (\n    <Document width={450}>\n      {outcome && <pre>{JSON.stringify(outcome, null, 2)}</pre>}\n      {!login && (\n        <NewUserForm\n          projectId={projectId as string}\n          clientId={clientId}\n          googleClientId={googleClientId}\n          recaptchaSiteKey={recaptchaSiteKey}\n          handleAuthResponse={handleAuthResponse}\n        >\n          {props.children}\n        </NewUserForm>\n      )}\n      {login && type === 'project' && <NewProjectForm login={login} handleAuthResponse={handleAuthResponse} />}\n    </Document>\n  );\n}\n", "import { Anchor, Button, Center, Group, Stack, Text, TextInput, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\nimport { getErrorsForInput } from '../utils/outcomes';\n\nexport interface NewProjectFormProps {\n  readonly login: string;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function NewProjectForm(props: NewProjectFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  return (\n    <Form\n      onSubmit={async (formData: Record<string, string>) => {\n        try {\n          props.handleAuthResponse(\n            await medplum.startNewProject({\n              login: props.login,\n              projectName: formData.projectName,\n            })\n          );\n        } catch (err) {\n          setOutcome(normalizeOperationOutcome(err));\n        }\n      }}\n    >\n      <Center style={{ flexDirection: 'column' }}>\n        <Logo size={32} />\n        <Title>Create project</Title>\n      </Center>\n      <Stack gap=\"xl\">\n        <TextInput\n          name=\"projectName\"\n          label=\"Project Name\"\n          placeholder=\"My Project\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'projectName')}\n        />\n        <Text c=\"dimmed\" size=\"xs\">\n          By clicking submit you agree to the Medplum{' '}\n          <Anchor href=\"https://www.medplum.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://www.medplum.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor>.\n        </Text>\n      </Stack>\n      <Group justify=\"flex-end\" mt=\"xl\" wrap=\"nowrap\">\n        <Button type=\"submit\">Create project</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { Anchor, Button, Center, Checkbox, Divider, Group, PasswordInput, Stack, Text, TextInput } from '@mantine/core';\nimport { GoogleCredentialResponse, LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ReactNode, useEffect, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { GoogleButton } from '../GoogleButton/GoogleButton';\nimport { getGoogleClientId } from '../GoogleButton/GoogleButton.utils';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\nimport { getErrorsForInput, getIssuesForExpression } from '../utils/outcomes';\nimport { getRecaptcha, initRecaptcha } from '../utils/recaptcha';\n\nexport interface NewUserFormProps {\n  readonly projectId: string;\n  readonly clientId?: string;\n  readonly googleClientId?: string;\n  readonly recaptchaSiteKey?: string;\n  readonly children?: ReactNode;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function NewUserForm(props: NewUserFormProps): JSX.Element {\n  const googleClientId = getGoogleClientId(props.googleClientId);\n  const recaptchaSiteKey = props.recaptchaSiteKey;\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const issues = getIssuesForExpression(outcome, undefined);\n\n  useEffect(() => {\n    if (recaptchaSiteKey) {\n      initRecaptcha(recaptchaSiteKey);\n    }\n  }, [recaptchaSiteKey]);\n\n  return (\n    <Form\n      onSubmit={async (formData: Record<string, string>) => {\n        try {\n          let recaptchaToken = '';\n          if (recaptchaSiteKey) {\n            recaptchaToken = await getRecaptcha(recaptchaSiteKey);\n          }\n          props.handleAuthResponse(\n            await medplum.startNewUser({\n              projectId: props.projectId,\n              clientId: props.clientId,\n              firstName: formData.firstName,\n              lastName: formData.lastName,\n              email: formData.email,\n              password: formData.password,\n              remember: formData.remember === 'true',\n              recaptchaSiteKey,\n              recaptchaToken,\n            })\n          );\n        } catch (err) {\n          setOutcome(normalizeOperationOutcome(err));\n        }\n      }}\n    >\n      <Center style={{ flexDirection: 'column' }}>{props.children}</Center>\n      <OperationOutcomeAlert issues={issues} />\n      {googleClientId && (\n        <>\n          <Group justify=\"center\" p=\"xl\" style={{ height: 70 }}>\n            <GoogleButton\n              googleClientId={googleClientId}\n              handleGoogleCredential={async (response: GoogleCredentialResponse) => {\n                try {\n                  props.handleAuthResponse(\n                    await medplum.startGoogleLogin({\n                      googleClientId: response.clientId,\n                      googleCredential: response.credential,\n                      projectId: props.projectId,\n                      createUser: true,\n                    })\n                  );\n                } catch (err) {\n                  setOutcome(normalizeOperationOutcome(err));\n                }\n              }}\n            />\n          </Group>\n          <Divider label=\"or\" labelPosition=\"center\" my=\"lg\" />\n        </>\n      )}\n      <Stack gap=\"xl\">\n        <TextInput\n          name=\"firstName\"\n          type=\"text\"\n          label=\"First name\"\n          placeholder=\"First name\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'firstName')}\n        />\n        <TextInput\n          name=\"lastName\"\n          type=\"text\"\n          label=\"Last name\"\n          placeholder=\"Last name\"\n          required={true}\n          error={getErrorsForInput(outcome, 'lastName')}\n        />\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"name@domain.com\"\n          required={true}\n          error={getErrorsForInput(outcome, 'email')}\n        />\n        <PasswordInput\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          required={true}\n          error={getErrorsForInput(outcome, 'password')}\n        />\n        <Text c=\"dimmed\" size=\"xs\">\n          By clicking submit you agree to the Medplum{' '}\n          <Anchor href=\"https://www.medplum.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://www.medplum.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor>.\n        </Text>\n        <Text c=\"dimmed\" size=\"xs\">\n          This site is protected by reCAPTCHA and the Google{' '}\n          <Anchor href=\"https://policies.google.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://policies.google.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor> apply.\n        </Text>\n      </Stack>\n      <Group justify=\"space-between\" mt=\"xl\" wrap=\"nowrap\">\n        <Checkbox name=\"remember\" label=\"Remember me\" size=\"xs\" />\n        <Button type=\"submit\">Create account</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { GoogleCredentialResponse } from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { createScriptTag } from '../utils/script';\n\ninterface GoogleApi {\n  readonly accounts: {\n    id: {\n      initialize: (args: any) => void;\n      renderButton: (parent: HTMLElement, args: any) => void;\n    };\n  };\n}\n\ndeclare const google: GoogleApi;\n\nexport interface GoogleButtonProps {\n  readonly googleClientId?: string;\n  readonly handleGoogleCredential: (response: GoogleCredentialResponse) => void;\n}\n\nexport function GoogleButton(props: GoogleButtonProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const { googleClientId, handleGoogleCredential } = props;\n  const parentRef = useRef<HTMLDivElement>(null);\n  const [scriptLoaded, setScriptLoaded] = useState<boolean>(typeof google !== 'undefined');\n  const [initialized, setInitialized] = useState(false);\n  const [buttonRendered, setButtonRendered] = useState(false);\n\n  useEffect(() => {\n    if (typeof google === 'undefined') {\n      createScriptTag('https://accounts.google.com/gsi/client', () => setScriptLoaded(true));\n      return;\n    }\n\n    if (!initialized) {\n      google.accounts.id.initialize({\n        client_id: googleClientId,\n        callback: handleGoogleCredential,\n      });\n      setInitialized(true);\n    }\n\n    if (parentRef.current && !buttonRendered) {\n      google.accounts.id.renderButton(parentRef.current, {});\n      setButtonRendered(true);\n    }\n  }, [medplum, googleClientId, initialized, scriptLoaded, parentRef, buttonRendered, handleGoogleCredential]);\n\n  if (!googleClientId) {\n    return null;\n  }\n\n  return <div ref={parentRef} />;\n}\n", "/**\n * Dynamically creates a script tag for the specified JavaScript file.\n * @param src - The JavaScript file URL.\n * @param onload - Optional callback for the onload event.\n */\nexport function createScriptTag(src: string, onload?: () => void): void {\n  const head = document.getElementsByTagName('head')[0];\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = src;\n  script.onload = onload ?? null;\n  head.appendChild(script);\n}\n", "export function getGoogleClientId(clientId: string | undefined): string | undefined {\n  if (clientId) {\n    return clientId;\n  }\n\n  if (typeof window !== 'undefined') {\n    const origin = window.location.protocol + '//' + window.location.host;\n    const authorizedOrigins = import.meta.env.GOOGLE_AUTH_ORIGINS?.split(',') ?? [];\n    if (authorizedOrigins.includes(origin)) {\n      return import.meta.env.GOOGLE_CLIENT_ID;\n    }\n  }\n\n  return undefined;\n}\n", "import { createScriptTag } from './script';\n\n// reCAPTCHA type definitions do not work with Vite project aliasing.\n// Project aliasing is more valuable than type definitions,\n// so cheating and using `any` here.\ndeclare let grecaptcha: any;\n\n/**\n * Dynamically loads the recaptcha script.\n * We do not want to load the script on page load unless the user needs it.\n * @param siteKey - The reCAPTCHA site key, available from the reCAPTCHA admin page.\n */\nexport function initRecaptcha(siteKey: string): void {\n  if (typeof grecaptcha === 'undefined') {\n    createScriptTag('https://www.google.com/recaptcha/api.js?render=' + siteKey);\n  }\n}\n\n/**\n * Starts a request to generate a recapcha token.\n * @param siteKey - The reCAPTCHA site key, available from the reCAPTCHA admin page.\n * @returns Promise to a recaptcha token for the current user.\n */\nexport function getRecaptcha(siteKey: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    grecaptcha.ready(async () => {\n      try {\n        resolve(await grecaptcha.execute(siteKey, { action: 'submit' }));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\n", "import { showNotification } from '@mantine/notifications';\nimport { BaseLoginRequest, LoginAuthenticationResponse, normalizeErrorString } from '@medplum/core';\nimport { ProjectMembership } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { Document } from '../Document/Document';\nimport { AuthenticationForm } from './AuthenticationForm';\nimport { ChooseProfileForm } from './ChooseProfileForm';\nimport { ChooseScopeForm } from './ChooseScopeForm';\nimport { MfaForm } from './MfaForm';\nimport { NewProjectForm } from './NewProjectForm';\n\nexport interface SignInFormProps extends BaseLoginRequest {\n  readonly login?: string;\n  readonly chooseScopes?: boolean;\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onSuccess?: () => void;\n  readonly onForgotPassword?: () => void;\n  readonly onRegister?: () => void;\n  readonly onCode?: (code: string) => void;\n  readonly children?: ReactNode;\n}\n\n/**\n * The SignInForm component allows users to sign in to Medplum.\n *\n * \"Signing in\" is a multi-step process:\n * 1) Authentication - identify the user\n * 2) MFA - If MFA is enabled, prompt for MFA code\n * 3) Choose profile - If the user has multiple profiles, prompt to choose one\n * 4) Choose scope - If the user has multiple scopes, prompt to choose one\n * 5) Success - Return to the caller with either a code or a redirect\n * @param props - The SignInForm React props.\n * @returns The SignInForm React node.\n */\nexport function SignInForm(props: SignInFormProps): JSX.Element {\n  const {\n    login: loginCode,\n    chooseScopes,\n    onSuccess,\n    onForgotPassword,\n    onRegister,\n    onCode,\n    ...baseLoginRequest\n  } = props;\n  const medplum = useMedplum();\n  const [login, setLogin] = useState<string>();\n  const loginRequested = useRef(false);\n  const [mfaRequired, setAuthenticatorRequired] = useState(false);\n  const [memberships, setMemberships] = useState<ProjectMembership[]>();\n\n  const handleCode = useCallback(\n    (code: string): void => {\n      if (onCode) {\n        onCode(code);\n      } else {\n        medplum\n          .processCode(code)\n          .then(() => {\n            if (onSuccess) {\n              onSuccess();\n            }\n          })\n          .catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n      }\n    },\n    [medplum, onCode, onSuccess]\n  );\n\n  const handleAuthResponse = useCallback(\n    (response: LoginAuthenticationResponse): void => {\n      setAuthenticatorRequired(!!response.mfaRequired);\n\n      if (response.login) {\n        setLogin(response.login);\n      }\n\n      if (response.memberships) {\n        setMemberships(response.memberships);\n      }\n\n      if (response.code) {\n        if (chooseScopes) {\n          setMemberships(undefined);\n        } else {\n          handleCode(response.code as string);\n        }\n      }\n    },\n    [chooseScopes, handleCode]\n  );\n\n  const handleScopeResponse = useCallback(\n    (response: LoginAuthenticationResponse): void => {\n      handleCode(response.code as string);\n    },\n    [handleCode]\n  );\n\n  useEffect(() => {\n    // Beware the race condition here\n    // The `useMedplum` hook will return a new instance of the MedplumClient on login\n    // We do not want to request the login status again in that case\n    // Only request login status once\n    if (loginCode && !loginRequested.current && !login) {\n      loginRequested.current = true;\n      medplum\n        .get('auth/login/' + loginCode)\n        .then(handleAuthResponse)\n        .catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n    }\n  }, [medplum, loginCode, loginRequested, login, handleAuthResponse]);\n\n  return (\n    <Document width={450} px=\"sm\" py=\"md\">\n      {(() => {\n        if (!login) {\n          return (\n            <AuthenticationForm\n              onForgotPassword={onForgotPassword}\n              onRegister={onRegister}\n              handleAuthResponse={handleAuthResponse}\n              disableGoogleAuth={props.disableGoogleAuth}\n              disableEmailAuth={props.disableEmailAuth}\n              {...baseLoginRequest}\n            >\n              {props.children}\n            </AuthenticationForm>\n          );\n        } else if (mfaRequired) {\n          return <MfaForm login={login} handleAuthResponse={handleAuthResponse} />;\n        } else if (memberships) {\n          return <ChooseProfileForm login={login} memberships={memberships} handleAuthResponse={handleAuthResponse} />;\n        } else if (props.projectId === 'new') {\n          return <NewProjectForm login={login} handleAuthResponse={handleAuthResponse} />;\n        } else if (props.chooseScopes) {\n          return <ChooseScopeForm login={login} scope={props.scope} handleAuthResponse={handleScopeResponse} />;\n        } else {\n          return <div>Success</div>;\n        }\n      })()}\n    </Document>\n  );\n}\n", "import { Anchor, Button, Center, Checkbox, Divider, Group, PasswordInput, Stack, TextInput } from '@mantine/core';\nimport {\n  BaseLoginRequest,\n  GoogleCredentialResponse,\n  GoogleLoginRequest,\n  LoginAuthenticationResponse,\n  normalizeOperationOutcome,\n} from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ReactNode, useCallback, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { GoogleButton } from '../GoogleButton/GoogleButton';\nimport { getGoogleClientId } from '../GoogleButton/GoogleButton.utils';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\nimport { getErrorsForInput, getIssuesForExpression } from '../utils/outcomes';\n\nexport interface AuthenticationFormProps extends BaseLoginRequest {\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onForgotPassword?: () => void;\n  readonly onRegister?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly children?: ReactNode;\n}\n\nexport function AuthenticationForm(props: AuthenticationFormProps): JSX.Element {\n  const [email, setEmail] = useState<string>();\n\n  if (!email) {\n    return <EmailForm setEmail={setEmail} {...props} />;\n  } else {\n    return <PasswordForm email={email} {...props} />;\n  }\n}\n\nexport interface EmailFormProps extends BaseLoginRequest {\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onRegister?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly setEmail: (email: string) => void;\n  readonly children?: ReactNode;\n}\n\nexport function EmailForm(props: EmailFormProps): JSX.Element {\n  const { setEmail, onRegister, handleAuthResponse, children, disableEmailAuth, ...baseLoginRequest } = props;\n  const medplum = useMedplum();\n  const googleClientId = !props.disableGoogleAuth && getGoogleClientId(props.googleClientId);\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const issues = getIssuesForExpression(outcome, undefined);\n\n  const isExternalAuth = useCallback(\n    async (authMethod: any): Promise<boolean> => {\n      if (!authMethod.authorizeUrl) {\n        return false;\n      }\n\n      const state = JSON.stringify({\n        ...(await medplum.ensureCodeChallenge(baseLoginRequest)),\n        domain: authMethod.domain,\n      });\n      const url = new URL(authMethod.authorizeUrl);\n      url.searchParams.set('state', state);\n      window.location.assign(url.toString());\n      return true;\n    },\n    [medplum, baseLoginRequest]\n  );\n\n  const handleSubmit = useCallback(\n    async (formData: Record<string, string>) => {\n      const authMethod = await medplum.post('auth/method', { email: formData.email });\n      if (!(await isExternalAuth(authMethod))) {\n        setEmail(formData.email);\n      }\n    },\n    [medplum, isExternalAuth, setEmail]\n  );\n\n  const handleGoogleCredential = useCallback(\n    async (response: GoogleCredentialResponse) => {\n      try {\n        const authResponse = await medplum.startGoogleLogin({\n          ...baseLoginRequest,\n          googleCredential: response.credential,\n        } as GoogleLoginRequest);\n        if (!(await isExternalAuth(authResponse))) {\n          handleAuthResponse(authResponse);\n        }\n      } catch (err) {\n        setOutcome(normalizeOperationOutcome(err));\n      }\n    },\n    [medplum, baseLoginRequest, isExternalAuth, handleAuthResponse]\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Center style={{ flexDirection: 'column' }}>{children}</Center>\n      <OperationOutcomeAlert issues={issues} />\n      {googleClientId && (\n        <>\n          <Group justify=\"center\" p=\"xl\" style={{ height: 70 }}>\n            <GoogleButton googleClientId={googleClientId} handleGoogleCredential={handleGoogleCredential} />\n          </Group>\n          {!disableEmailAuth && <Divider label=\"or\" labelPosition=\"center\" my=\"lg\" />}\n        </>\n      )}\n      {!disableEmailAuth && (\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"name@domain.com\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'email')}\n        />\n      )}\n      <Group justify=\"space-between\" mt=\"xl\" gap={0} wrap=\"nowrap\">\n        <div>\n          {onRegister && (\n            <Anchor component=\"button\" type=\"button\" color=\"dimmed\" onClick={onRegister} size=\"xs\">\n              Register\n            </Anchor>\n          )}\n        </div>\n        {!disableEmailAuth && <Button type=\"submit\">Next</Button>}\n      </Group>\n    </Form>\n  );\n}\n\nexport interface PasswordFormProps extends BaseLoginRequest {\n  readonly email: string;\n  readonly onForgotPassword?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly children?: ReactNode;\n}\n\nexport function PasswordForm(props: PasswordFormProps): JSX.Element {\n  const { onForgotPassword, handleAuthResponse, children, ...baseLoginRequest } = props;\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const issues = getIssuesForExpression(outcome, undefined);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      medplum\n        .startLogin({\n          ...baseLoginRequest,\n          password: formData.password,\n          remember: formData.remember === 'on',\n        })\n        .then(handleAuthResponse)\n        .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n    },\n    [medplum, baseLoginRequest, handleAuthResponse]\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Center style={{ flexDirection: 'column' }}>{children}</Center>\n      <OperationOutcomeAlert issues={issues} />\n      <Stack gap=\"xl\">\n        <PasswordInput\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'password')}\n        />\n      </Stack>\n      <Group justify=\"space-between\" mt=\"xl\" gap={0} wrap=\"nowrap\">\n        {onForgotPassword && (\n          <Anchor component=\"button\" type=\"button\" c=\"dimmed\" onClick={onForgotPassword} size=\"xs\">\n            Forgot password\n          </Anchor>\n        )}\n        <Checkbox id=\"remember\" name=\"remember\" label=\"Remember me\" size=\"xs\" style={{ lineHeight: 1 }} />\n        <Button type=\"submit\">Sign in</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { Avatar, Combobox, Flex, Group, Stack, Text, TextInput, Title, useCombobox } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, ProjectMembership } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { useState } from 'react';\nimport { Logo } from '../Logo/Logo';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\n\nexport interface ChooseProfileFormProps {\n  readonly login: string;\n  readonly memberships: ProjectMembership[];\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function ChooseProfileForm(props: ChooseProfileFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const combobox = useCombobox();\n  const [search, setSearch] = useState('');\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n\n  function filterDisplay(display: string | undefined): boolean {\n    return !!display?.toLowerCase()?.includes(search.toLowerCase());\n  }\n\n  function filterMembership(membership: ProjectMembership): boolean {\n    return filterDisplay(membership.profile?.display) || filterDisplay(membership.project?.display);\n  }\n\n  function handleValueSelect(membershipId: string): void {\n    medplum\n      .post('auth/profile', {\n        login: props.login,\n        profile: membershipId,\n      })\n      .then(props.handleAuthResponse)\n      .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n  }\n\n  const options = props.memberships\n    .filter(filterMembership)\n    .slice(0, 10)\n    .map((item) => (\n      <Combobox.Option value={item.id as string} key={item.id}>\n        <SelectOption {...item} />\n      </Combobox.Option>\n    ));\n\n  return (\n    <Stack>\n      <Flex gap=\"md\" mb=\"md\" justify=\"center\" align=\"center\" direction=\"column\" wrap=\"nowrap\">\n        <Logo size={32} />\n        <Title order={3}>Choose profile</Title>\n      </Flex>\n      <OperationOutcomeAlert outcome={outcome} />\n      <Combobox store={combobox} onOptionSubmit={handleValueSelect}>\n        <Combobox.EventsTarget>\n          <TextInput\n            placeholder=\"Search\"\n            value={search}\n            onChange={(event) => {\n              setSearch(event.currentTarget.value);\n              combobox.updateSelectedOptionIndex();\n            }}\n          />\n        </Combobox.EventsTarget>\n\n        <div>\n          <Combobox.Options>\n            {options.length > 0 ? options : <Combobox.Empty>Nothing found...</Combobox.Empty>}\n          </Combobox.Options>\n        </div>\n      </Combobox>\n    </Stack>\n  );\n}\n\nfunction SelectOption(membership: ProjectMembership): JSX.Element {\n  return (\n    <Group>\n      <Avatar radius=\"xl\" />\n      <div>\n        <Text fz=\"sm\" fw={500}>\n          {membership.profile?.display}\n        </Text>\n        <Text fz=\"xs\" opacity={0.6}>\n          {membership.project?.display}\n        </Text>\n      </div>\n    </Group>\n  );\n}\n", "import { Button, Center, Checkbox, Group, Stack, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse } from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\n\nexport interface ChooseScopeFormProps {\n  readonly login: string;\n  readonly scope: string | undefined;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function ChooseScopeForm(props: ChooseScopeFormProps): JSX.Element {\n  const medplum = useMedplum();\n  return (\n    <Form\n      onSubmit={(formData: Record<string, string>) => {\n        medplum\n          .post('auth/scope', {\n            login: props.login,\n            scope: Object.keys(formData).join(' '),\n          })\n          .then(props.handleAuthResponse)\n          .catch(console.log);\n      }}\n    >\n      <Stack>\n        <Center style={{ flexDirection: 'column' }}>\n          <Logo size={32} />\n          <Title>Choose scope</Title>\n        </Center>\n        <Stack>\n          {(props.scope ?? 'openid').split(' ').map((scopeName: string) => (\n            <Checkbox key={scopeName} id={scopeName} name={scopeName} label={scopeName} defaultChecked />\n          ))}\n        </Stack>\n        <Group justify=\"flex-end\" mt=\"xl\">\n          <Button type=\"submit\">Set scope</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import { Alert, Button, Center, Group, Stack, TextInput, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeErrorString } from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\n\nexport interface MfaFormProps {\n  readonly login: string;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function MfaForm(props: MfaFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const [errorMessage, setErrorMessage] = useState<string>();\n  return (\n    <Form\n      onSubmit={(formData: Record<string, string>) => {\n        setErrorMessage(undefined);\n        medplum\n          .post('auth/mfa/verify', {\n            login: props.login,\n            token: formData.token,\n          })\n          .then(props.handleAuthResponse)\n          .catch((err) => setErrorMessage(normalizeErrorString(err)));\n      }}\n    >\n      <Stack>\n        <Center style={{ flexDirection: 'column' }}>\n          <Logo size={32} />\n          <Title>Enter MFA code</Title>\n        </Center>\n        {errorMessage && (\n          <Alert icon={<IconAlertCircle size={16} />} title=\"Error\" color=\"red\">\n            {errorMessage}\n          </Alert>\n        )}\n        <Stack>\n          <TextInput name=\"token\" label=\"MFA code\" required autoFocus />\n        </Stack>\n        <Group justify=\"flex-end\" mt=\"xl\">\n          <Button type=\"submit\">Submit code</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import {\n  ActionIcon,\n  Group,\n  LoadingOverlay,\n  Paper,\n  PaperProps,\n  ScrollArea,\n  Skeleton,\n  Stack,\n  TextInput,\n  Title,\n} from '@mantine/core';\nimport { useResizeObserver } from '@mantine/hooks';\nimport { showNotification } from '@mantine/notifications';\nimport { ProfileResource, getDisplayString, getReferenceString, normalizeErrorString } from '@medplum/core';\nimport { Bundle, Communication, Reference } from '@medplum/fhirtypes';\nimport { useMedplum, useResource, useSubscription } from '@medplum/react-hooks';\nimport { IconArrowRight } from '@tabler/icons-react';\nimport cx from 'clsx';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Form } from '../../Form/Form';\nimport { ResourceAvatar } from '../../ResourceAvatar/ResourceAvatar';\nimport classes from './BaseChat.module.css';\n\nfunction showError(message: string): void {\n  showNotification({\n    color: 'red',\n    title: 'Error',\n    message,\n    autoClose: false,\n  });\n}\n\nfunction parseSentTime(communication: Communication): string {\n  const sentTime = new Date(communication.sent ?? 0);\n  const sentTimeMins = sentTime.getMinutes().toString();\n  return `${sentTime.getHours()}:${sentTimeMins.length === 1 ? '0' : ''}${sentTimeMins}`;\n}\n\nfunction upsertCommunications(\n  communications: Communication[],\n  received: Communication[],\n  setCommunications: (communications: Communication[]) => void\n): void {\n  const newCommunications = [...communications];\n  let foundNew = false;\n  for (const comm of received) {\n    const existingIdx = newCommunications.findIndex((c) => c.id === comm.id);\n    if (existingIdx !== -1) {\n      newCommunications[existingIdx] = comm;\n    } else {\n      newCommunications.push(comm);\n      foundNew = true;\n    }\n  }\n\n  if (foundNew) {\n    newCommunications.sort((a, b) => (a.sent as string).localeCompare(b.sent as string));\n  }\n\n  setCommunications(newCommunications);\n}\n\nexport interface BaseChatProps extends PaperProps {\n  readonly title: string;\n  readonly communications: Communication[];\n  readonly setCommunications: (communications: Communication[]) => void;\n  readonly query: string;\n  readonly sendMessage: (content: string) => void;\n  readonly onMessageReceived?: (message: Communication) => void;\n  readonly onMessageUpdated?: (message: Communication) => void;\n  readonly inputDisabled?: boolean;\n  readonly onError?: (err: Error) => void;\n}\n\nexport function BaseChat(props: BaseChatProps): JSX.Element | null {\n  const {\n    title,\n    communications,\n    setCommunications,\n    query,\n    sendMessage,\n    onMessageReceived,\n    onMessageUpdated,\n    inputDisabled,\n    onError,\n    ...paperProps\n  } = props;\n  const medplum = useMedplum();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n  const firstScrollRef = useRef(true);\n  const initialLoadRef = useRef(true);\n\n  const [profile, setProfile] = useState(medplum.getProfile());\n  const [reconnecting, setReconnecting] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  if (!loading) {\n    initialLoadRef.current = false;\n  }\n\n  const profileRefStr = useMemo<string>(\n    () => (profile ? getReferenceString(medplum.getProfile() as ProfileResource) : ''),\n    [profile, medplum]\n  );\n\n  const searchMessages = useCallback(async (): Promise<void> => {\n    setLoading(true);\n    const searchParams = new URLSearchParams(query);\n    searchParams.append('_sort', '-sent');\n    const searchResult = await medplum.searchResources('Communication', searchParams, { cache: 'no-cache' });\n    upsertCommunications(communicationsRef.current, searchResult, setCommunications);\n    setLoading(false);\n  }, [medplum, setCommunications, query]);\n\n  useEffect(() => {\n    searchMessages().catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n  }, [searchMessages]);\n\n  useSubscription(\n    `Communication?${query}`,\n    (bundle: Bundle) => {\n      const communication = bundle.entry?.[1]?.resource as Communication;\n      upsertCommunications(communicationsRef.current, [communication], setCommunications);\n      // If we are the sender of this message, then we want to skip calling `onMessageUpdated` or `onMessageReceived`\n      if (getReferenceString(communication.sender as Reference) === profileRefStr) {\n        return;\n      }\n      // If this communication already exists, call `onMessageUpdated`\n      if (communicationsRef.current.find((c) => c.id === communication.id)) {\n        onMessageUpdated?.(communication);\n      } else {\n        // Else a new message was created\n        // Call `onMessageReceived` when we are not the sender of a chat message that came in\n        onMessageReceived?.(communication);\n      }\n    },\n    {\n      onWebSocketClose: useCallback(() => {\n        if (!reconnecting) {\n          setReconnecting(true);\n        }\n        showNotification({ color: 'red', message: 'Live chat disconnected. Attempting to reconnect...' });\n      }, [reconnecting]),\n      onWebSocketOpen: useCallback(() => {\n        if (reconnecting) {\n          showNotification({ color: 'green', message: 'Live chat reconnected.' });\n        }\n      }, [reconnecting]),\n      onSubscriptionConnect: useCallback(() => {\n        if (reconnecting) {\n          searchMessages().catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n          setReconnecting(false);\n        }\n      }, [reconnecting, searchMessages]),\n      onError: useCallback(\n        (err: Error) => {\n          if (onError) {\n            onError(err);\n          } else {\n            showError(normalizeErrorString(err));\n          }\n        },\n        [onError]\n      ),\n    }\n  );\n\n  const sendMessageInternal = useCallback(\n    (formData: Record<string, string>) => {\n      if (inputDisabled) {\n        return;\n      }\n      if (inputRef.current) {\n        inputRef.current.value = '';\n      }\n      sendMessage(formData.message);\n      scrollToBottomRef.current = true;\n    },\n    [inputDisabled, sendMessage]\n  );\n\n  // Disabled because we can make sure this will trigger an update when local profile !== medplum.getProfile()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const latestProfile = medplum.getProfile();\n    if (profile?.id !== latestProfile?.id) {\n      setProfile(latestProfile);\n      setCommunications([]);\n    }\n  });\n\n  const [parentRef, parentRect] = useResizeObserver<HTMLDivElement>();\n\n  const communicationsRef = useRef<Communication[]>(communications);\n  communicationsRef.current = communications;\n  const prevCommunicationsRef = useRef<Communication[]>(communications);\n\n  const scrollToBottomRef = useRef<boolean>(true);\n\n  useEffect(() => {\n    if (communications !== prevCommunicationsRef.current) {\n      scrollToBottomRef.current = true;\n    }\n    prevCommunicationsRef.current = communications;\n  }, [communications]);\n\n  useEffect(() => {\n    if (scrollToBottomRef.current) {\n      if (scrollAreaRef.current?.scrollTo) {\n        scrollAreaRef.current.scrollTo({\n          top: scrollAreaRef.current.scrollHeight,\n          // We want to skip scrolling through the whole chat on initial load,\n          // Then every time after we will do the \"smooth scroll\"\n          ...(firstScrollRef.current ? { duration: 0 } : { behavior: 'smooth' }),\n        });\n        firstScrollRef.current = false;\n        scrollToBottomRef.current = false;\n      }\n    }\n  });\n\n  const myLastDeliveredId = useMemo<string>(() => {\n    let i = communications.length;\n\n    while (i--) {\n      const comm = communications[i];\n      if (comm.sender?.reference === profileRefStr && comm.received) {\n        return comm.id as string;\n      }\n    }\n\n    return '';\n  }, [communications, profileRefStr]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Paper className={classes.chatPaper} p={0} radius=\"md\" {...paperProps}>\n      <Title order={2} className={classes.chatTitle}>\n        {title}\n      </Title>\n      <div className={classes.chatBody} ref={parentRef}>\n        {initialLoadRef.current ? (\n          <Stack key=\"skeleton-chat-messages\" align=\"stretch\" mt=\"lg\">\n            <Group justify=\"flex-start\" align=\"flex-end\" gap=\"xs\" mb=\"sm\">\n              <Skeleton height={38} circle ml=\"md\" />\n              <ChatBubbleSkeleton alignment=\"left\" parentWidth={parentRect.width} />\n            </Group>\n            <Group justify=\"flex-end\" align=\"flex-end\" gap=\"xs\" mb=\"sm\">\n              <ChatBubbleSkeleton alignment=\"right\" parentWidth={parentRect.width} />\n              <Skeleton height={38} circle mr=\"md\" />\n            </Group>\n            <Group justify=\"flex-start\" align=\"flex-end\" gap=\"xs\" mb=\"sm\">\n              <Skeleton height={38} circle ml=\"md\" />\n              <ChatBubbleSkeleton alignment=\"left\" parentWidth={parentRect.width} />\n            </Group>\n          </Stack>\n        ) : (\n          <ScrollArea viewportRef={scrollAreaRef} className={classes.chatScrollArea} h={parentRect.height}>\n            {/* We don't wrap our scrollarea or scrollarea children with this overlay since it seems to break the rendering of the virtual scroll element */}\n            {/* Instead we manually set the width and height to match the parent and use absolute positioning */}\n            <LoadingOverlay\n              visible={loading || reconnecting}\n              style={{ width: parentRect.width, height: parentRect.height, position: 'absolute', zIndex: 1 }}\n            />\n            {communications.map((c, i) => {\n              const prevCommunication = i > 0 ? communications[i - 1] : undefined;\n              const prevCommTime = prevCommunication ? parseSentTime(prevCommunication) : undefined;\n              const currCommTime = parseSentTime(c);\n              return (\n                <Stack key={`${c.id}--${c.meta?.versionId ?? 'no-version'}`} align=\"stretch\">\n                  {(!prevCommTime || currCommTime !== prevCommTime) && (\n                    <div style={{ textAlign: 'center' }}>{currCommTime}</div>\n                  )}\n                  {c.sender?.reference === profileRefStr ? (\n                    <Group justify=\"flex-end\" align=\"flex-end\" gap=\"xs\" mb=\"sm\">\n                      <ChatBubble\n                        alignment=\"right\"\n                        communication={c}\n                        showDelivered={!!c.received && c.id === myLastDeliveredId}\n                      />\n                      <ResourceAvatar radius=\"xl\" color=\"orange\" value={c.sender} />\n                    </Group>\n                  ) : (\n                    <Group justify=\"flex-start\" align=\"flex-end\" gap=\"xs\" mb=\"sm\">\n                      <ResourceAvatar radius=\"xl\" value={c.sender} />\n                      <ChatBubble alignment=\"left\" communication={c} />\n                    </Group>\n                  )}\n                </Stack>\n              );\n            })}\n          </ScrollArea>\n        )}\n      </div>\n      <div className={classes.chatInputContainer}>\n        <Form onSubmit={sendMessageInternal}>\n          <TextInput\n            ref={inputRef}\n            name=\"message\"\n            placeholder={!inputDisabled ? 'Type a message...' : 'Replies are disabled'}\n            radius=\"xl\"\n            rightSectionWidth={42}\n            disabled={inputDisabled}\n            rightSection={\n              !inputDisabled ? (\n                <ActionIcon\n                  type=\"submit\"\n                  size=\"1.5rem\"\n                  radius=\"xl\"\n                  color=\"blue\"\n                  variant=\"filled\"\n                  aria-label=\"Send message\"\n                >\n                  <IconArrowRight size=\"1rem\" stroke={1.5} />\n                </ActionIcon>\n              ) : undefined\n            }\n          />\n        </Form>\n      </div>\n    </Paper>\n  );\n}\n\ninterface ChatBubbleProps {\n  readonly communication: Communication;\n  readonly alignment: 'left' | 'right';\n  readonly showDelivered?: boolean;\n}\n\nfunction ChatBubble(props: ChatBubbleProps): JSX.Element {\n  const { communication, alignment, showDelivered } = props;\n  const content = communication.payload?.[0]?.contentString || '';\n  const seenTime = new Date(communication.received ?? -1);\n  const senderResource = useResource(communication.sender);\n  return (\n    <div className={classes.chatBubbleOuterWrap}>\n      <div\n        className={cx(classes.chatBubbleName, alignment === 'right' && classes.chatBubbleNameRight)}\n        aria-label=\"Sender name\"\n      >\n        {senderResource ? getDisplayString(senderResource) : '[Unknown sender]'}\n      </div>\n      <div\n        className={\n          alignment === 'left' ? classes.chatBubbleLeftAlignedInnerWrap : classes.chatBubbleRightAlignedInnerWrap\n        }\n      >\n        <div className={classes.chatBubble}>{content}</div>\n      </div>\n      {showDelivered && (\n        <div style={{ textAlign: 'right' }}>\n          Delivered {seenTime.getHours()}:{seenTime.getMinutes().toString().length === 1 ? '0' : ''}\n          {seenTime.getMinutes()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport interface ChatBubbleSkeletonProps {\n  readonly alignment: 'left' | 'right';\n  readonly parentWidth: number;\n}\n\nfunction ChatBubbleSkeleton(props: ChatBubbleSkeletonProps): JSX.Element {\n  const { alignment, parentWidth } = props;\n  return (\n    <div className={classes.chatBubbleOuterWrap}>\n      <div className={classes.chatBubbleName} aria-label=\"Placeholder sender name\">\n        <div style={{ position: 'relative' }}>\n          <Skeleton\n            height={14}\n            width=\"100px\"\n            radius=\"l\"\n            ml={alignment === 'left' ? 'sm' : undefined}\n            style={alignment === 'right' ? { position: 'absolute', right: 5, top: -15 } : undefined}\n          />\n        </div>\n      </div>\n      <div\n        className={\n          alignment === 'left' ? classes.chatBubbleLeftAlignedInnerWrap : classes.chatBubbleRightAlignedInnerWrap\n        }\n      >\n        <div className={classes.chatBubble}>\n          <Skeleton height={14} width={parentWidth * 0.5} radius=\"l\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n", ".chatPaper {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.chatTitle {\n  background-color: light-dark(var(--mantine-color-blue-7), var(--mantine-color-blue-8));\n  color: light-dark(var(--mantine-color-white), var(--mantine-color-gray-3));\n  font-size: var(--mantine-font-size-sm);\n  font-weight: 500;\n  padding: var(--mantine-spacing-sm);\n  user-select: none;\n}\n\n.chatBody {\n  background-color: var(--mantine-color-body);\n  flex: 1;\n  position: relative;\n}\n\n.chatScrollArea {\n  padding: var(--mantine-spacing-xs);\n}\n\n.chatInputContainer {\n  background-color: light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-4));\n  padding: 6px 8px;\n}\n\n.chatBubbleOuterWrap {\n  max-width: 75%;\n  padding-bottom: 10px;\n}\n\n.chatBubbleRightAlignedInnerWrap {\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.chatBubbleLeftAlignedInnerWrap {\n  display: flex;\n  flex-direction: row;\n}\n\n.chatBubble {\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-blue-7));\n  border-radius: var(--mantine-radius-lg);\n  padding: var(--mantine-spacing-sm);\n  min-width: 40px;\n  color: light-dark(var(--mantine-color-dark), var(--mantine-color-gray-2));\n\n  & p {\n    margin-top: 0.25rem;\n    margin-bottom: 0.25rem;\n  }\n\n  & pre {\n    max-width: 280px;\n    overflow: auto;\n  }\n}\n\n.chatBubbleName {\n  margin-bottom: 5px;\n  font-weight: 500;\n}\n\n.chatBubbleNameRight {\n  text-align: right;\n}\n", "import { ActionIcon } from '@mantine/core';\nimport { useMedplumProfile } from '@medplum/react-hooks';\nimport { IconChevronDown, IconChevronUp } from '@tabler/icons-react';\nimport { ReactNode, useEffect, useState } from 'react';\nimport classes from './ChatModal.module.css';\n\nexport interface ChatModalProps {\n  readonly open?: boolean;\n  readonly children: ReactNode;\n}\n\nexport function ChatModal(props: ChatModalProps): JSX.Element | null {\n  const { open, children } = props;\n  const profile = useMedplumProfile();\n  const [opened, setOpened] = useState(open ?? false);\n\n  useEffect(() => {\n    setOpened((prevVal) => open ?? prevVal);\n  }, [open]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <>\n      {opened && <div className={classes.chatModalContainer}>{children}</div>}\n      {opened ? (\n        <div className={classes.iconContainer}>\n          <ActionIcon\n            className={classes.icon}\n            color=\"blue\"\n            size=\"lg\"\n            radius=\"xl\"\n            variant=\"outline\"\n            onClick={() => setOpened(false)}\n            aria-label=\"Close chat\"\n          >\n            <IconChevronDown size=\"1.625rem\" />\n          </ActionIcon>\n        </div>\n      ) : (\n        <div className={classes.iconContainer}>\n          <ActionIcon\n            className={classes.icon}\n            color=\"blue\"\n            size=\"lg\"\n            radius=\"xl\"\n            variant=\"outline\"\n            onClick={() => setOpened(true)}\n            aria-label=\"Open chat\"\n          >\n            <IconChevronUp size=\"1.625rem\" />\n          </ActionIcon>\n        </div>\n      )}\n    </>\n  );\n}\n", ".iconContainer {\n  position: fixed;\n  bottom: 0.5rem;\n  right: 0.5rem;\n  z-index: 100px;\n}\n\n.icon {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n  box-shadow:\n    0 0.2rem 0.4rem rgba(0, 0, 0, 0.05),\n    0 0.2rem 0.4rem rgba(0, 0, 0, 0.1);\n}\n\n.chatModalContainer {\n  position: fixed;\n  bottom: 3rem;\n  right: 0.5rem;\n  z-index: 100px;\n  width: 400px;\n  height: 450px;\n  max-height: 450px;\n  overflow: hidden;\n  border-radius: var(--mantine-radius-md);\n  box-shadow:\n    0 0.2rem 0.4rem rgba(0, 0, 0, 0.05),\n    0 0.2rem 0.4rem rgba(0, 0, 0, 0.1);\n}\n", "import { ProfileResource, createReference, formatCodeableConcept, getReferenceString } from '@medplum/core';\nimport { Communication } from '@medplum/fhirtypes';\nimport { useMedplum, useMedplumProfile, usePrevious } from '@medplum/react-hooks';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { BaseChat } from '../BaseChat/BaseChat';\n\nexport interface ThreadChatProps {\n  readonly thread: Communication;\n  readonly title?: string;\n  readonly onMessageSent?: (message: Communication) => void;\n  readonly inputDisabled?: boolean;\n  readonly onError?: (err: Error) => void;\n}\n\nexport function ThreadChat(props: ThreadChatProps): JSX.Element | null {\n  const { thread, title, onMessageSent, inputDisabled, onError } = props;\n  const medplum = useMedplum();\n  const profile = useMedplumProfile();\n  const prevThreadId = usePrevious<string | undefined>(thread?.id);\n  const [communications, setCommunications] = useState<Communication[]>([]);\n\n  const profileRef = useMemo(() => (profile ? createReference(profile as ProfileResource) : undefined), [profile]);\n  const threadRef = useMemo(() => createReference(thread), [thread]);\n\n  useEffect(() => {\n    if (thread?.id !== prevThreadId) {\n      setCommunications([]);\n    }\n  }, [thread?.id, prevThreadId]);\n\n  const sendMessage = useCallback(\n    (message: string) => {\n      const profileRefStr = profileRef ? getReferenceString(profileRef) : undefined;\n      if (!profileRefStr) {\n        return;\n      }\n      medplum\n        .createResource<Communication>({\n          resourceType: 'Communication',\n          status: 'in-progress',\n          sender: profileRef,\n          recipient: thread.recipient?.filter((ref) => getReferenceString(ref) !== profileRefStr) ?? [],\n          sent: new Date().toISOString(),\n          payload: [{ contentString: message }],\n          partOf: [threadRef],\n        })\n        .then((communication) => {\n          setCommunications([...communications, communication]);\n          onMessageSent?.(communication);\n        })\n        .catch(console.error);\n    },\n    [medplum, profileRef, thread, threadRef, communications, onMessageSent]\n  );\n\n  // Currently we only support `delivered` on chats with 2 participants\n  // Normally we would use `useCallback` to memoize a function\n  // But in this case we only want to conditionally pass a function if the thread has 2 participants...\n  // If the thread has 3 or more participants, we do not pass this function; instead we pass undefined\n  const onMessageReceived = useMemo(\n    () =>\n      thread.recipient?.length === 2\n        ? (message: Communication): void => {\n            if (!(message.received && message.status === 'completed')) {\n              medplum\n                .updateResource<Communication>({\n                  ...message,\n                  received: message.received ?? new Date().toISOString(), // Mark as received if needed\n                  status: 'completed', // Mark as 'read'\n                  // See: https://www.medplum.com/docs/communications/organizing-communications#:~:text=THE%20Communication%20LIFECYCLE\n                  // for more info about recommended `Communication` lifecycle\n                })\n                .catch(console.error);\n            }\n          }\n        : undefined,\n    [medplum, thread.recipient?.length]\n  );\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <BaseChat\n      title={title ?? (thread?.topic ? formatCodeableConcept(thread.topic) : '[No thread title]')}\n      communications={communications}\n      setCommunications={setCommunications}\n      query={`part-of=Communication/${thread.id as string}`}\n      sendMessage={sendMessage}\n      onMessageReceived={onMessageReceived}\n      inputDisabled={inputDisabled}\n      onError={onError}\n    />\n  );\n}\n", "import { useSyncExternalStore } from 'react';\n\nexport type MantineStoreSubscriber<Value> = (value: Value) => void;\ntype SetStateCallback<Value> = (value: Value) => Value;\n\nexport interface MantineStore<Value> {\n  getState: () => Value;\n  setState: (value: Value | SetStateCallback<Value>) => void;\n  updateState: (value: Value | SetStateCallback<Value>) => void;\n  initialize: (value: Value) => void;\n  subscribe: (callback: MantineStoreSubscriber<Value>) => () => void;\n}\n\nexport type MantineStoreValue<Store extends MantineStore<any>> = ReturnType<Store['getState']>;\n\nexport function createStore<Value extends Record<string, any>>(\n  initialState: Value\n): MantineStore<Value> {\n  let state = initialState;\n  let initialized = false;\n  const listeners = new Set<MantineStoreSubscriber<Value>>();\n\n  return {\n    getState() {\n      return state;\n    },\n\n    updateState(value) {\n      state = typeof value === 'function' ? value(state) : value;\n    },\n\n    setState(value) {\n      this.updateState(value);\n      listeners.forEach((listener) => listener(state));\n    },\n\n    initialize(value) {\n      if (!initialized) {\n        state = value;\n        initialized = true;\n      }\n    },\n\n    subscribe(callback) {\n      listeners.add(callback);\n      return () => listeners.delete(callback);\n    },\n  };\n}\n\nexport function useStore<Store extends MantineStore<any>>(store: Store) {\n  return useSyncExternalStore<MantineStoreValue<Store>>(\n    store.subscribe,\n    () => store.getState(),\n    () => store.getState()\n  );\n}\n", "import { NotificationProps } from '@mantine/core';\nimport { randomId } from '@mantine/hooks';\nimport { createStore, MantineStore, useStore } from '@mantine/store';\n\nexport type NotificationPosition =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport interface NotificationData\n  extends Omit<NotificationProps, 'onClose'>,\n    Record<`data-${string}`, any> {\n  /** Notification id, can be used to close or update notification */\n  id?: string;\n\n  /** Position of the notification, if not set, the position is determined based on `position` prop on Notifications component */\n  position?: NotificationPosition;\n\n  /** Notification message, required for all notifications */\n  message: React.ReactNode;\n\n  /** Determines whether notification should be closed automatically,\n   *  number is auto close timeout in ms, overrides `autoClose` from `Notifications`\n   * */\n  autoClose?: boolean | number;\n\n  /** Called when notification closes */\n  onClose?: (props: NotificationData) => void;\n\n  /** Called when notification opens */\n  onOpen?: (props: NotificationData) => void;\n}\n\nexport interface NotificationsState {\n  notifications: NotificationData[];\n  queue: NotificationData[];\n  defaultPosition: NotificationPosition;\n  limit: number;\n}\n\nexport type NotificationsStore = MantineStore<NotificationsState>;\n\nfunction getDistributedNotifications(\n  data: NotificationData[],\n  defaultPosition: NotificationPosition,\n  limit: number\n) {\n  const queue: NotificationData[] = [];\n  const notifications: NotificationData[] = [];\n  const count: Record<string, number> = {};\n\n  for (const item of data) {\n    const position = item.position || defaultPosition;\n    count[position] = count[position] || 0;\n    count[position] += 1;\n\n    if (count[position] <= limit) {\n      notifications.push(item);\n    } else {\n      queue.push(item);\n    }\n  }\n\n  return { notifications, queue };\n}\n\nexport const createNotificationsStore = () =>\n  createStore<NotificationsState>({\n    notifications: [],\n    queue: [],\n    defaultPosition: 'bottom-right',\n    limit: 5,\n  });\n\nexport const notificationsStore = createNotificationsStore();\nexport const useNotifications = (store: NotificationsStore = notificationsStore) => useStore(store);\n\nexport function updateNotificationsState(\n  store: NotificationsStore,\n  update: (notifications: NotificationData[]) => NotificationData[]\n) {\n  const state = store.getState();\n  const notifications = update([...state.notifications, ...state.queue]);\n  const updated = getDistributedNotifications(notifications, state.defaultPosition, state.limit);\n\n  store.setState({\n    notifications: updated.notifications,\n    queue: updated.queue,\n    limit: state.limit,\n    defaultPosition: state.defaultPosition,\n  });\n}\n\nexport function showNotification(\n  notification: NotificationData,\n  store: NotificationsStore = notificationsStore\n) {\n  const id = notification.id || randomId();\n\n  updateNotificationsState(store, (notifications) => {\n    if (notification.id && notifications.some((n) => n.id === notification.id)) {\n      return notifications;\n    }\n\n    return [...notifications, { ...notification, id }];\n  });\n\n  return id;\n}\n\nexport function hideNotification(id: string, store: NotificationsStore = notificationsStore) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.filter((notification) => {\n      if (notification.id === id) {\n        notification.onClose?.(notification);\n        return false;\n      }\n\n      return true;\n    })\n  );\n\n  return id;\n}\n\nexport function updateNotification(\n  notification: NotificationData,\n  store: NotificationsStore = notificationsStore\n) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.map((item) => {\n      if (item.id === notification.id) {\n        return { ...item, ...notification };\n      }\n\n      return item;\n    })\n  );\n\n  return notification.id;\n}\n\nexport function cleanNotifications(store: NotificationsStore = notificationsStore) {\n  updateNotificationsState(store, () => []);\n}\n\nexport function cleanNotificationsQueue(store: NotificationsStore = notificationsStore) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.slice(0, store.getState().limit)\n  );\n}\n\nexport const notifications = {\n  show: showNotification,\n  hide: hideNotification,\n  update: updateNotification,\n  clean: cleanNotifications,\n  cleanQueue: cleanNotificationsQueue,\n  updateState: updateNotificationsState,\n} as const;\n", "function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };", "import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;", "/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}", "import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}", "function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;", "export default {\n  disabled: false\n};", "import PropTypes from 'prop-types';\nexport var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n  enter: PropTypes.number,\n  exit: PropTypes.number,\n  appear: PropTypes.number\n}).isRequired]) : null;\nexport var classNamesShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  enter: PropTypes.string,\n  exit: PropTypes.string,\n  active: PropTypes.string\n}), PropTypes.shape({\n  enter: PropTypes.string,\n  enterDone: PropTypes.string,\n  enterActive: PropTypes.string,\n  exit: PropTypes.string,\n  exitDone: PropTypes.string,\n  exitActive: PropTypes.string\n})]) : null;", "import React from 'react';\nexport default React.createContext(null);", "export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TransitionGroup from './TransitionGroup';\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n    var child = React.Children.toArray(children)[idx];\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n\n    if (this.props[handler]) {\n      var maybeNode = child.props.nodeRef ? undefined : ReactDOM.findDOMNode(this);\n      this.props[handler](maybeNode);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = React.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return /*#__PURE__*/React.createElement(TransitionGroup, props, inProp ? React.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : React.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(React.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: PropTypes.bool.isRequired,\n  children: function children(props, propName) {\n    if (React.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nexport default ReplaceTransition;", "function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;", "import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;", "import { NotificationData, NotificationPosition } from '../notifications.store';\n\nexport type GroupedNotifications = Record<NotificationPosition, NotificationData[]>;\n\nexport const positions: NotificationPosition[] = [\n  'bottom-center',\n  'bottom-left',\n  'bottom-right',\n  'top-center',\n  'top-left',\n  'top-right',\n];\n\nexport function getGroupedNotifications(\n  notifications: NotificationData[],\n  defaultPosition: NotificationPosition\n) {\n  return notifications.reduce<GroupedNotifications>(\n    (acc, notification) => {\n      acc[notification.position || defaultPosition].push(notification);\n      return acc;\n    },\n    positions.reduce<GroupedNotifications>((acc, item) => {\n      acc[item] = [];\n      return acc;\n    }, {} as GroupedNotifications)\n  );\n}\n", "import { TransitionStatus } from 'react-transition-group';\nimport type { NotificationsProps } from './Notifications';\n\ninterface NotificationStateStylesProps {\n  state: TransitionStatus;\n  maxHeight: number | string;\n  position: NotificationsProps['position'];\n  transitionDuration: number;\n}\n\nconst transforms = {\n  left: 'translateX(-100%)',\n  right: 'translateX(100%)',\n  'top-center': 'translateY(-100%)',\n  'bottom-center': 'translateY(100%)',\n};\n\nconst noTransform = {\n  left: 'translateX(0)',\n  right: 'translateX(0)',\n  'top-center': 'translateY(0)',\n  'bottom-center': 'translateY(0)',\n};\n\nexport function getNotificationStateStyles({\n  state,\n  maxHeight,\n  position,\n  transitionDuration,\n}: NotificationStateStylesProps): React.CSSProperties {\n  const [vertical, horizontal] = position!.split('-');\n  const property = (\n    horizontal === 'center' ? `${vertical}-center` : horizontal\n  ) as keyof typeof transforms;\n\n  const commonStyles: React.CSSProperties = {\n    opacity: 0,\n    maxHeight,\n    transform: transforms[property],\n    transitionDuration: `${transitionDuration}ms, ${transitionDuration}ms, ${transitionDuration}ms`,\n    transitionTimingFunction: 'cubic-bezier(.51,.3,0,1.21), cubic-bezier(.51,.3,0,1.21), linear',\n    transitionProperty: 'opacity, transform, max-height',\n  };\n\n  const inState: React.CSSProperties = {\n    opacity: 1,\n    transform: noTransform[property],\n  };\n\n  const outState: React.CSSProperties = {\n    opacity: 0,\n    maxHeight: 0,\n    transform: transforms[property],\n  };\n\n  const transitionStyles = {\n    entering: inState,\n    entered: inState,\n    exiting: outState,\n    exited: outState,\n  };\n\n  return { ...commonStyles, ...transitionStyles[state as keyof typeof transitionStyles] };\n}\n", "export function getAutoClose(\n  autoClose: boolean | number | undefined,\n  notificationAutoClose: boolean | number | undefined\n) {\n  if (typeof notificationAutoClose === 'number') {\n    return notificationAutoClose;\n  }\n\n  if (notificationAutoClose === false || autoClose === false) {\n    return false;\n  }\n\n  return autoClose;\n}\n", "import { forwardRef, useEffect, useRef } from 'react';\nimport { Notification, NotificationProps } from '@mantine/core';\nimport { getAutoClose } from './get-auto-close/get-auto-close';\nimport { NotificationData } from './notifications.store';\n\ninterface NotificationContainerProps extends NotificationProps {\n  data: NotificationData;\n  onHide: (id: string) => void;\n  autoClose: number | false;\n}\n\nexport const NotificationContainer = forwardRef<HTMLDivElement, NotificationContainerProps>(\n  ({ data, onHide, autoClose, ...others }, ref) => {\n    const { autoClose: _autoClose, message, ...notificationProps } = data;\n    const autoCloseDuration = getAutoClose(autoClose, data.autoClose);\n    const autoCloseTimeout = useRef<number>();\n\n    const cancelAutoClose = () => window.clearTimeout(autoCloseTimeout.current);\n\n    const handleHide = () => {\n      onHide(data.id!);\n      cancelAutoClose();\n    };\n\n    const handleAutoClose = () => {\n      if (typeof autoCloseDuration === 'number') {\n        autoCloseTimeout.current = window.setTimeout(handleHide, autoCloseDuration);\n      }\n    };\n\n    useEffect(() => {\n      data.onOpen?.(data);\n    }, []);\n\n    useEffect(() => {\n      handleAutoClose();\n      return cancelAutoClose;\n    }, [autoCloseDuration]);\n\n    return (\n      <Notification\n        {...others}\n        {...notificationProps}\n        onClose={handleHide}\n        ref={ref}\n        onMouseEnter={cancelAutoClose}\n        onMouseLeave={handleAutoClose}\n      >\n        {message}\n      </Notification>\n    );\n  }\n);\n\nNotificationContainer.displayName = '@mantine/notifications/NotificationContainer';\n", "'use client';\nvar classes = {\"root\":\"m_b37d9ac7\",\"notification\":\"m_5ed0edd0\"};\n\nexport { classes as default };\n//# sourceMappingURL=Notifications.module.css.mjs.map\n", "import { useEffect, useRef } from 'react';\nimport {\n  Transition as _Transition,\n  TransitionGroup,\n  TransitionStatus,\n} from 'react-transition-group';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  OptionalPortal,\n  PortalProps,\n  rem,\n  RemoveScroll,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '@mantine/core';\nimport { useDidUpdate, useForceUpdate, useReducedMotion } from '@mantine/hooks';\nimport {\n  getGroupedNotifications,\n  positions,\n} from './get-grouped-notifications/get-grouped-notifications';\nimport { getNotificationStateStyles } from './get-notification-state-styles';\nimport { NotificationContainer } from './NotificationContainer';\nimport {\n  hideNotification,\n  NotificationPosition,\n  notifications,\n  NotificationsStore,\n  notificationsStore,\n  useNotifications,\n} from './notifications.store';\nimport classes from './Notifications.module.css';\n\nconst Transition: any = _Transition;\n\nexport type NotificationsStylesNames = 'root' | 'notification';\nexport type NotificationsCssVariables = {\n  root: '--notifications-z-index' | '--notifications-container-width';\n};\n\nexport interface NotificationsProps\n  extends BoxProps,\n    StylesApiProps<NotificationsFactory>,\n    ElementProps<'div'> {\n  /** Notifications default position, `'bottom-right'` by default */\n  position?: NotificationPosition;\n\n  /** Auto close timeout for all notifications in ms, `false` to disable auto close, can be overwritten for individual notifications in `notifications.show` function, `4000` by default */\n  autoClose?: number | false;\n\n  /** Notification transition duration in ms, `250` by default */\n  transitionDuration?: number;\n\n  /** Notification width, cannot exceed 100%, `440` by default */\n  containerWidth?: number | string;\n\n  /** Notification `max-height`, used for transitions, `200` by default */\n  notificationMaxHeight?: number | string;\n\n  /** Maximum number of notifications displayed at a time, other new notifications will be added to queue, `5` by default */\n  limit?: number;\n\n  /** Notifications container z-index, `400` by default */\n  zIndex?: string | number;\n\n  /** Props passed down to the `Portal` component */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Store for notifications state, can be used to create multiple instances of notifications system in your application */\n  store?: NotificationsStore;\n\n  /** Determines whether notifications container should be rendered inside `Portal`, `true` by default */\n  withinPortal?: boolean;\n}\n\nexport type NotificationsFactory = Factory<{\n  props: NotificationsProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationsStylesNames;\n  vars: NotificationsCssVariables;\n  staticComponents: {\n    show: typeof notifications.show;\n    hide: typeof notifications.hide;\n    update: typeof notifications.update;\n    clean: typeof notifications.clean;\n    cleanQueue: typeof notifications.cleanQueue;\n    updateState: typeof notifications.updateState;\n  };\n}>;\n\nconst defaultProps: Partial<NotificationsProps> = {\n  position: 'bottom-right',\n  autoClose: 4000,\n  transitionDuration: 250,\n  containerWidth: 440,\n  notificationMaxHeight: 200,\n  limit: 5,\n  zIndex: getDefaultZIndex('overlay'),\n  store: notificationsStore,\n  withinPortal: true,\n};\n\nconst varsResolver = createVarsResolver<NotificationsFactory>((_, { zIndex, containerWidth }) => ({\n  root: {\n    '--notifications-z-index': zIndex?.toString(),\n    '--notifications-container-width': rem(containerWidth),\n  },\n}));\n\nexport const Notifications = factory<NotificationsFactory>((_props, ref) => {\n  const props = useProps('Notifications', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    position,\n    autoClose,\n    transitionDuration,\n    containerWidth,\n    notificationMaxHeight,\n    limit,\n    zIndex,\n    store,\n    portalProps,\n    withinPortal,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const data = useNotifications(store);\n  const forceUpdate = useForceUpdate();\n  const shouldReduceMotion = useReducedMotion();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n\n  const getStyles = useStyles<NotificationsFactory>({\n    name: 'Notifications',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  useEffect(() => {\n    store?.updateState((current) => ({\n      ...current,\n      limit: limit || 5,\n      defaultPosition: position!,\n    }));\n  }, [limit, position]);\n\n  useDidUpdate(() => {\n    if (data.notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = data.notifications.length;\n  }, [data.notifications]);\n\n  const grouped = getGroupedNotifications(data.notifications, position!);\n  const groupedComponents = positions.reduce(\n    (acc, pos) => {\n      acc[pos] = grouped[pos].map(({ style: notificationStyle, ...notification }) => (\n        <Transition\n          key={notification.id}\n          timeout={duration}\n          onEnter={() => refs.current[notification.id!].offsetHeight}\n          nodeRef={{ current: refs.current[notification.id!] }}\n        >\n          {(state: TransitionStatus) => (\n            <NotificationContainer\n              ref={(node) => {\n                refs.current[notification.id!] = node!;\n              }}\n              data={notification}\n              onHide={(id) => hideNotification(id, store)}\n              autoClose={autoClose!}\n              {...getStyles('notification', {\n                style: {\n                  ...getNotificationStateStyles({\n                    state,\n                    position: pos,\n                    transitionDuration: duration!,\n                    maxHeight: notificationMaxHeight!,\n                  }),\n                  ...notificationStyle,\n                },\n              })}\n            />\n          )}\n        </Transition>\n      ));\n\n      return acc;\n    },\n    {} as Record<NotificationPosition, React.ReactNode>\n  );\n\n  return (\n    <OptionalPortal withinPortal={withinPortal} {...portalProps}>\n      <Box {...getStyles('root')} data-position=\"top-center\" ref={ref} {...others}>\n        <TransitionGroup>{groupedComponents['top-center']}</TransitionGroup>\n      </Box>\n\n      <Box {...getStyles('root')} data-position=\"top-left\" {...others}>\n        <TransitionGroup>{groupedComponents['top-left']}</TransitionGroup>\n      </Box>\n\n      <Box\n        {...getStyles('root', { className: RemoveScroll.classNames.fullWidth })}\n        data-position=\"top-right\"\n        {...others}\n      >\n        <TransitionGroup>{groupedComponents['top-right']}</TransitionGroup>\n      </Box>\n\n      <Box\n        {...getStyles('root', { className: RemoveScroll.classNames.fullWidth })}\n        data-position=\"bottom-right\"\n        {...others}\n      >\n        <TransitionGroup>{groupedComponents['bottom-right']}</TransitionGroup>\n      </Box>\n\n      <Box {...getStyles('root')} data-position=\"bottom-left\" {...others}>\n        <TransitionGroup>{groupedComponents['bottom-left']}</TransitionGroup>\n      </Box>\n\n      <Box {...getStyles('root')} data-position=\"bottom-center\" {...others}>\n        <TransitionGroup>{groupedComponents['bottom-center']}</TransitionGroup>\n      </Box>\n    </OptionalPortal>\n  );\n});\n\nNotifications.classes = classes;\nNotifications.displayName = '@mantine/notifications/Notifications';\nNotifications.show = notifications.show;\nNotifications.hide = notifications.hide;\nNotifications.update = notifications.update;\nNotifications.clean = notifications.clean;\nNotifications.cleanQueue = notifications.cleanQueue;\nNotifications.updateState = notifications.updateState;\n"],
  "mappings": "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",
  "names": ["Element", "Fragment", "Suspense", "values", "isValidElement", "y", "data", "i", "checker", "import_react", "import_react", "import_react", "import_react", "reactContext", "createContext", "useMedplumContext", "useContext", "useMedplum", "useMedplumNavigate", "useMedplumProfile", "EVENTS_TO_TRACK", "MedplumProvider", "props", "medplum", "navigate", "defaultNavigate", "state", "setState", "useState", "useEffect", "eventListener", "s", "event", "medplumContext", "useMemo", "jsx", "path", "urls", "useCachedBinaryUrl", "binaryUrl", "binaryResourceUrl", "binaryUrlSearchParams", "binaryUrlExpires", "cachedUrl", "expires", "usePrevious", "value", "ref", "useRef", "useResource", "setOutcome", "resource", "setResource", "getInitialResource", "setResourceIfChanged", "useCallback", "r", "deepEquals", "subscribed", "newValue", "isReference", "err", "normalizeOperationOutcome", "isResource", "useDebouncedValue", "waitMs", "options", "debouncedValue", "setDebouncedValue", "mountedRef", "timeoutRef", "cooldownRef", "cancel", "DEFAULT_DEBOUNCE_MS", "useSearch", "resourceType", "query", "useSearchImpl", "useSearchOne", "useSearchResources", "searchFn", "lastSearchKey", "setLastSearchKey", "loading", "setLoading", "result", "setResult", "outcome", "searchKey", "debouncedSearchKey", "res", "allOk", "SUBSCRIPTION_DEBOUNCE_MS", "useSubscription", "criteria", "callback", "emitter", "setEmitter", "memoizedSubProps", "setMemoizedSubProps", "listeningRef", "unsubTimerRef", "prevCriteriaRef", "prevMemoizedSubPropsRef", "callbackRef", "onWebSocketOpenRef", "onWebSocketCloseRef", "onSubscriptionConnectRef", "onSubscriptionDisconnectRef", "onErrorRef", "shouldSubscribe", "emitterCallback", "onWebSocketOpen", "onWebSocketClose", "onSubscriptionConnect", "onSubscriptionDisconnect", "onError", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "data", "t", "e", "import_prop_types", "import_react", "import_prop_types", "import_react", "PropTypes", "import_react", "React", "forceReflow", "Transition", "timeout", "ReactDOM", "children", "React", "PropTypes", "addClass", "classes", "removeClass", "CSSTransition", "_", "React", "PropTypes", "import_prop_types", "import_react", "import_react_dom", "import_prop_types", "import_react", "import_react", "children", "mapper", "k", "TransitionGroup", "children", "Component", "childFactory", "React", "PropTypes", "ReplaceTransition", "children", "React", "ReactDOM", "PropTypes", "import_react", "import_prop_types", "React", "callHook", "children", "SwitchTransition", "data", "PropTypes", "notifications", "data", "Transition", "_Transition", "defaultProps", "_", "data", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "__commonJS", "Pointer", "l", "diff", "memo", "b", "d", "MissingError", "TestError", "InvalidOperationError", "createPatch", "useProps", "jsx", "useState", "TextInput", "Component", "children", "main", "fe", "logoButton", "user", "userName", "userActive", "Fragment", "P", "jsxs", "Group", "Avatar", "defaultValue", "toOption", "ItemComponent", "useRef", "normalizeErrorString", "v", "option", "useMemo", "Loader", "searchInput", "getDisplayString", "useMedplumNavigate", "useCallback", "getReferenceString", "forwardRef", "Text", "formatHumanName", "useMedplumProfile", "Menu", "useMedplum", "showNotification", "Stack", "NativeSelect", "menuTitle", "link", "linkActive", "MantineAppShell", "_a", "Button", "AppShell", "useEffect", "useCachedBinaryUrl", "Anchor", "root", "compact", "isPopulated", "values", "props", "useContext", "slices", "slicedValues", "getPathDisplayName", "tryGetProfile", "ActionIcon", "EXTENSION_KEYS", "IGNORED_PROPERTIES", "buildElementsContext", "isEmpty", "Tooltip", "dimmed", "preserveBreaks", "Input", "isProfileLoaded", "useResource", "DefaultItemComponent", "createReference", "indented", "formatTiming", "Modal", "PropertyType", "capitalize", "Textarea", "tryGetDataType", "table", "Container", "noteBody", "noteCite", "noteRoot", "criticalRow", "formatDateTime", "isReference", "formatCodeableConcept", "paper", "fill", "__toESM", "removed", "added", "item", "itemPadding", "pinnedComment", "resource", "Center", "ScrollArea", "Alert", "Box", "evalFhirPathTyped", "stringify", "getDataType", "getSearchParameterDetails", "Checkbox", "deepClone", "getSearchParameters", "Operator", "SearchParameterType", "tr", "th", "control", "icon", "normalizeOperationOutcome", "state", "_b", "Table", "UnstyledButton", "DEFAULT_SEARCH_COUNT", "Paper", "Title", "Flex", "HTTP_HL7_ORG", "code", "clinicalStatus", "Badge", "HTTP", "me", "addProfileToResource", "useDisclosure", "Grid", "HTTP_TERMINOLOGY_HL7_ORG", "Radio", "LOINC", "SNOMED", "_c", "section", "hovering", "editing", "bottomActions", "QuestionnaireItemType", "toTypedValue", "formatCoding", "generateId", "nextId", "createContext", "data", "MultiSelect", "getElementDefinition", "deepEquals", "questionBody", "topActions", "movementActions", "movementIcons", "columnAlignment", "linkIdInput", "typeSelect", "isResource", "Space", "r", "_", "responses", "newResponse", "defaultProps", "groupId", "g", "Divider", "formatRange", "N", "M", "k", "container", "startRow", "normalRow", "author", "dateTime", "lineNumber", "line", "pre", "splitButton", "menuControl", "satisfiedAccessPolicy", "AccessPolicyInteraction", "getVersionUrl", "info", "selection", "getStart", "getEnd", "PasswordInput", "useCombobox", "Combobox", "chatPaper", "chatTitle", "chatBody", "chatScrollArea", "chatInputContainer", "chatBubbleOuterWrap", "chatBubbleRightAlignedInnerWrap", "chatBubbleLeftAlignedInnerWrap", "chatBubble", "chatBubbleName", "chatBubbleNameRight", "useSubscription", "iconContainer", "chatModalContainer", "usePrevious"]
}
