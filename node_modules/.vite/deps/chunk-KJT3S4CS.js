// node_modules/@medplum/core/dist/esm/index.mjs
var ze = class {
  constructor(e, t) {
    this.operator = e;
    this.child = t;
  }
  toString() {
    return `${this.operator}(${this.child.toString()})`;
  }
};
var Y = class {
  constructor(e, t, n) {
    this.operator = e;
    this.left = t;
    this.right = n;
  }
  toString() {
    return `${this.left.toString()} ${this.operator} ${this.right.toString()}`;
  }
};
var Je = class {
  constructor() {
    this.prefixParselets = {};
    this.infixParselets = {};
  }
  registerInfix(e, t) {
    return this.infixParselets[e] = t, this;
  }
  registerPrefix(e, t) {
    return this.prefixParselets[e] = t, this;
  }
  prefix(e, t, n) {
    return this.registerPrefix(e, { parse(i, o) {
      let s = i.consumeAndParse(t);
      return n(o, s);
    } });
  }
  infixLeft(e, t, n) {
    return this.registerInfix(e, { parse(i, o, s) {
      let a = i.consumeAndParse(t);
      return n(o, s, a);
    }, precedence: t });
  }
  construct(e) {
    return new Kt(e, this.prefixParselets, this.infixParselets);
  }
};
var Kt = class {
  constructor(e, t, n) {
    this.tokens = e, this.prefixParselets = t, this.infixParselets = n;
  }
  hasMore() {
    return this.tokens.length > 0;
  }
  match(e) {
    var _a2;
    return ((_a2 = this.peek()) == null ? void 0 : _a2.id) !== e ? false : (this.consume(), true);
  }
  consumeAndParse(e = 1 / 0) {
    let t = this.consume(), n = this.prefixParselets[t.id];
    if (!n) throw Error(`Parse error at "${t.value}" (line ${t.line}, column ${t.column}). No matching prefix parselet.`);
    let i = n.parse(this, t);
    for (; e > this.getPrecedence(); ) {
      let o = this.consume();
      i = this.getInfixParselet(o).parse(this, i, o);
    }
    return i;
  }
  getPrecedence() {
    let e = this.peek();
    if (!e) return 1 / 0;
    let t = this.getInfixParselet(e);
    return t ? t.precedence : 1 / 0;
  }
  consume(e, t) {
    var _a2, _b;
    if (!this.tokens.length) throw Error("Cant consume unknown more tokens.");
    if (e && ((_a2 = this.peek()) == null ? void 0 : _a2.id) !== e) {
      let n = this.peek();
      throw Error(`Expected ${e} but got "${n.id}" (${n.value}) at line ${n.line} column ${n.column}.`);
    }
    if (t && ((_b = this.peek()) == null ? void 0 : _b.value) !== t) {
      let n = this.peek();
      throw Error(`Expected "${t}" but got "${n.value}" at line ${n.line} column ${n.column}.`);
    }
    return this.tokens.shift();
  }
  peek() {
    return this.tokens.length > 0 ? this.tokens[0] : void 0;
  }
  removeComments() {
    this.tokens = this.tokens.filter((e) => e.id !== "Comment");
  }
  getInfixParselet(e) {
    return this.infixParselets[e.id === "Symbol" ? e.value : e.id];
  }
};
var Yr = "http://unitsofmeasure.org";
var pc = "http://loinc.org";
var dc = "http://snomed.info/sct";
var fc = "http://www.nlm.nih.gov/research/umls/rxnorm";
var mc = "http://www.ama-assn.org/go/cpt";
var hc = "http://hl7.org/fhir/sid/icd-10";
var yc = "http://hl7.org/fhir/sid/ndc";
var Zr = "http://hl7.org";
var gc = "http://terminology.hl7.org";
var zt = "ok";
var Ye = "created";
var Jt = "gone";
var Yt = "not-modified";
var Zt = "not-found";
var Xt = "conflict";
var er = "unauthorized";
var Xr = "forbidden";
var en = "precondition-failed";
var tn = "multiple-matches";
var rn = "too-many-requests";
var Ze = "accepted";
var nn = "server-timeout";
var vc = { resourceType: "OperationOutcome", id: zt, issue: [{ severity: "information", code: "informational", details: { text: "All OK" } }] };
var Tc = { resourceType: "OperationOutcome", id: Ye, issue: [{ severity: "information", code: "informational", details: { text: "Created" } }] };
var Sc = { resourceType: "OperationOutcome", id: Yt, issue: [{ severity: "information", code: "informational", details: { text: "Not Modified" } }] };
var on = { resourceType: "OperationOutcome", id: Zt, issue: [{ severity: "error", code: "not-found", details: { text: "Not found" } }] };
var Ee = { resourceType: "OperationOutcome", id: er, issue: [{ severity: "error", code: "login", details: { text: "Unauthorized" } }] };
var sn = { ...Ee, issue: [...Ee.issue, { severity: "error", code: "expired", details: { text: "Token expired" } }] };
var tr = { ...Ee, issue: [...Ee.issue, { severity: "error", code: "invalid", details: { text: "Token not issued for this audience" } }] };
var Ec = { resourceType: "OperationOutcome", id: Xr, issue: [{ severity: "error", code: "forbidden", details: { text: "Forbidden" } }] };
var bc = { resourceType: "OperationOutcome", id: Jt, issue: [{ severity: "error", code: "deleted", details: { text: "Gone" } }] };
var Rc = { resourceType: "OperationOutcome", id: en, issue: [{ severity: "error", code: "processing", details: { text: "Precondition Failed" } }] };
var Cc = { resourceType: "OperationOutcome", id: tn, issue: [{ severity: "error", code: "multiple-matches", details: { text: "Multiple resources found matching condition" } }] };
var Pc = { resourceType: "OperationOutcome", id: rn, issue: [{ severity: "error", code: "throttled", details: { text: "Too Many Requests" } }] };
function wc(r6) {
  return { resourceType: "OperationOutcome", id: Ze, issue: [{ severity: "information", code: "informational", details: { text: "Accepted" }, diagnostics: r6 }] };
}
function E(r6, e) {
  return { resourceType: "OperationOutcome", issue: [{ severity: "error", code: "invalid", details: { text: r6 }, ...e ? { expression: [e] } : void 0 }] };
}
function Ac(r6, e) {
  return { resourceType: "OperationOutcome", id: Xt, issue: [{ severity: "error", code: "conflict", details: { coding: e ? [{ code: e }] : void 0, text: r6 } }] };
}
function h(r6) {
  return { resourceType: "OperationOutcome", issue: [{ severity: "error", code: "structure", details: { text: r6 } }] };
}
function an(r6) {
  return { resourceType: "OperationOutcome", issue: [{ severity: "error", code: "exception", details: { text: "Internal server error" }, diagnostics: r6.toString() }] };
}
function Oc(r6) {
  return { resourceType: "OperationOutcome", id: nn, issue: [{ severity: "error", code: "timeout", details: { text: r6 ?? "Server timeout" } }] };
}
function be(r6) {
  return typeof r6 == "object" && r6 !== null && r6.resourceType === "OperationOutcome";
}
function rr(r6) {
  return r6.id === zt || r6.id === Ye || r6.id === Yt || r6.id === Ze;
}
function Ic(r6) {
  return r6.id === Ye;
}
function kc(r6) {
  return r6.id === Ze;
}
function Vc(r6) {
  return r6.id === Zt;
}
function Dc(r6) {
  return r6.id === Xt;
}
function Mc(r6) {
  return r6.id === Jt;
}
function _c(r6) {
  return r6.id === er;
}
function Nc(r6) {
  var _a2, _b;
  switch (r6.id) {
    case zt:
      return 200;
    case Ye:
      return 201;
    case Ze:
      return 202;
    case Yt:
      return 304;
    case er:
      return 401;
    case Xr:
      return 403;
    case Zt:
      return 404;
    case Xt:
      return 409;
    case Jt:
      return 410;
    case en:
    case tn:
      return 412;
    case rn:
      return 429;
    case nn:
      return 504;
    default:
      return ((_b = (_a2 = r6.issue) == null ? void 0 : _a2[0]) == null ? void 0 : _b.code) === "exception" ? 500 : 400;
  }
}
function Lc(r6, e) {
  if (!rr(r6) || e === void 0) throw new d(r6);
}
var d = class extends Error {
  constructor(e, t) {
    super(cn(e)), this.outcome = e, this.cause = t;
  }
};
function Xe(r6) {
  return r6 instanceof d ? r6.outcome : be(r6) ? r6 : E(Ne(r6));
}
function Ne(r6) {
  return r6 ? typeof r6 == "string" ? r6 : r6 instanceof Error ? r6.message : be(r6) ? cn(r6) : typeof r6 == "object" && "code" in r6 && typeof r6.code == "string" ? r6.code : JSON.stringify(r6) : "Unknown error";
}
function cn(r6) {
  var _a2;
  let e = ((_a2 = r6.issue) == null ? void 0 : _a2.map(Yi)) ?? [];
  return e.length > 0 ? e.join("; ") : "Unknown error";
}
function Yi(r6) {
  var _a2, _b;
  let e;
  return ((_a2 = r6.details) == null ? void 0 : _a2.text) ? r6.diagnostics ? e = `${r6.details.text} (${r6.diagnostics})` : e = r6.details.text : r6.diagnostics ? e = r6.diagnostics : e = "Unknown error", ((_b = r6.expression) == null ? void 0 : _b.length) && (e += ` (${r6.expression.join(", ")})`), e;
}
function ae(r6, e, t, n, i) {
  let o = { severity: r6, code: e, details: { text: t }, expression: [n] };
  return i && (o.diagnostics = JSON.stringify(i)), o;
}
function T(r6, e) {
  return ae("error", "structure", e, r6);
}
function un(r6, e) {
  return ae("error", "invariant", `Constraint ${e.key} not met: ${e.description}`, r6, { fhirpath: e.expression });
}
function ln(r6, e, t, n) {
  return ae("error", "processing", e, r6, { ...n, error: t });
}
var Zi = { "http://hl7.org/fhirpath/System.String": "string" };
function Uc(r6) {
  var _a2;
  let e = {};
  return r6.min !== 0 && (e.min = r6.min), r6.max !== 1 && Number.isFinite(r6.max) ? e.max = r6.max : r6.max === Number.POSITIVE_INFINITY && (e.max = Number.MAX_SAFE_INTEGER), e.type = (_a2 = r6.type) == null ? void 0 : _a2.map((t) => ({ ...t, extension: void 0, code: Zi[t.code] ?? t.code })), e;
}
function Xi(r6, e) {
  let t = e.max && e.max === Number.MAX_SAFE_INTEGER ? Number.POSITIVE_INFINITY : e.max;
  return { path: r6, description: "", type: e.type ?? [], min: e.min ?? 0, max: t ?? 1, isArray: !!t && t > 1, constraints: [] };
}
function pn(r6) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let [t, n] of Object.entries(r6)) e[t] = { name: t, type: t, path: t, elements: Object.fromEntries(Object.entries(n.elements).map(([i, o]) => [i, Xi(i, o)])), constraints: [], innerTypes: [] };
  return e;
}
var dn = { Element: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] } } }, BackboneElement: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] } } }, Address: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, use: { type: [{ code: "code" }] }, type: { type: [{ code: "code" }] }, text: { type: [{ code: "string" }] }, line: { max: 9007199254740991, type: [{ code: "string" }] }, city: { type: [{ code: "string" }] }, district: { type: [{ code: "string" }] }, state: { type: [{ code: "string" }] }, postalCode: { type: [{ code: "string" }] }, country: { type: [{ code: "string" }] }, period: { type: [{ code: "Period" }] } } }, Age: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, Annotation: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, "author[x]": { type: [{ code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Practitioner", "http://hl7.org/fhir/StructureDefinition/Patient", "http://hl7.org/fhir/StructureDefinition/RelatedPerson", "http://hl7.org/fhir/StructureDefinition/Organization"] }, { code: "string" }] }, time: { type: [{ code: "dateTime" }] }, text: { min: 1, type: [{ code: "markdown" }] } } }, Attachment: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, contentType: { type: [{ code: "code" }] }, language: { type: [{ code: "code" }] }, data: { type: [{ code: "base64Binary" }] }, url: { type: [{ code: "url" }] }, size: { type: [{ code: "unsignedInt" }] }, hash: { type: [{ code: "base64Binary" }] }, title: { type: [{ code: "string" }] }, creation: { type: [{ code: "dateTime" }] } } }, CodeableConcept: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, coding: { max: 9007199254740991, type: [{ code: "Coding" }] }, text: { type: [{ code: "string" }] } } }, Coding: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, system: { type: [{ code: "uri" }] }, version: { type: [{ code: "string" }] }, code: { type: [{ code: "code" }] }, display: { type: [{ code: "string" }] }, userSelected: { type: [{ code: "boolean" }] } } }, ContactDetail: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, name: { type: [{ code: "string" }] }, telecom: { max: 9007199254740991, type: [{ code: "ContactPoint" }] } } }, ContactPoint: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, system: { type: [{ code: "code" }] }, value: { type: [{ code: "string" }] }, use: { type: [{ code: "code" }] }, rank: { type: [{ code: "positiveInt" }] }, period: { type: [{ code: "Period" }] } } }, Contributor: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, type: [{ code: "code" }] }, name: { min: 1, type: [{ code: "string" }] }, contact: { max: 9007199254740991, type: [{ code: "ContactDetail" }] } } }, Count: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, DataRequirement: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, type: [{ code: "code" }] }, profile: { max: 9007199254740991, type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition"] }] }, "subject[x]": { type: [{ code: "CodeableConcept" }, { code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Group"] }] }, mustSupport: { max: 9007199254740991, type: [{ code: "string" }] }, codeFilter: { max: 9007199254740991, type: [{ code: "DataRequirementCodeFilter" }] }, dateFilter: { max: 9007199254740991, type: [{ code: "DataRequirementDateFilter" }] }, limit: { type: [{ code: "positiveInt" }] }, sort: { max: 9007199254740991, type: [{ code: "DataRequirementSort" }] } } }, DataRequirementCodeFilter: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, path: { type: [{ code: "string" }] }, searchParam: { type: [{ code: "string" }] }, valueSet: { type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/ValueSet"] }] }, code: { max: 9007199254740991, type: [{ code: "Coding" }] } } }, DataRequirementDateFilter: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, path: { type: [{ code: "string" }] }, searchParam: { type: [{ code: "string" }] }, "value[x]": { type: [{ code: "dateTime" }, { code: "Period" }, { code: "Duration" }] } } }, DataRequirementSort: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, path: { min: 1, type: [{ code: "string" }] }, direction: { min: 1, type: [{ code: "code" }] } } }, Distance: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, Dosage: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, sequence: { type: [{ code: "integer" }] }, text: { type: [{ code: "string" }] }, additionalInstruction: { max: 9007199254740991, type: [{ code: "CodeableConcept" }] }, patientInstruction: { type: [{ code: "string" }] }, timing: { type: [{ code: "Timing" }] }, "asNeeded[x]": { type: [{ code: "boolean" }, { code: "CodeableConcept" }] }, site: { type: [{ code: "CodeableConcept" }] }, route: { type: [{ code: "CodeableConcept" }] }, method: { type: [{ code: "CodeableConcept" }] }, doseAndRate: { max: 9007199254740991, type: [{ code: "DosageDoseAndRate" }] }, maxDosePerPeriod: { type: [{ code: "Ratio" }] }, maxDosePerAdministration: { type: [{ code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] }, maxDosePerLifetime: { type: [{ code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] } } }, DosageDoseAndRate: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { type: [{ code: "CodeableConcept" }] }, "dose[x]": { type: [{ code: "Range" }, { code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] }, "rate[x]": { type: [{ code: "Ratio" }, { code: "Range" }, { code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] } } }, Duration: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, ElementDefinition: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, path: { min: 1, type: [{ code: "string" }] }, representation: { max: 9007199254740991, type: [{ code: "code" }] }, sliceName: { type: [{ code: "string" }] }, sliceIsConstraining: { type: [{ code: "boolean" }] }, label: { type: [{ code: "string" }] }, code: { max: 9007199254740991, type: [{ code: "Coding" }] }, slicing: { type: [{ code: "ElementDefinitionSlicing" }] }, short: { type: [{ code: "string" }] }, definition: { type: [{ code: "markdown" }] }, comment: { type: [{ code: "markdown" }] }, requirements: { type: [{ code: "markdown" }] }, alias: { max: 9007199254740991, type: [{ code: "string" }] }, min: { type: [{ code: "unsignedInt" }] }, max: { type: [{ code: "string" }] }, base: { type: [{ code: "ElementDefinitionBase" }] }, contentReference: { type: [{ code: "uri" }] }, type: { max: 9007199254740991, type: [{ code: "ElementDefinitionType" }] }, "defaultValue[x]": { type: [{ code: "base64Binary" }, { code: "boolean" }, { code: "canonical" }, { code: "code" }, { code: "date" }, { code: "dateTime" }, { code: "decimal" }, { code: "id" }, { code: "instant" }, { code: "integer" }, { code: "markdown" }, { code: "oid" }, { code: "positiveInt" }, { code: "string" }, { code: "time" }, { code: "unsignedInt" }, { code: "uri" }, { code: "url" }, { code: "uuid" }, { code: "Address" }, { code: "Age" }, { code: "Annotation" }, { code: "Attachment" }, { code: "CodeableConcept" }, { code: "Coding" }, { code: "ContactPoint" }, { code: "Count" }, { code: "Distance" }, { code: "Duration" }, { code: "HumanName" }, { code: "Identifier" }, { code: "Money" }, { code: "Period" }, { code: "Quantity" }, { code: "Range" }, { code: "Ratio" }, { code: "Reference" }, { code: "SampledData" }, { code: "Signature" }, { code: "Timing" }, { code: "ContactDetail" }, { code: "Contributor" }, { code: "DataRequirement" }, { code: "Expression" }, { code: "ParameterDefinition" }, { code: "RelatedArtifact" }, { code: "TriggerDefinition" }, { code: "UsageContext" }, { code: "Dosage" }, { code: "Meta" }] }, meaningWhenMissing: { type: [{ code: "markdown" }] }, orderMeaning: { type: [{ code: "string" }] }, "fixed[x]": { type: [{ code: "base64Binary" }, { code: "boolean" }, { code: "canonical" }, { code: "code" }, { code: "date" }, { code: "dateTime" }, { code: "decimal" }, { code: "id" }, { code: "instant" }, { code: "integer" }, { code: "markdown" }, { code: "oid" }, { code: "positiveInt" }, { code: "string" }, { code: "time" }, { code: "unsignedInt" }, { code: "uri" }, { code: "url" }, { code: "uuid" }, { code: "Address" }, { code: "Age" }, { code: "Annotation" }, { code: "Attachment" }, { code: "CodeableConcept" }, { code: "Coding" }, { code: "ContactPoint" }, { code: "Count" }, { code: "Distance" }, { code: "Duration" }, { code: "HumanName" }, { code: "Identifier" }, { code: "Money" }, { code: "Period" }, { code: "Quantity" }, { code: "Range" }, { code: "Ratio" }, { code: "Reference" }, { code: "SampledData" }, { code: "Signature" }, { code: "Timing" }, { code: "ContactDetail" }, { code: "Contributor" }, { code: "DataRequirement" }, { code: "Expression" }, { code: "ParameterDefinition" }, { code: "RelatedArtifact" }, { code: "TriggerDefinition" }, { code: "UsageContext" }, { code: "Dosage" }, { code: "Meta" }] }, "pattern[x]": { type: [{ code: "base64Binary" }, { code: "boolean" }, { code: "canonical" }, { code: "code" }, { code: "date" }, { code: "dateTime" }, { code: "decimal" }, { code: "id" }, { code: "instant" }, { code: "integer" }, { code: "markdown" }, { code: "oid" }, { code: "positiveInt" }, { code: "string" }, { code: "time" }, { code: "unsignedInt" }, { code: "uri" }, { code: "url" }, { code: "uuid" }, { code: "Address" }, { code: "Age" }, { code: "Annotation" }, { code: "Attachment" }, { code: "CodeableConcept" }, { code: "Coding" }, { code: "ContactPoint" }, { code: "Count" }, { code: "Distance" }, { code: "Duration" }, { code: "HumanName" }, { code: "Identifier" }, { code: "Money" }, { code: "Period" }, { code: "Quantity" }, { code: "Range" }, { code: "Ratio" }, { code: "Reference" }, { code: "SampledData" }, { code: "Signature" }, { code: "Timing" }, { code: "ContactDetail" }, { code: "Contributor" }, { code: "DataRequirement" }, { code: "Expression" }, { code: "ParameterDefinition" }, { code: "RelatedArtifact" }, { code: "TriggerDefinition" }, { code: "UsageContext" }, { code: "Dosage" }, { code: "Meta" }] }, example: { max: 9007199254740991, type: [{ code: "ElementDefinitionExample" }] }, "minValue[x]": { type: [{ code: "date" }, { code: "dateTime" }, { code: "instant" }, { code: "time" }, { code: "decimal" }, { code: "integer" }, { code: "positiveInt" }, { code: "unsignedInt" }, { code: "Quantity" }] }, "maxValue[x]": { type: [{ code: "date" }, { code: "dateTime" }, { code: "instant" }, { code: "time" }, { code: "decimal" }, { code: "integer" }, { code: "positiveInt" }, { code: "unsignedInt" }, { code: "Quantity" }] }, maxLength: { type: [{ code: "integer" }] }, condition: { max: 9007199254740991, type: [{ code: "id" }] }, constraint: { max: 9007199254740991, type: [{ code: "ElementDefinitionConstraint" }] }, mustSupport: { type: [{ code: "boolean" }] }, isModifier: { type: [{ code: "boolean" }] }, isModifierReason: { type: [{ code: "string" }] }, isSummary: { type: [{ code: "boolean" }] }, binding: { type: [{ code: "ElementDefinitionBinding" }] }, mapping: { max: 9007199254740991, type: [{ code: "ElementDefinitionMapping" }] } } }, ElementDefinitionSlicingDiscriminator: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, type: [{ code: "code" }] }, path: { min: 1, type: [{ code: "string" }] } } }, ElementDefinitionSlicing: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, discriminator: { max: 9007199254740991, type: [{ code: "ElementDefinitionSlicingDiscriminator" }] }, description: { type: [{ code: "string" }] }, ordered: { type: [{ code: "boolean" }] }, rules: { min: 1, type: [{ code: "code" }] } } }, ElementDefinitionBase: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, path: { min: 1, type: [{ code: "string" }] }, min: { min: 1, type: [{ code: "unsignedInt" }] }, max: { min: 1, type: [{ code: "string" }] } } }, ElementDefinitionType: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, code: { min: 1, type: [{ code: "uri" }] }, profile: { max: 9007199254740991, type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition", "http://hl7.org/fhir/StructureDefinition/ImplementationGuide"] }] }, targetProfile: { max: 9007199254740991, type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition", "http://hl7.org/fhir/StructureDefinition/ImplementationGuide"] }] }, aggregation: { max: 9007199254740991, type: [{ code: "code" }] }, versioning: { type: [{ code: "code" }] } } }, ElementDefinitionExample: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, label: { min: 1, type: [{ code: "string" }] }, "value[x]": { min: 1, type: [{ code: "base64Binary" }, { code: "boolean" }, { code: "canonical" }, { code: "code" }, { code: "date" }, { code: "dateTime" }, { code: "decimal" }, { code: "id" }, { code: "instant" }, { code: "integer" }, { code: "markdown" }, { code: "oid" }, { code: "positiveInt" }, { code: "string" }, { code: "time" }, { code: "unsignedInt" }, { code: "uri" }, { code: "url" }, { code: "uuid" }, { code: "Address" }, { code: "Age" }, { code: "Annotation" }, { code: "Attachment" }, { code: "CodeableConcept" }, { code: "Coding" }, { code: "ContactPoint" }, { code: "Count" }, { code: "Distance" }, { code: "Duration" }, { code: "HumanName" }, { code: "Identifier" }, { code: "Money" }, { code: "Period" }, { code: "Quantity" }, { code: "Range" }, { code: "Ratio" }, { code: "Reference" }, { code: "SampledData" }, { code: "Signature" }, { code: "Timing" }, { code: "ContactDetail" }, { code: "Contributor" }, { code: "DataRequirement" }, { code: "Expression" }, { code: "ParameterDefinition" }, { code: "RelatedArtifact" }, { code: "TriggerDefinition" }, { code: "UsageContext" }, { code: "Dosage" }, { code: "Meta" }] } } }, ElementDefinitionConstraint: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, key: { min: 1, type: [{ code: "id" }] }, requirements: { type: [{ code: "string" }] }, severity: { min: 1, type: [{ code: "code" }] }, human: { min: 1, type: [{ code: "string" }] }, expression: { type: [{ code: "string" }] }, xpath: { type: [{ code: "string" }] }, source: { type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition"] }] } } }, ElementDefinitionBinding: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, strength: { min: 1, type: [{ code: "code" }] }, description: { type: [{ code: "string" }] }, valueSet: { type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/ValueSet"] }] } } }, ElementDefinitionMapping: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, identity: { min: 1, type: [{ code: "id" }] }, language: { type: [{ code: "code" }] }, map: { min: 1, type: [{ code: "string" }] }, comment: { type: [{ code: "string" }] } } }, Expression: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, description: { type: [{ code: "string" }] }, name: { type: [{ code: "id" }] }, language: { min: 1, type: [{ code: "code" }] }, expression: { type: [{ code: "string" }] }, reference: { type: [{ code: "uri" }] } } }, Extension: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, url: { min: 1, type: [{ code: "uri" }] }, "value[x]": { type: [{ code: "base64Binary" }, { code: "boolean" }, { code: "canonical" }, { code: "code" }, { code: "date" }, { code: "dateTime" }, { code: "decimal" }, { code: "id" }, { code: "instant" }, { code: "integer" }, { code: "markdown" }, { code: "oid" }, { code: "positiveInt" }, { code: "string" }, { code: "time" }, { code: "unsignedInt" }, { code: "uri" }, { code: "url" }, { code: "uuid" }, { code: "Address" }, { code: "Age" }, { code: "Annotation" }, { code: "Attachment" }, { code: "CodeableConcept" }, { code: "Coding" }, { code: "ContactPoint" }, { code: "Count" }, { code: "Distance" }, { code: "Duration" }, { code: "HumanName" }, { code: "Identifier" }, { code: "Money" }, { code: "Period" }, { code: "Quantity" }, { code: "Range" }, { code: "Ratio" }, { code: "Reference" }, { code: "SampledData" }, { code: "Signature" }, { code: "Timing" }, { code: "ContactDetail" }, { code: "Contributor" }, { code: "DataRequirement" }, { code: "Expression" }, { code: "ParameterDefinition" }, { code: "RelatedArtifact" }, { code: "TriggerDefinition" }, { code: "UsageContext" }, { code: "Dosage" }, { code: "Meta" }] } } }, HumanName: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, use: { type: [{ code: "code" }] }, text: { type: [{ code: "string" }] }, family: { type: [{ code: "string" }] }, given: { max: 9007199254740991, type: [{ code: "string" }] }, prefix: { max: 9007199254740991, type: [{ code: "string" }] }, suffix: { max: 9007199254740991, type: [{ code: "string" }] }, period: { type: [{ code: "Period" }] } } }, Identifier: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, use: { type: [{ code: "code" }] }, type: { type: [{ code: "CodeableConcept" }] }, system: { type: [{ code: "uri" }] }, value: { type: [{ code: "string" }] }, period: { type: [{ code: "Period" }] }, assigner: { type: [{ code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Organization"] }] } } }, MarketingStatus: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, country: { min: 1, type: [{ code: "CodeableConcept" }] }, jurisdiction: { type: [{ code: "CodeableConcept" }] }, status: { min: 1, type: [{ code: "CodeableConcept" }] }, dateRange: { min: 1, type: [{ code: "Period" }] }, restoreDate: { type: [{ code: "dateTime" }] } } }, Meta: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, versionId: { type: [{ code: "id" }] }, lastUpdated: { type: [{ code: "instant" }] }, source: { type: [{ code: "uri" }] }, profile: { max: 9007199254740991, type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition"] }] }, security: { max: 9007199254740991, type: [{ code: "Coding" }] }, tag: { max: 9007199254740991, type: [{ code: "Coding" }] }, project: { type: [{ code: "uri" }] }, author: { type: [{ code: "Reference" }] }, onBehalfOf: { type: [{ code: "Reference" }] }, account: { type: [{ code: "Reference" }] }, accounts: { max: 9007199254740991, type: [{ code: "Reference" }] }, compartment: { max: 9007199254740991, type: [{ code: "Reference" }] } } }, Money: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, currency: { type: [{ code: "code" }] } } }, Narrative: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, status: { min: 1, type: [{ code: "code" }] }, div: { min: 1, type: [{ code: "xhtml" }] } } }, ParameterDefinition: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, name: { type: [{ code: "code" }] }, use: { min: 1, type: [{ code: "code" }] }, min: { type: [{ code: "integer" }] }, max: { type: [{ code: "string" }] }, documentation: { type: [{ code: "string" }] }, type: { min: 1, type: [{ code: "code" }] }, profile: { type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/StructureDefinition"] }] } } }, Period: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, start: { type: [{ code: "dateTime" }] }, end: { type: [{ code: "dateTime" }] } } }, Population: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, "age[x]": { type: [{ code: "Range" }, { code: "CodeableConcept" }] }, gender: { type: [{ code: "CodeableConcept" }] }, race: { type: [{ code: "CodeableConcept" }] }, physiologicalCondition: { type: [{ code: "CodeableConcept" }] } } }, ProdCharacteristic: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, height: { type: [{ code: "Quantity" }] }, width: { type: [{ code: "Quantity" }] }, depth: { type: [{ code: "Quantity" }] }, weight: { type: [{ code: "Quantity" }] }, nominalVolume: { type: [{ code: "Quantity" }] }, externalDiameter: { type: [{ code: "Quantity" }] }, shape: { type: [{ code: "string" }] }, color: { max: 9007199254740991, type: [{ code: "string" }] }, imprint: { max: 9007199254740991, type: [{ code: "string" }] }, image: { max: 9007199254740991, type: [{ code: "Attachment" }] }, scoring: { type: [{ code: "CodeableConcept" }] } } }, ProductShelfLife: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, identifier: { type: [{ code: "Identifier" }] }, type: { min: 1, type: [{ code: "CodeableConcept" }] }, period: { min: 1, type: [{ code: "Quantity" }] }, specialPrecautionsForStorage: { max: 9007199254740991, type: [{ code: "CodeableConcept" }] } } }, Quantity: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, Range: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, low: { type: [{ code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] }, high: { type: [{ code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] } } }, Ratio: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, numerator: { type: [{ code: "Quantity" }] }, denominator: { type: [{ code: "Quantity" }] } } }, Reference: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, reference: { type: [{ code: "string" }] }, type: { type: [{ code: "uri" }] }, identifier: { type: [{ code: "Identifier" }] }, display: { type: [{ code: "string" }] } } }, RelatedArtifact: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, type: [{ code: "code" }] }, label: { type: [{ code: "string" }] }, display: { type: [{ code: "string" }] }, citation: { type: [{ code: "markdown" }] }, url: { type: [{ code: "url" }] }, document: { type: [{ code: "Attachment" }] }, resource: { type: [{ code: "canonical", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Resource"] }] } } }, SampledData: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, origin: { min: 1, type: [{ code: "Quantity", profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"] }] }, period: { min: 1, type: [{ code: "decimal" }] }, factor: { type: [{ code: "decimal" }] }, lowerLimit: { type: [{ code: "decimal" }] }, upperLimit: { type: [{ code: "decimal" }] }, dimensions: { min: 1, type: [{ code: "positiveInt" }] }, data: { type: [{ code: "string" }] } } }, Signature: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, max: 9007199254740991, type: [{ code: "Coding" }] }, when: { min: 1, type: [{ code: "instant" }] }, who: { min: 1, type: [{ code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Practitioner", "http://hl7.org/fhir/StructureDefinition/PractitionerRole", "http://hl7.org/fhir/StructureDefinition/RelatedPerson", "http://hl7.org/fhir/StructureDefinition/Patient", "http://hl7.org/fhir/StructureDefinition/Device", "http://hl7.org/fhir/StructureDefinition/Organization"] }] }, onBehalfOf: { type: [{ code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Practitioner", "http://hl7.org/fhir/StructureDefinition/PractitionerRole", "http://hl7.org/fhir/StructureDefinition/RelatedPerson", "http://hl7.org/fhir/StructureDefinition/Patient", "http://hl7.org/fhir/StructureDefinition/Device", "http://hl7.org/fhir/StructureDefinition/Organization"] }] }, targetFormat: { type: [{ code: "code" }] }, sigFormat: { type: [{ code: "code" }] }, data: { type: [{ code: "base64Binary" }] } } }, SubstanceAmount: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, "amount[x]": { type: [{ code: "Quantity" }, { code: "Range" }, { code: "string" }] }, amountType: { type: [{ code: "CodeableConcept" }] }, amountText: { type: [{ code: "string" }] }, referenceRange: { type: [{ code: "SubstanceAmountReferenceRange" }] } } }, SubstanceAmountReferenceRange: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, lowLimit: { type: [{ code: "Quantity" }] }, highLimit: { type: [{ code: "Quantity" }] } } }, Timing: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, modifierExtension: { max: 9007199254740991, type: [{ code: "Extension" }] }, event: { max: 9007199254740991, type: [{ code: "dateTime" }] }, repeat: { type: [{ code: "TimingRepeat" }] }, code: { type: [{ code: "CodeableConcept" }] } } }, TimingRepeat: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, "bounds[x]": { type: [{ code: "Duration" }, { code: "Range" }, { code: "Period" }] }, count: { type: [{ code: "positiveInt" }] }, countMax: { type: [{ code: "positiveInt" }] }, duration: { type: [{ code: "decimal" }] }, durationMax: { type: [{ code: "decimal" }] }, durationUnit: { type: [{ code: "code" }] }, frequency: { type: [{ code: "positiveInt" }] }, frequencyMax: { type: [{ code: "positiveInt" }] }, period: { type: [{ code: "decimal" }] }, periodMax: { type: [{ code: "decimal" }] }, periodUnit: { type: [{ code: "code" }] }, dayOfWeek: { max: 9007199254740991, type: [{ code: "code" }] }, timeOfDay: { max: 9007199254740991, type: [{ code: "time" }] }, when: { max: 9007199254740991, type: [{ code: "code" }] }, offset: { type: [{ code: "unsignedInt" }] } } }, TriggerDefinition: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, type: { min: 1, type: [{ code: "code" }] }, name: { type: [{ code: "string" }] }, "timing[x]": { type: [{ code: "Timing" }, { code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/Schedule"] }, { code: "date" }, { code: "dateTime" }] }, data: { max: 9007199254740991, type: [{ code: "DataRequirement" }] }, condition: { type: [{ code: "Expression" }] } } }, UsageContext: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, code: { min: 1, type: [{ code: "Coding" }] }, "value[x]": { min: 1, type: [{ code: "CodeableConcept" }, { code: "Quantity" }, { code: "Range" }, { code: "Reference", targetProfile: ["http://hl7.org/fhir/StructureDefinition/PlanDefinition", "http://hl7.org/fhir/StructureDefinition/ResearchStudy", "http://hl7.org/fhir/StructureDefinition/InsurancePlan", "http://hl7.org/fhir/StructureDefinition/HealthcareService", "http://hl7.org/fhir/StructureDefinition/Group", "http://hl7.org/fhir/StructureDefinition/Location", "http://hl7.org/fhir/StructureDefinition/Organization"] }] } } }, MoneyQuantity: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, SimpleQuantity: { elements: { id: { type: [{ code: "string" }] }, extension: { max: 9007199254740991, type: [{ code: "Extension" }] }, value: { type: [{ code: "decimal" }] }, comparator: { max: 0, type: [{ code: "code" }] }, unit: { type: [{ code: "string" }] }, system: { type: [{ code: "uri" }] }, code: { type: [{ code: "code" }] } } }, IdentityProvider: { elements: { authorizeUrl: { min: 1, type: [{ code: "string" }] }, tokenUrl: { min: 1, type: [{ code: "string" }] }, tokenAuthMethod: { type: [{ code: "code" }] }, userInfoUrl: { min: 1, type: [{ code: "string" }] }, clientId: { min: 1, type: [{ code: "string" }] }, clientSecret: { min: 1, type: [{ code: "string" }] }, usePkce: { type: [{ code: "boolean" }] }, useSubject: { type: [{ code: "boolean" }] } } } };
function sr(r6) {
  return new ir(r6).parse();
}
var ce = pn(dn);
var ar = /* @__PURE__ */ Object.create(null);
var fn = /* @__PURE__ */ Object.create(null);
var to = { "http://hl7.org/fhir/StructureDefinition/MoneyQuantity": "MoneyQuantity", "http://hl7.org/fhir/StructureDefinition/SimpleQuantity": "SimpleQuantity", "http://hl7.org/fhir/uv/sql-on-fhir/StructureDefinition/ViewDefinition": "ViewDefinition" };
function gn(r6) {
  let e;
  return e = fn[r6], e || (e = fn[r6] = /* @__PURE__ */ Object.create(null)), e;
}
function cr(r6) {
  var _a2;
  let e = Array.isArray(r6) ? r6 : ((_a2 = r6.entry) == null ? void 0 : _a2.map((t) => t.resource)) ?? [];
  for (let t of e) ur(t);
}
function ur(r6) {
  var _a2, _b;
  if (!(r6 == null ? void 0 : r6.name)) throw new Error("Failed loading StructureDefinition from bundle");
  if (r6.resourceType !== "StructureDefinition") return;
  let e = sr(r6), t = to[r6.url], n, i;
  t ? (n = ce, i = t) : r6.url === `http://hl7.org/fhir/StructureDefinition/${r6.type}` || r6.url === `https://medplum.com/fhir/StructureDefinition/${r6.type}` || ((_a2 = r6.type) == null ? void 0 : _a2.startsWith("http://")) || ((_b = r6.type) == null ? void 0 : _b.startsWith("https://")) ? (n = ce, i = r6.type) : (n = gn(r6.url), i = r6.type), n[i] = e;
  for (let o of e.innerTypes) o.parentType = e, n[o.name] = o;
  ar[r6.url] = e;
}
function xn() {
  return ce;
}
function vn(r6) {
  return !!ce[r6];
}
function Le(r6, e) {
  if (e) {
    let t = gn(e)[r6];
    if (t) return t;
  }
  return ce[r6];
}
function Z(r6, e) {
  let t = Le(r6, e);
  if (!t) throw new d(E("Unknown data type: " + r6));
  return t;
}
function Tn(r6) {
  let e = ce[r6];
  return e && lr(e);
}
function Sn(r6) {
  return !!ar[r6];
}
function En(r6) {
  return ar[r6];
}
var ir = class {
  constructor(e) {
    var _a2;
    if (!((_a2 = e.snapshot) == null ? void 0 : _a2.element) || e.snapshot.element.length === 0) throw new Error(`No snapshot defined for StructureDefinition '${e.name}'`);
    this.root = e.snapshot.element[0], this.elements = e.snapshot.element.slice(1), this.elementIndex = /* @__PURE__ */ Object.create(null), this.index = 0, this.resourceSchema = { name: e.name, path: this.root.path, title: e.title, type: e.type, url: e.url, kind: e.kind, description: oo(e), elements: {}, constraints: this.parseElementDefinition(this.root).constraints, innerTypes: [], summaryProperties: /* @__PURE__ */ new Set(), mandatoryProperties: /* @__PURE__ */ new Set() }, this.innerTypes = [];
  }
  parse() {
    var _a2, _b, _c2, _d, _e;
    let e = this.next();
    for (; e; ) {
      if (e.sliceName) this.parseSliceStart(e);
      else if ((_a2 = e.id) == null ? void 0 : _a2.includes(":")) {
        if ((_b = this.slicingContext) == null ? void 0 : _b.current) {
          let t = nr(e, this.slicingContext.path);
          this.slicingContext.current.elements[t] = this.parseElementDefinition(e);
        }
      } else {
        let t = this.parseElementDefinition(e);
        this.checkFieldEnter(e, t);
        let n = this.backboneContext;
        for (; n; ) {
          if ((_c2 = e.path) == null ? void 0 : _c2.startsWith(n.path + ".")) {
            n.type.elements[nr(e, n.path)] = t;
            break;
          }
          n = n.parent;
        }
        if (!n) {
          let i = nr(e, this.root.path);
          e.isSummary && ((_d = this.resourceSchema.summaryProperties) == null ? void 0 : _d.add(i.replace("[x]", ""))), t.min > 0 && ((_e = this.resourceSchema.mandatoryProperties) == null ? void 0 : _e.add(i.replace("[x]", ""))), this.resourceSchema.elements[i] = t;
        }
        this.checkFieldExit(e);
      }
      e = this.next();
    }
    return this.checkFieldExit(), this.innerTypes.length > 0 && (this.resourceSchema.innerTypes = this.innerTypes), this.resourceSchema;
  }
  checkFieldEnter(e, t) {
    this.isInnerType(e) && this.enterInnerType(e), this.slicingContext && !Re(this.slicingContext.path, e == null ? void 0 : e.path) && (this.slicingContext = void 0), e.slicing && !this.slicingContext && this.enterSlice(e, t);
  }
  enterInnerType(e) {
    var _a2, _b, _c2;
    for (; this.backboneContext && !Re((_a2 = this.backboneContext) == null ? void 0 : _a2.path, e.path); ) this.innerTypes.push(this.backboneContext.type), this.backboneContext = this.backboneContext.parent;
    let t = or(e);
    this.backboneContext = { type: { name: t, type: t, path: e.path, title: e.label, description: e.definition, elements: {}, constraints: this.parseElementDefinition(e).constraints, innerTypes: [] }, path: e.path, parent: Re((_b = this.backboneContext) == null ? void 0 : _b.path, e.path) ? this.backboneContext : (_c2 = this.backboneContext) == null ? void 0 : _c2.parent };
  }
  enterSlice(e, t) {
    var _a2, _b, _c2, _d;
    io(e) && !((_a2 = this.peek()) == null ? void 0 : _a2.sliceName) || (t.slicing = { discriminator: (((_b = e.slicing) == null ? void 0 : _b.discriminator) ?? []).map((n) => {
      if (n.type !== "value" && n.type !== "pattern" && n.type !== "type") throw new Error(`Unsupported slicing discriminator type: ${n.type}`);
      return { path: n.path, type: n.type };
    }), slices: [], ordered: ((_c2 = e.slicing) == null ? void 0 : _c2.ordered) ?? false, rule: (_d = e.slicing) == null ? void 0 : _d.rules }, this.slicingContext = { field: t.slicing, path: e.path ?? "" });
  }
  checkFieldExit(e = void 0) {
    if (this.backboneContext && !Re(this.backboneContext.path, e == null ? void 0 : e.path)) if (this.backboneContext.parent) do
      this.innerTypes.push(this.backboneContext.type), this.backboneContext = this.backboneContext.parent;
    while (this.backboneContext && !Re(this.backboneContext.path, e == null ? void 0 : e.path));
    else this.innerTypes.push(this.backboneContext.type), this.backboneContext = void 0;
  }
  next() {
    let e = this.peek();
    if (e) return this.index++, e;
  }
  peek() {
    var _a2, _b, _c2, _d, _e;
    let e = this.elements[this.index];
    if (e) {
      if (this.elementIndex[e.path ?? ""] = e, e.contentReference) {
        let t = e.contentReference.slice(e.contentReference.indexOf("#") + 1), n = this.elementIndex[t];
        return n ? { ...n, id: e.id, path: e.path, min: e.min ?? n.min, max: e.max ?? n.max, base: { path: ((_a2 = n.base) == null ? void 0 : _a2.path) ?? t, min: ((_b = e.base) == null ? void 0 : _b.min) ?? ((_c2 = n.base) == null ? void 0 : _c2.min) ?? n.min, max: ((_d = e.base) == null ? void 0 : _d.max) ?? ((_e = n.base) == null ? void 0 : _e.max) ?? n.max }, contentReference: e.contentReference, definition: e.definition } : void 0;
      }
      return e;
    }
  }
  isInnerType(e) {
    var _a2;
    let t = this.peek();
    return !!(Re(e == null ? void 0 : e.path, t == null ? void 0 : t.path) && ((_a2 = e.type) == null ? void 0 : _a2.some((n) => ["BackboneElement", "Element"].includes(n.code))));
  }
  parseSliceStart(e) {
    if (!this.slicingContext) throw new Error(`Invalid slice start before discriminator: ${e.sliceName} (${e.id})`);
    this.slicingContext.current = { ...this.parseElementDefinition(e), name: e.sliceName ?? "", definition: e.definition, elements: {} }, this.slicingContext.field.slices.push(this.slicingContext.current);
  }
  parseElementDefinitionType(e) {
    return (e.type ?? []).map((t) => {
      var _a2;
      let n;
      return (t.code === "BackboneElement" || t.code === "Element") && (n = or(e)), n || (n = (_a2 = X(t, "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type")) == null ? void 0 : _a2.valueUrl), n || (n = t.code ?? ""), { code: n, targetProfile: t.targetProfile, profile: t.profile };
    });
  }
  parseElementDefinition(e) {
    var _a2, _b;
    let t = hn(e.max), n = ((_a2 = e.base) == null ? void 0 : _a2.max) ? hn(e.base.max) : t, i = { type: "ElementDefinition", value: e };
    return { description: e.definition || "", path: e.path || ((_b = e.base) == null ? void 0 : _b.path) || "", min: e.min ?? 0, max: t, isArray: n > 1, constraints: (e.constraint ?? []).map((o) => ({ key: o.key ?? "", severity: o.severity ?? "error", expression: o.expression ?? "", description: o.human ?? "" })), type: this.parseElementDefinitionType(e), fixed: yn(P(i, "fixed[x]")), pattern: yn(P(i, "pattern[x]")), binding: e.binding };
  }
};
function Jc(r6, e) {
  var _a2;
  if (!r6) return;
  let t = [];
  for (let n of e) {
    t.push("_" + n);
    let i = ce[r6.resourceType].elements[n + "[x]"];
    i && t.push(...i.type.map((o) => n + w(o.code)));
  }
  for (let n of Object.getOwnPropertyNames(r6)) !e.includes(n) && !t.includes(n) && !ro.includes(n) && Object.defineProperty(r6, n, { enumerable: false, writable: false, value: void 0 });
  return r6.meta = { ...r6.meta, tag: ((_a2 = r6.meta) == null ? void 0 : _a2.tag) ? r6.meta.tag.concat(mn) : [mn] }, r6;
}
var mn = { system: "http://hl7.org/fhir/v3/ObservationValue", code: "SUBSETTED" };
var ro = ["resourceType", "id", "meta"];
function hn(r6) {
  return r6 === "*" ? Number.POSITIVE_INFINITY : Number.parseInt(r6, 10);
}
function nr(r6, e = "") {
  return no(r6.path, e);
}
function no(r6, e) {
  return r6 ? e && r6.startsWith(e) ? r6.substring(e.length + 1) : r6 : "";
}
function Re(r6, e) {
  return !r6 || !e ? false : e.startsWith(r6 + ".") || e === r6;
}
function yn(r6) {
  return Array.isArray(r6) && r6.length > 0 ? r6[0] : S(r6) ? void 0 : r6;
}
function io(r6) {
  var _a2, _b;
  let e = (_a2 = r6.slicing) == null ? void 0 : _a2.discriminator;
  return !!(((_b = r6.type) == null ? void 0 : _b.some((t) => t.code === "Extension")) && (e == null ? void 0 : e.length) === 1 && e[0].type === "value" && e[0].path === "url");
}
function oo(r6) {
  let e = r6.description;
  return (e == null ? void 0 : e.startsWith(`Base StructureDefinition for ${r6.name} Type: `)) && (e = e.substring(`Base StructureDefinition for ${r6.name} Type: `.length)), e;
}
function so(r6) {
  return "elements" in r6;
}
function ao(r6) {
  return !!r6.visitPropertyAsync;
}
function su(r6, e, t, n) {
  let i;
  return t && so(t) ? i = { schema: t, initialPath: n } : i = t, ao(e) ? bn(g(r6), e, i) : et(g(r6), e, i);
}
async function au(r6, e, t) {
  return bn(g(r6), e, t);
}
function et(r6, e, t) {
  new pr(r6, e, t).crawl();
}
function bn(r6, e, t) {
  return new dr(r6, e, t).crawl();
}
var pr = class {
  constructor(e, t, n) {
    this.root = e, this.visitor = t, this.schema = (n == null ? void 0 : n.schema) ?? Z(e.type), this.initialPath = (n == null ? void 0 : n.initialPath) ?? this.schema.path, this.excludeMissingProperties = n == null ? void 0 : n.skipMissingProperties;
  }
  crawl() {
    this.crawlObject({ ...this.root, path: this.initialPath }, this.schema, this.initialPath);
  }
  crawlObject(e, t, n) {
    let i = I(e.value);
    if (i && this.visitor.onEnterResource && this.visitor.onEnterResource(n, e, t), this.visitor.onEnterObject && this.visitor.onEnterObject(n, e, t), this.excludeMissingProperties) for (let o of Object.keys(e.value)) this.crawlProperty(e, o, t, `${n}.${o}`);
    else for (let o of Object.keys(t.elements)) this.crawlProperty(e, o, t, `${n}.${o}`);
    this.visitor.onExitObject && this.visitor.onExitObject(n, e, t), i && this.visitor.onExitResource && this.visitor.onExitResource(n, e, t);
  }
  crawlProperty(e, t, n, i) {
    let o = Ce(e, t, { withPath: true });
    this.visitor.visitProperty && this.visitor.visitProperty(e, t, i, o, n);
    for (let s of o) if (s) for (let a of Fe(s)) this.crawlPropertyValue(a, i);
  }
  crawlPropertyValue(e, t) {
    if (!tt(e.type)) {
      let n = Z(e.type);
      this.crawlObject(e, n, t);
    }
  }
};
var dr = class {
  constructor(e, t, n) {
    this.root = e, this.visitor = t, this.schema = (n == null ? void 0 : n.schema) ?? Z(e.type), this.initialPath = (n == null ? void 0 : n.initialPath) ?? this.schema.path, this.excludeMissingProperties = n == null ? void 0 : n.skipMissingProperties;
  }
  async crawl() {
    return this.crawlObject({ ...this.root, path: this.initialPath }, this.schema, this.initialPath);
  }
  async crawlObject(e, t, n) {
    let i = I(e.value);
    if (i && this.visitor.onEnterResource && await this.visitor.onEnterResource(n, e, t), this.visitor.onEnterObject && await this.visitor.onEnterObject(n, e, t), this.excludeMissingProperties && e.value) for (let o of Object.keys(e.value)) await this.crawlProperty(e, o, t, `${n}.${o}`);
    else for (let o of Object.keys(t.elements)) await this.crawlProperty(e, o, t, `${n}.${o}`);
    this.visitor.onExitObject && await this.visitor.onExitObject(n, e, t), i && this.visitor.onExitResource && await this.visitor.onExitResource(n, e, t);
  }
  async crawlProperty(e, t, n, i) {
    let o = Ce(e, t, { withPath: true });
    if (this.visitor.visitPropertyAsync) for (let s of o) await this.visitor.visitPropertyAsync(e, t, i, s, n);
    for (let s of o) if (s) for (let a of Fe(s)) await this.crawlPropertyValue(a, i);
  }
  async crawlPropertyValue(e, t) {
    if (!tt(e.type)) {
      let n = Z(e.type);
      await this.crawlObject(e, n, t);
    }
  }
};
function Ce(r6, e, t) {
  if (r6 === void 0) return [void 0];
  if (e === "$this") return [r6];
  let n = (t == null ? void 0 : t.withPath) ? co : P, [i, ...o] = e.split("."), s = [n(r6, i, t)];
  for (let a of o) {
    let c = [];
    for (let u of s) if (Array.isArray(u)) for (let p of u) c.push(n(p, a, t));
    else ((t == null ? void 0 : t.withPath) && u && u.value !== void 0 || !(t == null ? void 0 : t.withPath) && u !== void 0) && c.push(n(u, a, t));
    s = c;
  }
  return s;
}
function co(r6, e, t) {
  let n = r6.path;
  return uo(P(r6, e, t), n, e);
}
function uo(r6, e, t) {
  let n = e ? e + "." : "";
  return r6 === void 0 ? { type: "undefined", value: void 0, path: `${n}${t}` } : Array.isArray(r6) ? r6.map((i, o) => ({ ...i, path: `${n}${t}[${o}]` })) : { ...r6, path: `${n}${t}` };
}
var fr = { base64Binary: "string", boolean: "boolean", canonical: "string", code: "string", date: "string", dateTime: "string", decimal: "number", id: "string", instant: "string", integer: "number", integer64: "string", markdown: "string", oid: "string", positiveInt: "number", string: "string", time: "string", unsignedInt: "number", uri: "string", url: "string", uuid: "string", xhtml: "string", "http://hl7.org/fhirpath/System.String": "string" };
function tt(r6) {
  return r6 === "undefined" || r6 in fr;
}
var nt = { base64Binary: /^([A-Za-z\d+/]{4})*([A-Za-z\d+/]{2}==|[A-Za-z\d+/]{3}=)?$/, canonical: /^\S*$/, code: /^[^\s]+( [^\s]+)*$/, date: /^(\d(\d(\d[1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2]\d|3[0-1]))?)?$/, dateTime: /^(\d(\d(\d[1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2]\d|3[0-1])(T([01]\d|2[0-3])(:[0-5]\d:([0-5]\d|60)(\.\d{1,9})?)?)?)?(Z|[+-]((0\d|1[0-3]):[0-5]\d|14:00)?)?)?$/, id: /^[A-Za-z0-9\-.]{1,64}$/, instant: /^(\d(\d(\d[1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\d|3[0-1])T([01]\d|2[0-3]):[0-5]\d:([0-5]\d|60)(\.\d{1,9})?(Z|[+-]((0\d|1[0-3]):[0-5]\d|14:00))$/, markdown: /^[\s\S]+$/, oid: /^urn:oid:[0-2](\.(0|[1-9]\d*))+$/, string: /^[\s\S]+$/, time: /^([01]\d|2[0-3]):[0-5]\d:([0-5]\d|60)(\.\d{1,9})?$/, uri: /^\S*$/, url: /^\S*$/, uuid: /^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/, xhtml: /.*/ };
var lo = { "ele-1": true, "dom-3": true, "org-1": true, "sdf-19": true };
function Pu(r6, e) {
  if (!r6.resourceType) throw new d(h("Missing resource type"));
  return new rt(g(r6), e).validate();
}
function wu(r6, e) {
  return new rt(r6, e).validate();
}
var rt = class {
  constructor(e, t) {
    this.issues = [], this.root = e, this.currentResource = [], I(e.value) && this.currentResource.push(e.value), (t == null ? void 0 : t.profile) ? this.schema = sr(t.profile) : this.schema = Z(e.type);
  }
  validate() {
    this.constraintsCheck({ ...this.root, path: this.schema.path }, this.schema), mr(this.root.value, this.schema.path, this.issues), et(this.root, this, { schema: this.schema, initialPath: this.schema.path });
    let e = this.issues, t = false;
    for (let n of e) n.severity === "error" && (t = true);
    if (t) throw new d({ resourceType: "OperationOutcome", issue: e });
    return e;
  }
  onExitObject(e, t, n) {
    this.checkAdditionalProperties(t, n.elements, t.path);
  }
  onEnterResource(e, t) {
    this.currentResource.push(t.value);
  }
  onExitResource() {
    this.currentResource.pop();
  }
  visitProperty(e, t, n, i, o) {
    var _a2;
    let s = o.elements[t];
    if (!s) throw new Error(`Missing element validation schema for ${t}`);
    for (let a of i) {
      if (!this.checkPresence(a, s, n)) return;
      let c;
      if (s.isArray) {
        if (!Array.isArray(a)) {
          this.issues.push(T(n, "Expected array of values for property"));
          return;
        }
        c = a;
      } else {
        if (Array.isArray(a)) {
          this.issues.push(T(n, "Expected single value for property"));
          return;
        }
        c = [a];
      }
      (c.length < s.min || c.length > s.max) && this.issues.push(T(s.path, `Invalid number of values: expected ${s.min}..${Number.isFinite(s.max) ? s.max : "*"}, but found ${c.length}`)), mo(a, s) || this.issues.push(T(n, "Value did not match expected pattern"));
      let u = s.slicing ? Object.fromEntries(s.slicing.slices.map((p) => [p.name, 0])) : void 0;
      for (let p of c) {
        this.constraintsCheck(p, s), this.referenceTypeCheck(p, s), this.checkPropertyValue(p);
        let m = ho(p, s.slicing);
        m && u && (u[m] += 1);
      }
      this.validateSlices((_a2 = s.slicing) == null ? void 0 : _a2.slices, u, n);
    }
  }
  checkPresence(e, t, n) {
    return !Array.isArray(e) && e.value === void 0 ? (t.min > 0 && this.issues.push(T(e.path, "Missing required property")), false) : S(e) ? (this.issues.push(T(n, "Invalid empty value")), false) : true;
  }
  checkPropertyValue(e) {
    tt(e.type) && this.validatePrimitiveType(e);
  }
  validateSlices(e, t, n) {
    if (!(!e || !t)) for (let i of e) {
      let o = t[i.name];
      (o < i.min || o > i.max) && this.issues.push(T(n, `Incorrect number of values provided for slice '${i.name}': expected ${i.min}..${Number.isFinite(i.max) ? i.max : "*"}, but found ${o}`));
    }
  }
  checkAdditionalProperties(e, t, n) {
    let i = e.value;
    if (!i) return;
    let o = {};
    for (let s of Object.keys(i)) {
      if (s === "resourceType") continue;
      let a = fo(e, s, t);
      if (a) {
        let c, u;
        a.startsWith("_") ? (c = a.slice(1), u = s.slice(1)) : (c = "_" + a, u = "_" + s), c in o && o[c] !== u && this.issues.push(ae("warning", "structure", `Type of primitive extension does not match the type of property "${a.startsWith("_") ? a.slice(1) : a}"`, a)), o[a] && this.issues.push(ae("warning", "structure", `Conflicting choice of type properties: "${s}", "${o[a]}"`, s)), o[a] = s;
        continue;
      }
      !(s in t) && !(s.startsWith("_") && s.slice(1) in t) && this.issues.push(T(`${n}.${s}`, `Invalid additional property "${s}"`));
    }
  }
  constraintsCheck(e, t) {
    let n = t.constraints;
    if (n) {
      for (let i of n) if (i.severity === "error" && !(i.key in lo) && !this.isExpressionTrue(i, e)) {
        this.issues.push(un(e.path, i));
        return;
      }
    }
  }
  referenceTypeCheck(e, t) {
    var _a2;
    if (e.type !== "Reference") return;
    let n = e.value;
    if (!ue(n)) return;
    let i = n.reference.split("/")[0];
    if (!i) return;
    let o = (_a2 = t.type.find((m) => m.code === "Reference")) == null ? void 0 : _a2.targetProfile;
    if (!o) return;
    let s = Zr + "/fhir/StructureDefinition/", a = s + "Resource", c = s + i, u = "https://medplum.com/fhir/StructureDefinition/", p = u + i;
    for (let m of o) if (m === a || m === c || m === p || !m.startsWith(s) && !m.startsWith(u)) return;
    this.issues.push(ae("warning", "structure", `Invalid reference: got "${i}", expected "${o.join('", "')}"`, e.path));
  }
  isExpressionTrue(e, t) {
    let n = { "%context": t, "%ucum": g(Yr) };
    this.currentResource.length > 0 && (n["%resource"] = g(this.currentResource[this.currentResource.length - 1])), I(this.root.value) && (n["%rootResource"] = this.root);
    try {
      let i = A(e.expression, [t], n);
      return i.length === 1 && i[0].value === true;
    } catch (i) {
      return this.issues.push(ln(t.path, "Error evaluating invariant expression", i, { fhirpath: e.expression })), false;
    }
  }
  validatePrimitiveType(e) {
    let [t, n] = yo(e), i = e.path;
    if (t) {
      let { type: o, value: s } = t;
      if (!(o in fr)) {
        this.issues.push(T(i, `Invalid JSON type: ${o} is not a valid FHIR type`));
        return;
      }
      let a = fr[o];
      if (typeof s !== a) {
        s !== null && this.issues.push(T(i, `Invalid JSON type: expected ${a}, but got ${typeof s}`));
        return;
      }
      a === "string" ? this.validateString(s, o, i) : a === "number" && this.validateNumber(s, o, i);
    }
    n && et(n, this, { schema: Z("Element"), initialPath: i });
  }
  validateString(e, t, n) {
    if (!e.trim()) {
      this.issues.push(T(n, "String must contain non-whitespace content"));
      return;
    }
    let i = nt[t];
    i && !i.exec(e) && this.issues.push(T(n, "Invalid " + t + " format"));
  }
  validateNumber(e, t, n) {
    Number.isNaN(e) || !Number.isFinite(e) ? this.issues.push(T(n, "Invalid numeric value")) : po(t) && !Number.isInteger(e) ? this.issues.push(T(n, "Expected number to be an integer")) : t === l.positiveInt && e <= 0 ? this.issues.push(T(n, "Expected number to be positive")) : t === l.unsignedInt && e < 0 && this.issues.push(T(n, "Expected number to be non-negative"));
  }
};
function po(r6) {
  return r6 === l.integer || r6 === l.positiveInt || r6 === l.unsignedInt;
}
function fo(r6, e, t) {
  let n = "";
  e.startsWith("_") && (e = e.slice(1), n = "_");
  let i = e.split(/(?=[A-Z])/g), o = "";
  for (let s of i) {
    o += s;
    let a = o + "[x]";
    if (t[a]) return P(r6, o) ? n + a : void 0;
  }
}
function mr(r6, e, t) {
  var _a2;
  for (let [n, i] of Object.entries(r6)) {
    let o = `${e}.${n}`, s = n.startsWith("_") ? n.slice(1) : `_${n}`;
    if (i === null) t.push(T(o, "Invalid null value"));
    else if (Array.isArray(i)) for (let a = 0; a < i.length; a++) i[a] === void 0 ? t.push(T(`${o}[${a}]`, "Invalid undefined value")) : i[a] === null && !((_a2 = r6[s]) == null ? void 0 : _a2[a]) ? t.push(T(`${o}[${a}]`, "Invalid null value")) : i[a] && mr(i[a], `${o}[${a}]`, t);
    else typeof i == "object" && mr(i, o, t);
  }
}
function mo(r6, e) {
  let t = Array.isArray(r6) ? r6.map((n) => ({ type: n.type, value: n.value })) : { type: r6.type, value: r6.value };
  return !(e.pattern && !Ue(t, e.pattern) || e.fixed && !ee(t, e.fixed));
}
function hr(r6, e, t, n) {
  var _a2;
  if (Array.isArray(r6)) return false;
  let i;
  e.path === "$this" ? i = t : i = (n ?? t.elements)[e.path];
  let o = t.type;
  switch (e.type) {
    case "value":
    case "pattern":
      if (!r6 || !i) return false;
      if (i.pattern) return Ue(r6, i.pattern);
      if (i.fixed) return ee(r6, i.fixed);
      if (((_a2 = i.binding) == null ? void 0 : _a2.strength) === "required" && i.binding.valueSet) return true;
      break;
    case "type":
      return !r6 || !(o == null ? void 0 : o.length) ? false : o.some((s) => s.code === r6.type);
  }
  return false;
}
function ho(r6, e) {
  if (e) {
    for (let t of e.slices) if (e.discriminator.every((n) => {
      var _a2;
      return (_a2 = Fe(Ce(r6, n.path))) == null ? void 0 : _a2.some((i) => hr(i, n, t));
    })) return t.name;
  }
}
function yo(r6) {
  if (typeof r6.value != "object" || !r6.value) return [r6, void 0];
  let e = r6.value.valueOf();
  if (e === r6.value) return [void 0, { type: "Element", value: r6.value }];
  let t = new Set(Object.keys(e)), n = Object.entries(r6.value).filter(([o, s]) => !t.has(o)), i = n.length > 0 ? Object.fromEntries(n) : void 0;
  return [{ type: r6.type, value: e }, { type: "Element", value: i }];
}
function f(r6) {
  return [{ type: l.boolean, value: r6 }];
}
function g(r6) {
  return r6 == null ? { type: "undefined", value: void 0 } : Number.isSafeInteger(r6) ? { type: l.integer, value: r6 } : typeof r6 == "number" ? { type: l.decimal, value: r6 } : typeof r6 == "boolean" ? { type: l.boolean, value: r6 } : typeof r6 == "string" ? { type: l.string, value: r6 } : k(r6) ? { type: l.Quantity, value: r6 } : I(r6) ? { type: r6.resourceType, value: r6 } : Tr(r6) ? { type: l.CodeableConcept, value: r6 } : vr(r6) ? { type: l.Coding, value: r6 } : { type: l.BackboneElement, value: r6 };
}
function N(r6) {
  return r6.length === 0 ? false : !!r6[0].value;
}
function j(r6, e) {
  if (r6.length !== 0) {
    if (r6.length === 1 && (!e || r6[0].type === e)) return r6[0];
    throw new Error(`Expected singleton of type ${e}, but found ${JSON.stringify(r6)}`);
  }
}
function P(r6, e, t) {
  if (!r6.value) return;
  let n = st(r6.type, e, t == null ? void 0 : t.profileUrl);
  return n ? go(r6, e, n) : xo(r6, e);
}
function go(r6, e, t) {
  let n = r6.value, i = t.type;
  if (!i || i.length === 0) return;
  let o, s = "undefined", a, c = t.path.lastIndexOf("."), u = t.path.substring(c + 1);
  for (let p of i) {
    let m = u.replace("[x]", w(p.code));
    if (o = n[m], a = n["_" + m], o !== void 0 || a !== void 0) {
      s = p.code;
      break;
    }
  }
  if (a) if (Array.isArray(o)) {
    o = o.slice();
    for (let p = 0; p < Math.max(o.length, a.length); p++) o[p] = An(o[p], a[p]);
  } else o = An(o, a);
  if (!S(o)) return (s === "Element" || s === "BackboneElement") && (s = t.type[0].code), Array.isArray(o) ? o.map((p) => Rn(p, s)) : Rn(o, s);
}
function Rn(r6, e) {
  return e === "Resource" && I(r6) && (e = r6.resourceType), { type: e, value: r6 };
}
function xo(r6, e) {
  let t = r6.value;
  if (!t || typeof t != "object") return;
  let n;
  if (e in t) {
    let i = t[e];
    Array.isArray(i) ? n = i.map(g) : n = g(i);
  } else {
    let i = e.endsWith("[x]") ? e.substring(0, e.length - 3) : e;
    for (let o of Object.values(l)) {
      let s = i + w(o);
      if (s in t) {
        let a = t[s];
        Array.isArray(a) ? n = a.map((c) => ({ type: o, value: c })) : n = { type: o, value: a };
        break;
      }
    }
  }
  if (Array.isArray(n)) {
    if (n.length === 0 || S(n[0])) return;
  } else if (S(n)) return;
  return n;
}
function it(r6) {
  let e = [];
  for (let t of r6) {
    let n = false;
    for (let i of e) if (N(yr(t, i))) {
      n = true;
      break;
    }
    n || e.push(t);
  }
  return e;
}
function On(r6) {
  return f(!N(r6));
}
function In(r6, e) {
  return r6.length === 0 || e.length === 0 ? [] : r6.length !== e.length ? f(false) : f(r6.every((t, n) => N(yr(t, e[n]))));
}
function kn(r6, e) {
  return r6.length === 0 || e.length === 0 ? [] : r6.length !== e.length ? f(true) : f(r6.some((t, n) => !N(yr(t, e[n]))));
}
function yr(r6, e) {
  var _a2, _b;
  let t = (_a2 = r6.value) == null ? void 0 : _a2.valueOf(), n = (_b = e.value) == null ? void 0 : _b.valueOf();
  return typeof t == "number" && typeof n == "number" ? f(Math.abs(t - n) < 1e-8) : k(t) && k(n) ? f(Mn(t, n)) : f(typeof t == "object" && typeof n == "object" ? xr(r6, e) : t === n);
}
function gr(r6, e) {
  return r6.length === 0 && e.length === 0 ? f(true) : r6.length !== e.length ? f(false) : (r6.sort(Cn), e.sort(Cn), f(r6.every((t, n) => N(vo(t, e[n])))));
}
function vo(r6, e) {
  let { type: t, value: n } = r6, { type: i, value: o } = e, s = n == null ? void 0 : n.valueOf(), a = o == null ? void 0 : o.valueOf();
  return typeof s == "number" && typeof a == "number" ? f(Math.abs(s - a) < 0.01) : k(s) && k(a) ? f(Mn(s, a)) : f(t === "Coding" && i === "Coding" ? typeof s != "object" || typeof a != "object" ? false : s.code === a.code && s.system === a.system : typeof s == "object" && typeof a == "object" ? xr({ ...s, id: void 0 }, { ...a, id: void 0 }) : typeof s == "string" && typeof a == "string" ? s.toLowerCase() === a.toLowerCase() : s === a);
}
function Cn(r6, e) {
  var _a2, _b;
  let t = (_a2 = r6.value) == null ? void 0 : _a2.valueOf(), n = (_b = e.value) == null ? void 0 : _b.valueOf();
  return typeof t == "number" && typeof n == "number" ? t - n : typeof t == "string" && typeof n == "string" ? t.localeCompare(n) : 0;
}
function ot(r6, e) {
  let { value: t } = r6;
  if (t == null) return false;
  switch (e) {
    case "Boolean":
      return typeof t == "boolean";
    case "Decimal":
    case "Integer":
      return typeof t == "number";
    case "Date":
      return Vn(t);
    case "DateTime":
      return Pe(t);
    case "Time":
      return typeof t == "string" && !!/^T\d/.exec(t);
    case "Period":
      return Dn(t);
    case "Quantity":
      return k(t);
    default:
      return typeof t == "object" && (t == null ? void 0 : t.resourceType) === e;
  }
}
function Vn(r6) {
  return typeof r6 == "string" && !!nt.date.exec(r6);
}
function Pe(r6) {
  return typeof r6 == "string" && !!nt.dateTime.exec(r6);
}
function Dn(r6) {
  return !!(r6 && typeof r6 == "object" && ("start" in r6 && Pe(r6.start) || "end" in r6 && Pe(r6.end)));
}
function Du(r6) {
  if (r6) {
    if (Vn(r6)) return { start: Pn(r6, "0000-00-00T00:00:00.000Z"), end: Pn(r6, "xxxx-12-31T23:59:59.999Z") };
    if (Pe(r6)) return { start: r6, end: r6 };
    if (Dn(r6)) return r6;
  }
}
function Pn(r6, e) {
  return r6 + e.substring(r6.length);
}
function k(r6) {
  return !!(r6 && typeof r6 == "object" && "value" in r6 && typeof r6.value == "number");
}
function Mn(r6, e) {
  return Math.abs(r6.value - e.value) < 0.01 && (r6.unit === e.unit || r6.code === e.code || r6.unit === e.code || r6.code === e.unit);
}
function xr(r6, e) {
  let t = Object.keys(r6), n = Object.keys(e);
  if (t.length !== n.length) return false;
  for (let i of t) {
    let o = r6[i], s = e[i];
    if (wn(o) && wn(s)) {
      if (!xr(o, s)) return false;
    } else if (o !== s) return false;
  }
  return true;
}
function wn(r6) {
  return r6 !== null && typeof r6 == "object";
}
function An(r6, e) {
  if (e) {
    if (typeof e != "object") throw new Error("Primitive extension must be an object");
    return To(r6 ?? {}, e);
  }
  return r6;
}
function To(r6, e) {
  return delete e.__proto__, delete e.constructor, Object.assign(r6, e);
}
function te(r6) {
  let e = le(r6), t = Eo(r6);
  return t === e ? { reference: e } : { reference: e, display: t };
}
function le(r6) {
  return ue(r6) ? r6.reference : `${r6.resourceType}/${r6.id}`;
}
function pe(r6) {
  if (r6) return ue(r6) ? r6.reference.split("/")[1] : r6.id;
}
function Uu(r6) {
  if ((r6 == null ? void 0 : r6.reference) === void 0) throw new d(h("Reference missing reference property."));
  let [e, t] = r6.reference.split("/");
  if (e === "" || t === "" || t === void 0) throw new d(h("Unable to parse reference string."));
  return [e, t];
}
function So(r6) {
  return r6.resourceType === "Patient" || r6.resourceType === "Practitioner" || r6.resourceType === "RelatedPerson";
}
function Eo(r6) {
  if (So(r6)) {
    let e = bo(r6);
    if (e) return e;
  }
  if (r6.resourceType === "Device") {
    let e = Ro(r6);
    if (e) return e;
  }
  if (r6.resourceType === "MedicationRequest" && r6.medicationCodeableConcept) return at(r6.medicationCodeableConcept);
  if (r6.resourceType === "Subscription" && r6.criteria) return r6.criteria;
  if (r6.resourceType === "User" && r6.email) return r6.email;
  if ("name" in r6 && r6.name && typeof r6.name == "string") return r6.name;
  if ("code" in r6 && r6.code) {
    let e = r6.code;
    if (Array.isArray(e) && (e = e[0]), Tr(e)) return at(e);
    if (Do(e)) return e.text;
  }
  return le(r6);
}
function bo(r6) {
  let e = r6.name;
  if (e && e.length > 0) return lt(e[0]);
}
function Ro(r6) {
  let e = r6.deviceName;
  if (e && e.length > 0) return e[0].name;
}
function Bu(r6) {
  if (!("photo" in r6)) return;
  let e = r6.photo;
  if (e) if (Array.isArray(e)) for (let t of e) {
    let n = _n(t);
    if (n) return n;
  }
  else return _n(e);
}
function _n(r6) {
  var _a2;
  if (r6.url && ((_a2 = r6.contentType) == null ? void 0 : _a2.startsWith("image/"))) return r6.url;
}
function qu(r6) {
  return r6 ? new Date(r6) : void 0;
}
function ct(r6, e) {
  let t = new Date(r6);
  t.setUTCHours(0, 0, 0, 0);
  let n = e ? new Date(e) : /* @__PURE__ */ new Date();
  n.setUTCHours(0, 0, 0, 0);
  let i = t.getUTCFullYear(), o = t.getUTCMonth(), s = t.getUTCDate(), a = n.getUTCFullYear(), c = n.getUTCMonth(), u = n.getUTCDate(), p = a - i;
  (c < o || c === o && u < s) && p--;
  let m = a * 12 + c - (i * 12 + o);
  u < s && m--;
  let x = Math.floor((n.getTime() - t.getTime()) / (1e3 * 60 * 60 * 24));
  return { years: p, months: m, days: x };
}
function ju(r6, e) {
  let { years: t, months: n, days: i } = ct(r6, e);
  return t >= 2 ? t.toString().padStart(3, "0") + "Y" : n >= 1 ? n.toString().padStart(3, "0") + "M" : i.toString().padStart(3, "0") + "D";
}
function Wu(r6) {
  let e = {};
  return Nn(r6.item, e), e;
}
function Nn(r6, e) {
  if (r6) for (let t of r6) t.linkId && t.answer && t.answer.length > 0 && (e[t.linkId] = t.answer[0]), Nn(t.item, e);
}
function $u(r6) {
  let e = {};
  return Ln(r6.item, e), e;
}
function Ln(r6, e) {
  if (r6) for (let t of r6) t.linkId && t.answer && t.answer.length > 0 && (e[t.linkId] ? e[t.linkId] = [...e[t.linkId], ...t.answer] : e[t.linkId] = t.answer), Ln(t.item, e);
}
function Co(r6, e) {
  let t = r6.identifier;
  if (!t) return;
  let n = Array.isArray(t) ? t : [t];
  for (let i of n) if (i.system === e) return i.value;
}
function Gu(r6, e, t) {
  let n = r6.identifier;
  if (!n) {
    r6.identifier = [{ system: e, value: t }];
    return;
  }
  for (let i of n) if (i.system === e) {
    i.value = t;
    return;
  }
  n.push({ system: e, value: t });
}
function Hu(r6, ...e) {
  let t = X(r6, ...e);
  if (!t) return;
  let n = P({ type: "Extension", value: t }, "value[x]");
  if (n) return Array.isArray(n) ? n[0].value : n.value;
}
function X(r6, ...e) {
  var _a2;
  let t = r6;
  for (let n = 0; n < e.length && t; n++) t = (_a2 = t == null ? void 0 : t.extension) == null ? void 0 : _a2.find((i) => i.url === e[n]);
  return t;
}
function Fn(r6, e) {
  return JSON.stringify(r6, Po, e ? 2 : void 0);
}
function Po(r6, e) {
  return !wo(r6) && S(e) ? void 0 : e;
}
function wo(r6) {
  return !!/\d+$/.exec(r6);
}
function S(r6) {
  if (r6 == null) return true;
  let e = typeof r6;
  return e === "string" || e === "object" ? !K(r6) : false;
}
function K(r6) {
  if (r6 == null) return false;
  let e = typeof r6;
  return e === "string" && r6 !== "" || e === "object" && ("length" in r6 && r6.length > 0 || Object.keys(r6).length > 0);
}
function ee(r6, e, t) {
  return r6 === e || S(r6) && S(e) ? true : S(r6) || S(e) ? false : Array.isArray(r6) && Array.isArray(e) ? Ao(r6, e) : Array.isArray(r6) || Array.isArray(e) ? false : R(r6) && R(e) ? Oo(r6, e, t) : (R(r6) || R(e), false);
}
function Ao(r6, e) {
  if (r6.length !== e.length) return false;
  for (let t = 0; t < r6.length; t++) if (!ee(r6[t], e[t])) return false;
  return true;
}
function Oo(r6, e, t) {
  let n = /* @__PURE__ */ new Set();
  Object.keys(r6).forEach((i) => n.add(i)), Object.keys(e).forEach((i) => n.add(i)), t === "meta" && (n.delete("versionId"), n.delete("lastUpdated"), n.delete("author"));
  for (let i of n) {
    let o = r6[i], s = e[i];
    if (!ee(o, s, i)) return false;
  }
  return true;
}
function Ue(r6, e) {
  return S(r6) ? true : S(e) ? false : Array.isArray(r6) && Array.isArray(e) ? Io(r6, e) : Array.isArray(r6) || Array.isArray(e) ? false : R(r6) && R(e) ? ko(r6, e) : R(r6) || R(e) ? false : r6 === e;
}
function Io(r6, e) {
  return e.every((t) => r6.some((n) => Ue(n, t)));
}
function ko(r6, e) {
  return Object.entries(e).every(([t, n]) => t in r6 && Ue(r6[t], n));
}
function de(r6) {
  return r6 === void 0 ? r6 : JSON.parse(JSON.stringify(r6));
}
function Qu(r6) {
  return !!/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$/i.exec(r6);
}
function R(r6) {
  return r6 !== null && typeof r6 == "object";
}
function Un(r6) {
  return r6.every(Vo);
}
function Vo(r6) {
  return typeof r6 == "string";
}
function vr(r6) {
  return R(r6) && "code" in r6 && typeof r6.code == "string";
}
function Tr(r6) {
  return R(r6) && "coding" in r6 && Array.isArray(r6.coding) && r6.coding.every(vr);
}
function Do(r6) {
  return R(r6) && "text" in r6 && typeof r6.text == "string";
}
var Bn = [];
for (let r6 = 0; r6 < 256; r6++) Bn.push(r6.toString(16).padStart(2, "0"));
function qn(r6) {
  let e = Wn(r6), t = new Uint8Array(e), n = new Array(t.length);
  for (let i = 0; i < t.length; i++) n[i] = Bn[t[i]];
  return n.join("");
}
function jn(r6) {
  let e = Wn(r6), t = new Uint8Array(e), n = new Array(t.length);
  for (let i = 0; i < t.length; i++) n[i] = String.fromCharCode(t[i]);
  return window.btoa(n.join(""));
}
function Wn(r6) {
  return ArrayBuffer.isView(r6) ? r6.buffer : r6;
}
function w(r6) {
  return r6 ? r6.charAt(0).toUpperCase() + r6.substring(1) : "";
}
function Ku(r6) {
  return r6 === r6.toLowerCase() && r6 !== r6.toUpperCase();
}
function Er(r6) {
  return r6.length > 0 && r6.startsWith(r6[0].toUpperCase());
}
function we(r6, e) {
  let t = r6 + ".";
  if (e.startsWith(t)) return e.slice(t.length);
}
function Sr(r6, e) {
  var _a2, _b;
  return (_b = (_a2 = r6.coding) == null ? void 0 : _a2.find((t) => t.system === e)) == null ? void 0 : _b.code;
}
function zu(r6, e, t) {
  r6.coding || (r6.coding = []);
  let n = r6.coding.find((i) => i.system === e);
  n ? n.code = t : r6.coding.push({ system: e, code: t });
}
function Ju(r6, e, t, n) {
  var _a2;
  return (_a2 = r6.qualifiedInterval) == null ? void 0 : _a2.find((i) => {
    var _a3;
    return $n(i, e) && No(i, t, (_a3 = r6.quantitativeDetails) == null ? void 0 : _a3.decimalPrecision) && (n === void 0 || i.category === n);
  });
}
function Yu(r6, e, t) {
  var _a2;
  return (_a2 = r6.qualifiedInterval) == null ? void 0 : _a2.find((n) => $n(n, e) && t.includes(n.condition));
}
function $n(r6, e) {
  return Mo(r6, e) && _o(r6, e);
}
function Mo(r6, e) {
  return !r6.gender || r6.gender === e.gender;
}
function _o(r6, e) {
  return !r6.age || Gn(ct(e.birthDate).years, r6.age);
}
function No(r6, e, t) {
  return !!r6.range && Gn(e, r6.range, t);
}
function Gn(r6, e, t) {
  var _a2, _b;
  return (((_a2 = e.low) == null ? void 0 : _a2.value) === void 0 || Fo(r6, e.low.value, t)) && (((_b = e.high) == null ? void 0 : _b.value) === void 0 || Lo(r6, e.high.value, t));
}
function Zu(r6, e) {
  return parseFloat(r6.toFixed(e));
}
function Xu(r6, e, t) {
  return W(r6, t) === W(e, t);
}
function el(r6, e, t) {
  return W(r6, t) < W(e, t);
}
function tl(r6, e, t) {
  return W(r6, t) > W(e, t);
}
function Lo(r6, e, t) {
  return W(r6, t) <= W(e, t);
}
function Fo(r6, e, t) {
  return W(r6, t) >= W(e, t);
}
function W(r6, e) {
  return e === void 0 ? r6 : Math.round(r6 * Math.pow(10, e));
}
function rl(r6, e, t) {
  return r6.find((n) => typeof e == "string" ? Sr(n.code || {}, t) === e : Sr(n.code || {}, t) === Sr(e, t));
}
function Fe(r6) {
  if (r6 !== void 0) return Array.isArray(r6) ? r6 : [r6];
}
function nl(r6) {
  return Array.isArray(r6) ? r6[0] : r6;
}
var br = (r6) => new Promise((e) => {
  setTimeout(e, r6);
});
function Rr(r6, e, t) {
  let n = [];
  for (let i = 0; i < t - 1; i++) {
    let o = r6.indexOf(e);
    if (o < 0) break;
    n.push(r6.slice(0, o)), r6 = r6.slice(o + e.length);
  }
  return n.push(r6), n;
}
function Hn(r6) {
  let e, t = false;
  return function() {
    return t || (e = r6(), t = true), e;
  };
}
function Ae(r6, e) {
  return r6 ? (r6.push(e), r6) : [e];
}
function ut(r6) {
  return r6.sort((e, t) => e.localeCompare(t));
}
function Cr(r6) {
  return r6.endsWith("/") ? r6 : r6 + "/";
}
function Uo(r6) {
  return r6.startsWith("/") ? r6.slice(1) : r6;
}
function B(r6, e) {
  return new URL(Uo(e), Cr(r6.toString())).toString();
}
function Qn(r6, e) {
  return B(r6, e).toString().replace("http://", "ws://").replace("https://", "wss://");
}
function Kn(r6) {
  return typeof r6 == "object" && !Array.isArray(r6) && !(r6 instanceof URLSearchParams) && (r6 = Object.fromEntries(Object.entries(r6).filter((e) => e[1] !== void 0))), new URLSearchParams(r6).toString();
}
var Bo = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-_]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-_]*[A-Za-z0-9])$/;
function il(r6) {
  return Bo.test(r6);
}
function ol(r6, e) {
  var _a2, _b;
  return ((_b = (_a2 = r6 == null ? void 0 : r6.meta) == null ? void 0 : _a2.profile) == null ? void 0 : _b.includes(e)) || (r6.meta = r6.meta ?? {}, r6.meta.profile = r6.meta.profile ?? [], r6.meta.profile.push(e)), r6;
}
function sl(r6, e) {
  var _a2;
  return new Map((_a2 = r6.entry) == null ? void 0 : _a2.filter((n) => !!n.resource).map((n) => [Co(n.resource, e), n.resource]).filter(([n]) => n !== void 0));
}
function al(r6, e) {
  var _a2, _b;
  if ((_b = (_a2 = r6 == null ? void 0 : r6.meta) == null ? void 0 : _a2.profile) == null ? void 0 : _b.includes(e)) {
    let t = r6.meta.profile.indexOf(e);
    r6.meta.profile.splice(t, 1);
  }
  return r6;
}
function zn(r6, e) {
  let t = [];
  if (!r6) return t;
  for (let n = 0; n < r6.length; n++) {
    let i = e(r6[n], n);
    Array.isArray(i) ? t.push(...i.flat()) : i !== void 0 && t.push(i);
  }
  return t;
}
function ll(r6, e) {
  let t = [];
  if (r6.line && t.push(...r6.line), r6.city || r6.state || r6.postalCode) {
    let n = [];
    r6.city && n.push(r6.city), r6.state && n.push(r6.state), r6.postalCode && n.push(r6.postalCode), t.push(n.join(", "));
  }
  return r6.use && ((e == null ? void 0 : e.all) || (e == null ? void 0 : e.use)) && t.push("[" + r6.use + "]"), t.join((e == null ? void 0 : e.lineSeparator) ?? ", ").trim();
}
function lt(r6, e) {
  let t = [];
  if (r6.prefix && (e == null ? void 0 : e.prefix) !== false && t.push(...r6.prefix), r6.given && t.push(...r6.given), r6.family && t.push(r6.family), r6.suffix && (e == null ? void 0 : e.suffix) !== false && t.push(...r6.suffix), r6.use && ((e == null ? void 0 : e.all) || (e == null ? void 0 : e.use)) && t.push("[" + r6.use + "]"), t.length === 0) {
    let n = me(r6.text);
    if (n) return n;
  }
  return t.join(" ").trim();
}
function pl(r6) {
  let e = [];
  return r6.given && e.push(...r6.given), e.join(" ").trim();
}
function dl(r6) {
  return me(r6.family) ?? "";
}
function wr(r6) {
  return r6 instanceof Date && !isNaN(r6.getTime());
}
function fl(r6, e, t) {
  if (!r6) return "";
  let n = new Date(r6);
  return wr(n) ? (n.setUTCHours(0, 0, 0, 0), n.toLocaleDateString(e, { timeZone: "UTC", ...t })) : "";
}
function qo(r6, e, t) {
  if (!r6) return "";
  let n = /* @__PURE__ */ new Date("2000-01-01T" + r6 + "Z");
  return wr(n) ? n.toLocaleTimeString(e, t) : "";
}
function Pr(r6, e, t) {
  if (!r6) return "";
  let n = new Date(r6);
  return wr(n) ? n.toLocaleString(e, t) : "";
}
function ml(r6, e, t) {
  return !r6 || !r6.start && !r6.end ? "" : Pr(r6.start, e, t) + " - " + Pr(r6.end, e, t);
}
var jo = { s: "every second", min: "every minute", h: "hourly", d: "daily", wk: "weekly", mo: "monthly", a: "annually" };
var Wo = { s: "second", min: "minute", h: "hour", d: "day", wk: "week", mo: "month", a: "year" };
var $o = { s: "seconds", min: "minutes", h: "hours", d: "days", wk: "weeks", mo: "months", a: "years" };
function hl(r6) {
  if (!r6) return "";
  let e = [];
  return Go(e, r6.repeat), r6.event && e.push(r6.event.map((t) => Pr(t)).join(", ")), w(e.join(" ").trim());
}
function Go(r6, e) {
  if (!(e == null ? void 0 : e.periodUnit)) return;
  let t = e.frequency ?? 1, n = e.period ?? 1, i = e.periodUnit;
  t === 1 && n === 1 ? r6.push(jo[i]) : (t === 1 ? r6.push("once") : r6.push(t + " times"), n === 1 ? r6.push("per " + Wo[i]) : r6.push("per " + n + " " + $o[i])), e.dayOfWeek && r6.push("on " + e.dayOfWeek.map(w).join(", ")), e.timeOfDay && r6.push("at " + e.timeOfDay.map((o) => qo(o)).join(", "));
}
function yl(r6, e, t = false) {
  if (t && e === void 0) throw new Error("Precision must be specified for exclusive ranges");
  let n = (r6 == null ? void 0 : r6.low) && { ...r6.low, comparator: void 0 }, i = (r6 == null ? void 0 : r6.high) && { ...r6.high, comparator: void 0 };
  return (n == null ? void 0 : n.value) === void 0 && (i == null ? void 0 : i.value) === void 0 ? "" : (n == null ? void 0 : n.value) !== void 0 && (i == null ? void 0 : i.value) === void 0 ? t && e !== void 0 ? (n.value = zo(n.value, e), `> ${fe(n, e)}`) : `>= ${fe(n, e)}` : (n == null ? void 0 : n.value) === void 0 && (i == null ? void 0 : i.value) !== void 0 ? t && e !== void 0 ? (i.value = Ko(i.value, e), `< ${fe(i, e)}`) : `<= ${fe(i, e)}` : ((n == null ? void 0 : n.unit) === (i == null ? void 0 : i.unit) && (n == null ? true : delete n.unit), `${fe(n, e)} - ${fe(i, e)}`);
}
function fe(r6, e) {
  if (!r6) return "";
  let t = [];
  return r6.comparator && (t.push(r6.comparator), t.push(" ")), r6.value !== void 0 && (e !== void 0 ? t.push(r6.value.toFixed(e)) : t.push(r6.value)), r6.unit && (r6.unit !== "%" && t[t.length - 1] !== " " && t.push(" "), t.push(r6.unit)), t.join("").trim();
}
function gl(r6) {
  return (r6 == null ? void 0 : r6.value) === void 0 ? "" : r6.value.toLocaleString(void 0, { style: "currency", currency: r6.currency ?? "USD", currencyDisplay: "narrowSymbol" });
}
function at(r6) {
  if (!r6) return "";
  let e = me(r6.text);
  return e || (r6.coding ? r6.coding.map((t) => Ho(t)).join(", ") : "");
}
function Ho(r6, e) {
  let t = me(r6 == null ? void 0 : r6.display);
  if (t) {
    let n = e ? me(r6 == null ? void 0 : r6.code) : void 0;
    return `${t}${n ? " (" + n + ")" : ""}`;
  }
  return me(r6 == null ? void 0 : r6.code) ?? "";
}
function Qo(r6) {
  if (!r6) return "";
  let e = [];
  if (r6.valueQuantity) e.push(fe(r6.valueQuantity));
  else if (r6.valueCodeableConcept) e.push(at(r6.valueCodeableConcept));
  else {
    let t = me(r6.valueString);
    t && e.push(t);
  }
  return "component" in r6 && e.push(r6.component.map((t) => Qo(t)).join(" / ")), e.join(" / ").trim();
}
function me(r6) {
  return typeof r6 == "string" ? r6 : void 0;
}
function Ko(r6, e, t = 1) {
  return (Jn(r6, e) + t) * Math.pow(10, -e);
}
function zo(r6, e, t = 1) {
  return (Jn(r6, e) - t) * Math.pow(10, -e);
}
function Jn(r6, e) {
  return e === void 0 ? r6 : Math.round(r6 * Math.pow(10, e));
}
var l = { Address: "Address", Age: "Age", Annotation: "Annotation", Attachment: "Attachment", BackboneElement: "BackboneElement", CodeableConcept: "CodeableConcept", Coding: "Coding", ContactDetail: "ContactDetail", ContactPoint: "ContactPoint", Contributor: "Contributor", Count: "Count", DataRequirement: "DataRequirement", Distance: "Distance", Dosage: "Dosage", Duration: "Duration", Expression: "Expression", Extension: "Extension", HumanName: "HumanName", Identifier: "Identifier", MarketingStatus: "MarketingStatus", Meta: "Meta", Money: "Money", Narrative: "Narrative", ParameterDefinition: "ParameterDefinition", Period: "Period", Population: "Population", ProdCharacteristic: "ProdCharacteristic", ProductShelfLife: "ProductShelfLife", Quantity: "Quantity", Range: "Range", Ratio: "Ratio", Reference: "Reference", RelatedArtifact: "RelatedArtifact", SampledData: "SampledData", Signature: "Signature", SubstanceAmount: "SubstanceAmount", SystemString: "http://hl7.org/fhirpath/System.String", Timing: "Timing", TriggerDefinition: "TriggerDefinition", UsageContext: "UsageContext", base64Binary: "base64Binary", boolean: "boolean", canonical: "canonical", code: "code", date: "date", dateTime: "dateTime", decimal: "decimal", id: "id", instant: "instant", integer: "integer", markdown: "markdown", oid: "oid", positiveInt: "positiveInt", string: "string", time: "time", unsignedInt: "unsignedInt", uri: "uri", url: "url", uuid: "uuid" };
function Rl(r6) {
  for (let e of r6.entry ?? []) {
    let t = e.resource;
    t.resourceType === "SearchParameter" && Ar(t);
  }
}
function Cl(r6) {
  let e = zn(r6.entry, (t) => {
    var _a2;
    return ((_a2 = t.resource) == null ? void 0 : _a2.resourceType) === "StructureDefinition" ? t.resource : void 0;
  }) ?? [];
  for (let t of e) Zn(t.type);
}
function Zn(r6) {
  let e = L.types[r6];
  return e || (e = { searchParamsDetails: {} }, L.types[r6] = e), e.searchParams || (e.searchParams = { _id: { base: [r6], code: "_id", type: "token", expression: r6 + ".id" }, _lastUpdated: { base: [r6], code: "_lastUpdated", type: "date", expression: r6 + ".meta.lastUpdated" }, _compartment: { base: [r6], code: "_compartment", type: "reference", expression: r6 + ".meta.compartment" }, _profile: { base: [r6], code: "_profile", type: "uri", expression: r6 + ".meta.profile" }, _security: { base: [r6], code: "_security", type: "token", expression: r6 + ".meta.security" }, _source: { base: [r6], code: "_source", type: "uri", expression: r6 + ".meta.source" }, _tag: { base: [r6], code: "_tag", type: "token", expression: r6 + ".meta.tag" } }), e;
}
function Ar(r6) {
  for (let e of r6.base ?? []) {
    let t = Zn(e);
    t.searchParams || (t.searchParams = {}), t.searchParams[r6.code] = r6;
  }
}
function or(r6) {
  var _a2, _b, _c2, _d;
  let e = (_b = (_a2 = r6.type) == null ? void 0 : _a2[0]) == null ? void 0 : _b.code;
  return e === "BackboneElement" || e === "Element" ? Jo((_d = ((_c2 = r6.base) == null ? void 0 : _c2.path) ?? r6.path) == null ? void 0 : _d.split(".")) : e;
}
function Jo(r6) {
  return r6.length === 1 ? r6[0] : r6.map(w).join("");
}
function lr(r6) {
  return r6.kind === "resource" && r6.name !== "Resource" && r6.name !== "DomainResource";
}
function Pl() {
  return Object.values(xn()).filter(lr).map((r6) => r6.name);
}
function wl(r6) {
  var _a2;
  return (_a2 = L.types[r6]) == null ? void 0 : _a2.searchParams;
}
function Al(r6, e) {
  var _a2, _b;
  return (_b = (_a2 = L.types[r6]) == null ? void 0 : _a2.searchParams) == null ? void 0 : _b[e];
}
function Ol(r6) {
  let e = r6.replaceAll("[x]", "").split(".").pop();
  return Yo(e);
}
function Yo(r6) {
  let e;
  return r6.length < 100 ? e = r6.match(/[A-Z]+(?![a-z])|[A-Z]?[a-z]+|\d+/g) ?? [] : e = r6.split(/(?=[A-Z])/), e.map(Xo).join(" ").replace("_", " ").replace(/\s+/g, " ");
}
var Zo = /* @__PURE__ */ new Set(["ID", "IP", "PKCE", "JWKS", "URI", "URL", "OMB", "UDI"]);
function Xo(r6) {
  let e = r6.toUpperCase();
  return r6 === e ? r6 : Zo.has(e) ? e : e.charAt(0) + r6.slice(1);
}
function st(r6, e, t) {
  let n = Le(r6, t);
  if (n) return es(n.elements, e);
}
function es(r6, e) {
  let t = r6[e] ?? r6[e + "[x]"];
  if (t) return t;
  for (let n = 0; n < e.length; n++) {
    let i = e[n];
    if (i >= "A" && i <= "Z") {
      let o = e.slice(0, n) + "[x]", s = r6[o];
      if (s) return s;
    }
  }
}
function I(r6) {
  return !!(r6 && typeof r6 == "object" && "resourceType" in r6);
}
function ue(r6) {
  return !!(r6 && typeof r6 == "object" && "reference" in r6 && typeof r6.reference == "string");
}
var L = { types: {} };
function Xn(r6) {
  var _a2;
  switch (r6.type) {
    case l.uuid:
    case l.uri:
    case l.url:
    case l.string:
    case l.oid:
    case l.markdown:
    case l.id:
    case l.code:
    case l.canonical:
    case l.base64Binary:
    case l.SystemString:
    case l.date:
    case l.dateTime:
    case l.instant:
      return r6.value;
    case l.Identifier:
      return `${r6.value.system ?? ""}|${r6.value.value}`;
    case l.Coding:
      return Yn(r6.value);
    case l.CodeableConcept:
      return ((_a2 = r6.value.coding) == null ? void 0 : _a2.map(Yn).join(",")) ?? r6.value.text;
    case l.HumanName:
      return r6.value.text ? r6.value.text : lt(r6.value);
    case l.unsignedInt:
    case l.positiveInt:
    case l.integer:
    case l.decimal:
      return r6.value.toString();
    case l.boolean:
      return r6.value ? "true" : "false";
    case l.Extension:
      return r6.value.url;
    case l.ContactPoint:
      return r6.value.value;
    case l.Quantity:
    case l.Age:
    case l.Count:
    case l.Duration:
      return `${r6.value.value}|${r6.value.system ?? ""}|${r6.value.code ?? r6.value.unit ?? ""}`;
    case l.Reference:
      return r6.value.reference;
    default:
      return I(r6.value) ? te(r6.value).reference : JSON.stringify(r6);
  }
}
function Yn(r6) {
  return r6 ? `${r6.system ?? ""}|${r6.code}` : "";
}
function Oe(r6) {
  if (r6.startsWith("T")) return r6 + "T00:00:00.000Z".substring(r6.length);
  if (r6.length <= 10) return r6;
  try {
    return new Date(r6).toISOString();
  } catch {
    return r6;
  }
}
var z = () => [];
var O = { empty: (r6, e) => f(e.length === 0 || e.every((t) => S(t.value))), hasValue: (r6, e) => f(e.length !== 0), exists: (r6, e, t) => t ? f(e.filter((n) => N(t.eval(r6, [n]))).length > 0) : f(e.length > 0 && e.every((n) => !S(n.value))), all: (r6, e, t) => f(e.every((n) => N(t.eval(r6, [n])))), allTrue: (r6, e) => {
  for (let t of e) if (!t.value) return f(false);
  return f(true);
}, anyTrue: (r6, e) => {
  for (let t of e) if (t.value) return f(true);
  return f(false);
}, allFalse: (r6, e) => {
  for (let t of e) if (t.value) return f(false);
  return f(true);
}, anyFalse: (r6, e) => {
  for (let t of e) if (!t.value) return f(true);
  return f(false);
}, subsetOf: (r6, e, t) => {
  if (e.length === 0) return f(true);
  let n = t.eval(r6, he(r6));
  return n.length === 0 ? f(false) : f(e.every((i) => n.some((o) => o.value === i.value)));
}, supersetOf: (r6, e, t) => {
  let n = t.eval(r6, he(r6));
  return n.length === 0 ? f(true) : e.length === 0 ? f(false) : f(n.every((i) => e.some((o) => o.value === i.value)));
}, count: (r6, e) => [{ type: l.integer, value: e.length }], distinct: (r6, e) => {
  let t = [];
  for (let n of e) t.some((i) => i.value === n.value) || t.push(n);
  return t;
}, isDistinct: (r6, e) => f(e.length === O.distinct(r6, e).length), where: (r6, e, t) => e.filter((n) => N(t.eval(r6, [n]))), select: (r6, e, t) => e.map((n) => t.eval({ parent: r6, variables: { $this: n } }, [n])).flat(), repeat: z, ofType: (r6, e, t) => e.filter((n) => n.type === t.name), single: (r6, e) => {
  if (e.length > 1) throw new Error("Expected input length one for single()");
  return e.length === 0 ? [] : e.slice(0, 1);
}, first: (r6, e) => e.length === 0 ? [] : e.slice(0, 1), last: (r6, e) => e.length === 0 ? [] : e.slice(e.length - 1, e.length), tail: (r6, e) => e.length === 0 ? [] : e.slice(1, e.length), skip: (r6, e, t) => {
  var _a2;
  let n = (_a2 = t.eval(r6, e)[0]) == null ? void 0 : _a2.value;
  if (typeof n != "number") throw new Error("Expected a number for skip(num)");
  return n >= e.length ? [] : n <= 0 ? e : e.slice(n, e.length);
}, take: (r6, e, t) => {
  var _a2;
  let n = (_a2 = t.eval(r6, e)[0]) == null ? void 0 : _a2.value;
  if (typeof n != "number") throw new Error("Expected a number for take(num)");
  return n >= e.length ? e : n <= 0 ? [] : e.slice(0, n);
}, intersect: (r6, e, t) => {
  if (!t) return e;
  let n = t.eval(r6, he(r6)), i = [];
  for (let o of e) !i.some((s) => s.value === o.value) && n.some((s) => s.value === o.value) && i.push(o);
  return i;
}, exclude: (r6, e, t) => {
  if (!t) return e;
  let n = t.eval(r6, he(r6)), i = [];
  for (let o of e) n.some((s) => s.value === o.value) || i.push(o);
  return i;
}, union: (r6, e, t) => {
  if (!t) return e;
  let n = t.eval(r6, he(r6));
  return it([...e, ...n]);
}, combine: (r6, e, t) => {
  if (!t) return e;
  let n = t.eval(r6, he(r6));
  return [...e, ...n];
}, htmlChecks: (r6, e, t) => [g(true)], iif: (r6, e, t, n, i) => {
  let o = t.eval(r6, e);
  if (o.length > 1 || o.length === 1 && typeof o[0].value != "boolean") throw new Error("Expected criterion to evaluate to a Boolean");
  return N(o) ? n.eval(r6, e) : i ? i.eval(r6, e) : [];
}, toBoolean: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  if (typeof t == "boolean") return [{ type: l.boolean, value: t }];
  if (typeof t == "number" && (t === 0 || t === 1)) return f(!!t);
  if (typeof t == "string") {
    let n = t.toLowerCase();
    if (["true", "t", "yes", "y", "1", "1.0"].includes(n)) return f(true);
    if (["false", "f", "no", "n", "0", "0.0"].includes(n)) return f(false);
  }
  return [];
}, convertsToBoolean: (r6, e) => e.length === 0 ? [] : f(O.toBoolean(r6, e).length === 1), toInteger: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return typeof t == "number" ? [{ type: l.integer, value: t }] : typeof t == "string" && /^[+-]?\d+$/.exec(t) ? [{ type: l.integer, value: parseInt(t, 10) }] : typeof t == "boolean" ? [{ type: l.integer, value: t ? 1 : 0 }] : [];
}, convertsToInteger: (r6, e) => e.length === 0 ? [] : f(O.toInteger(r6, e).length === 1), toDate: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return typeof t == "string" && /^\d{4}(-\d{2}(-\d{2})?)?/.exec(t) ? [{ type: l.date, value: Oe(t) }] : [];
}, convertsToDate: (r6, e) => e.length === 0 ? [] : f(O.toDate(r6, e).length === 1), toDateTime: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return typeof t == "string" && /^\d{4}(-\d{2}(-\d{2})?)?/.exec(t) ? [{ type: l.dateTime, value: Oe(t) }] : [];
}, convertsToDateTime: (r6, e) => e.length === 0 ? [] : f(O.toDateTime(r6, e).length === 1), toDecimal: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return typeof t == "number" ? [{ type: l.decimal, value: t }] : typeof t == "string" && /^-?\d{1,9}(\.\d{1,9})?$/.exec(t) ? [{ type: l.decimal, value: parseFloat(t) }] : typeof t == "boolean" ? [{ type: l.decimal, value: t ? 1 : 0 }] : [];
}, convertsToDecimal: (r6, e) => e.length === 0 ? [] : f(O.toDecimal(r6, e).length === 1), toQuantity: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return k(t) ? [{ type: l.Quantity, value: t }] : typeof t == "number" ? [{ type: l.Quantity, value: { value: t, unit: "1" } }] : typeof t == "string" && /^-?\d{1,9}(\.\d{1,9})?/.exec(t) ? [{ type: l.Quantity, value: { value: parseFloat(t), unit: "1" } }] : typeof t == "boolean" ? [{ type: l.Quantity, value: { value: t ? 1 : 0, unit: "1" } }] : [];
}, convertsToQuantity: (r6, e) => e.length === 0 ? [] : f(O.toQuantity(r6, e).length === 1), toString: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  return t == null ? [] : k(t) ? [{ type: l.string, value: `${t.value} '${t.unit}'` }] : [{ type: l.string, value: t.toString() }];
}, convertsToString: (r6, e) => e.length === 0 ? [] : f(O.toString(r6, e).length === 1), toTime: (r6, e) => {
  if (e.length === 0) return [];
  let [{ value: t }] = G(e, 1);
  if (typeof t == "string") {
    let n = /^T?(\d{2}(:\d{2}(:\d{2})?)?)/.exec(t);
    if (n) return [{ type: l.time, value: Oe("T" + n[1]) }];
  }
  return [];
}, convertsToTime: (r6, e) => e.length === 0 ? [] : f(O.toTime(r6, e).length === 1), indexOf: (r6, e, t) => F((n, i) => n.indexOf(i), r6, e, t), substring: (r6, e, t, n) => F((i, o, s) => {
  let a = o, c = s ? a + s : i.length;
  return a < 0 || a >= i.length ? void 0 : i.substring(a, c);
}, r6, e, t, n), startsWith: (r6, e, t) => F((n, i) => n.startsWith(i), r6, e, t), endsWith: (r6, e, t) => F((n, i) => n.endsWith(i), r6, e, t), contains: (r6, e, t) => F((n, i) => n.includes(i), r6, e, t), upper: (r6, e) => F((t) => t.toUpperCase(), r6, e), lower: (r6, e) => F((t) => t.toLowerCase(), r6, e), replace: (r6, e, t, n) => F((i, o, s) => i.replaceAll(o, s), r6, e, t, n), matches: (r6, e, t) => F((n, i) => !!new RegExp(i).exec(n), r6, e, t), replaceMatches: (r6, e, t, n) => F((i, o, s) => i.replaceAll(o, s), r6, e, t, n), length: (r6, e) => F((t) => t.length, r6, e), toChars: (r6, e) => F((t) => t ? t.split("") : void 0, r6, e), encode: z, decode: z, escape: z, unescape: z, trim: z, split: z, join: (r6, e, t) => {
  var _a2;
  let n = ((_a2 = t == null ? void 0 : t.eval(r6, he(r6))[0]) == null ? void 0 : _a2.value) ?? "";
  if (typeof n != "string") throw new Error("Separator must be a string.");
  return [{ type: l.string, value: e.map((i) => {
    var _a3;
    return ((_a3 = i.value) == null ? void 0 : _a3.toString()) ?? "";
  }).join(n) }];
}, abs: (r6, e) => $(Math.abs, r6, e), ceiling: (r6, e) => $(Math.ceil, r6, e), exp: (r6, e) => $(Math.exp, r6, e), floor: (r6, e) => $(Math.floor, r6, e), ln: (r6, e) => $(Math.log, r6, e), log: (r6, e, t) => $((n, i) => Math.log(n) / Math.log(i), r6, e, t), power: (r6, e, t) => $(Math.pow, r6, e, t), round: (r6, e) => $(Math.round, r6, e), sqrt: (r6, e) => $(Math.sqrt, r6, e), truncate: (r6, e) => $((t) => t | 0, r6, e), children: z, descendants: z, trace: (r6, e, t) => e, now: () => [{ type: l.dateTime, value: (/* @__PURE__ */ new Date()).toISOString() }], timeOfDay: () => [{ type: l.time, value: (/* @__PURE__ */ new Date()).toISOString().substring(11) }], today: () => [{ type: l.date, value: (/* @__PURE__ */ new Date()).toISOString().substring(0, 10) }], between: (r6, e, t, n, i) => {
  var _a2;
  let o = O.toDateTime(r6, t.eval(r6, e));
  if (o.length === 0) throw new Error("Invalid start date");
  let s = O.toDateTime(r6, n.eval(r6, e));
  if (s.length === 0) throw new Error("Invalid end date");
  let a = (_a2 = i.eval(r6, e)[0]) == null ? void 0 : _a2.value;
  if (a !== "years" && a !== "months" && a !== "days") throw new Error("Invalid units");
  let c = ct(o[0].value, s[0].value);
  return [{ type: l.Quantity, value: { value: c[a], unit: a } }];
}, is: (r6, e, t) => {
  let n = "";
  return t instanceof q ? n = t.name : t instanceof re && (n = t.left.name + "." + t.right.name), n ? e.map((i) => ({ type: l.boolean, value: ot(i, n) })) : [];
}, not: (r6, e) => O.toBoolean(r6, e).map((t) => ({ type: l.boolean, value: !t.value })), resolve: (r6, e) => e.map((t) => {
  let n = t.value, i;
  if (typeof n == "string") i = n;
  else if (typeof n == "object") {
    let o = n;
    if (o.resource) return g(o.resource);
    o.reference ? i = o.reference : o.type && o.identifier && (i = `${o.type}?identifier=${o.identifier.system}|${o.identifier.value}`);
  }
  if (i == null ? void 0 : i.includes("?")) {
    let [o] = i.split("?");
    return { type: o, value: { resourceType: o } };
  }
  if (i == null ? void 0 : i.includes("/")) {
    let [o, s] = i.split("/");
    return { type: o, value: { resourceType: o, id: s } };
  }
  return { type: l.BackboneElement, value: void 0 };
}).filter((t) => !!t.value), as: (r6, e) => e, type: (r6, e) => e.map(({ value: t }) => typeof t == "boolean" ? { type: l.BackboneElement, value: { namespace: "System", name: "Boolean" } } : typeof t == "number" ? { type: l.BackboneElement, value: { namespace: "System", name: "Integer" } } : I(t) ? { type: l.BackboneElement, value: { namespace: "FHIR", name: t.resourceType } } : { type: l.BackboneElement, value: null }), conformsTo: (r6, e, t) => {
  let n = t.eval(r6, e)[0].value;
  if (!n.startsWith("http://hl7.org/fhir/StructureDefinition/")) throw new Error("Expected a StructureDefinition URL");
  let i = n.replace("http://hl7.org/fhir/StructureDefinition/", "");
  return e.map((o) => {
    var _a2;
    return { type: l.boolean, value: ((_a2 = o.value) == null ? void 0 : _a2.resourceType) === i };
  });
}, getResourceKey: (r6, e) => {
  let t = e[0].value;
  return (t == null ? void 0 : t.id) ? [{ type: l.id, value: t.id }] : [];
}, getReferenceKey: (r6, e, t) => {
  let n = e[0].value;
  if (!(n == null ? void 0 : n.reference)) return [];
  let i = "";
  return t instanceof q && (i = t.name), i && !n.reference.startsWith(i + "/") ? [] : [{ type: l.id, value: pe(n) }];
}, extension: (r6, e, t) => {
  var _a2;
  let n = t.eval(r6, e)[0].value, i = (_a2 = e == null ? void 0 : e[0]) == null ? void 0 : _a2.value;
  if (i) {
    let o = X(i, n);
    if (o) return [{ type: l.Extension, value: o }];
  }
  return [];
} };
function F(r6, e, t, ...n) {
  if (t.length === 0) return [];
  let [{ value: i }] = G(t, 1);
  if (typeof i != "string") throw new Error("String function cannot be called with non-string");
  let o = r6(i, ...n.map((s) => {
    var _a2;
    return (_a2 = s == null ? void 0 : s.eval(e, t)[0]) == null ? void 0 : _a2.value;
  }));
  return o === void 0 ? [] : Array.isArray(o) ? o.map(g) : [g(o)];
}
function $(r6, e, t, ...n) {
  if (t.length === 0) return [];
  let [{ value: i }] = G(t, 1), o = k(i), s = o ? i.value : i;
  if (typeof s != "number") throw new Error("Math function cannot be called with non-number");
  let a = r6(s, ...n.map((p) => {
    var _a2;
    return (_a2 = p.eval(e, t)[0]) == null ? void 0 : _a2.value;
  })), c = o ? l.Quantity : t[0].type, u = o ? { ...i, value: a } : a;
  return [{ type: c, value: u }];
}
function G(r6, e) {
  if (r6.length !== e) throw new Error(`Expected ${e} arguments`);
  for (let t of r6) if (t == null) throw new Error("Expected non-null argument");
  return r6;
}
function he(r6) {
  var _a2;
  let e = r6;
  for (; (_a2 = e.parent) == null ? void 0 : _a2.variables.$this; ) e = e.parent;
  return [e.variables.$this];
}
var pt = class {
  constructor(e, t) {
    this.original = e;
    this.child = t;
  }
  eval(e, t) {
    try {
      if (t.length > 0) {
        let n = [];
        for (let i of t) n.push(this.child.eval({ parent: e, variables: { $this: i } }, [i]));
        return n.flat();
      } else return this.child.eval(e, []);
    } catch (n) {
      throw new Error(`FhirPathError on "${this.original}": ${n}`, { cause: n });
    }
  }
  toString() {
    return this.child.toString();
  }
};
var U = class {
  constructor(e) {
    this.value = e;
  }
  eval() {
    return [this.value];
  }
  toString() {
    let e = this.value.value;
    return typeof e == "string" ? `'${e}'` : e.toString();
  }
};
var q = class {
  constructor(e) {
    this.name = e;
  }
  eval(e, t) {
    if (this.name === "$this") return t;
    let n = this.getVariable(e);
    if (n) return [n];
    if (this.name.startsWith("%")) throw new Error(`Undefined variable ${this.name}`);
    return t.flatMap((i) => this.evalValue(i)).filter((i) => (i == null ? void 0 : i.value) !== void 0);
  }
  getVariable(e) {
    let t = e.variables[this.name];
    if (t !== void 0) return t;
    if (e.parent) return this.getVariable(e.parent);
  }
  evalValue(e) {
    let t = e.value;
    if (!(!t || typeof t != "object")) return I(t) && t.resourceType === this.name ? e : P(e, this.name);
  }
  toString() {
    return this.name;
  }
};
var dt = class {
  eval() {
    return [];
  }
  toString() {
    return "{}";
  }
};
var ft = class extends ze {
  constructor(t, n, i) {
    super(t, n);
    this.impl = i;
  }
  eval(t, n) {
    return this.impl(this.child.eval(t, n));
  }
  toString() {
    return this.operator + this.child.toString();
  }
};
var ye = class extends Y {
  constructor(e, t) {
    super("as", e, t);
  }
  eval(e, t) {
    return O.ofType(e, this.left.eval(e, t), this.right);
  }
};
var C = class extends Y {
};
var V = class extends C {
  constructor(t, n, i, o) {
    super(t, n, i);
    this.impl = o;
  }
  eval(t, n) {
    let i = this.left.eval(t, n);
    if (i.length !== 1) return [];
    let o = this.right.eval(t, n);
    if (o.length !== 1) return [];
    let s = i[0].value, a = o[0].value, c = k(s) ? s.value : s, u = k(a) ? a.value : a, p = this.impl(c, u);
    return typeof p == "boolean" ? f(p) : k(s) ? [{ type: l.Quantity, value: { ...s, value: p } }] : [g(p)];
  }
};
var mt = class extends Y {
  constructor(e, t) {
    super("&", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t), o = [...n, ...i];
    return o.length > 0 && o.every((s) => typeof s.value == "string") ? [{ type: l.string, value: o.map((s) => s.value).join("") }] : o;
  }
};
var ht = class extends C {
  constructor(e, t) {
    super("contains", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return f(n.some((o) => o.value === i[0].value));
  }
};
var yt = class extends C {
  constructor(e, t) {
    super("in", e, t);
  }
  eval(e, t) {
    let n = j(this.left.eval(e, t)), i = this.right.eval(e, t);
    return n ? f(i.some((o) => o.value === n.value)) : [];
  }
};
var re = class extends Y {
  constructor(e, t) {
    super(".", e, t);
  }
  eval(e, t) {
    return this.right.eval(e, this.left.eval(e, t));
  }
  toString() {
    return `${this.left.toString()}.${this.right.toString()}`;
  }
};
var Ie = class extends Y {
  constructor(e, t) {
    super("|", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return it([...n, ...i]);
  }
};
var gt = class extends C {
  constructor(e, t) {
    super("=", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return In(n, i);
  }
};
var xt = class extends C {
  constructor(e, t) {
    super("!=", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return kn(n, i);
  }
};
var vt = class extends C {
  constructor(e, t) {
    super("~", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return gr(n, i);
  }
};
var Tt = class extends C {
  constructor(e, t) {
    super("!~", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t), i = this.right.eval(e, t);
    return On(gr(n, i));
  }
};
var ge = class extends C {
  constructor(e, t) {
    super("is", e, t);
  }
  eval(e, t) {
    let n = this.left.eval(e, t);
    if (n.length !== 1) return [];
    let i = this.right.name;
    return f(ot(n[0], i));
  }
};
var St = class extends C {
  constructor(e, t) {
    super("and", e, t);
  }
  eval(e, t) {
    let n = j(this.left.eval(e, t), "boolean"), i = j(this.right.eval(e, t), "boolean");
    return (n == null ? void 0 : n.value) === true && (i == null ? void 0 : i.value) === true ? f(true) : (n == null ? void 0 : n.value) === false || (i == null ? void 0 : i.value) === false ? f(false) : [];
  }
};
var Et = class extends C {
  constructor(e, t) {
    super("or", e, t);
  }
  eval(e, t) {
    let n = j(this.left.eval(e, t), "boolean"), i = j(this.right.eval(e, t), "boolean");
    return (n == null ? void 0 : n.value) === false && (i == null ? void 0 : i.value) === false ? f(false) : (n == null ? void 0 : n.value) || (i == null ? void 0 : i.value) ? f(true) : [];
  }
};
var bt = class extends C {
  constructor(e, t) {
    super("xor", e, t);
  }
  eval(e, t) {
    let n = j(this.left.eval(e, t), "boolean"), i = j(this.right.eval(e, t), "boolean");
    return !n || !i ? [] : f(n.value !== i.value);
  }
};
var Rt = class extends C {
  constructor(e, t) {
    super("implies", e, t);
  }
  eval(e, t) {
    let n = j(this.left.eval(e, t), "boolean"), i = j(this.right.eval(e, t), "boolean");
    return (i == null ? void 0 : i.value) === true || (n == null ? void 0 : n.value) === false ? f(true) : !n || !i ? [] : f(false);
  }
};
var J = class {
  constructor(e, t) {
    this.name = e;
    this.args = t;
  }
  eval(e, t) {
    let n = O[this.name];
    if (!n) throw new Error("Unrecognized function: " + this.name);
    return n(e, t, ...this.args);
  }
  toString() {
    return `${this.name}(${this.args.map((e) => e.toString()).join(", ")})`;
  }
};
var xe = class {
  constructor(e, t) {
    this.left = e;
    this.expr = t;
  }
  eval(e, t) {
    let n = this.expr.eval(e, t);
    if (n.length !== 1) return [];
    let i = n[0].value;
    if (typeof i != "number") throw new Error("Invalid indexer expression: should return integer}");
    let o = this.left.eval(e, t);
    return i in o ? [o[i]] : [];
  }
  toString() {
    return `${this.left.toString()}[${this.expr.toString()}]`;
  }
};
var ts = ["year", "years", "month", "months", "week", "weeks", "day", "days", "hour", "hours", "minute", "minutes", "second", "seconds", "millisecond", "milliseconds"];
var ne = class {
  constructor(e, t, n, i) {
    this.result = [];
    this.pos = { index: 0, line: 1, column: 0 };
    this.markStack = [];
    this.str = e, this.keywords = t, this.operators = n, this.dateTimeLiterals = !!(i == null ? void 0 : i.dateTimeLiterals), this.symbolRegex = (i == null ? void 0 : i.symbolRegex) ?? /[$\w%]/;
  }
  tokenize() {
    for (; this.pos.index < this.str.length; ) {
      let e = this.consumeToken();
      e && this.result.push(e);
    }
    return this.result;
  }
  prevToken() {
    return this.result.slice(-1)[0];
  }
  peekToken() {
    this.mark();
    let e = this.consumeToken();
    return this.reset(), e;
  }
  consumeToken() {
    this.consumeWhitespace();
    let e = this.curr();
    if (!e) return;
    this.mark();
    let t = this.peek();
    return e === "/" && t === "*" ? this.consumeMultiLineComment() : e === "/" && t === "/" ? this.consumeSingleLineComment() : e === "'" || e === '"' ? this.consumeString(e) : e === "`" ? this.consumeBacktickSymbol() : e === "@" ? this.consumeDateTime() : /\d/.exec(e) ? this.consumeNumber() : /\w/.exec(e) ? this.consumeSymbol() : (e === "$" || e === "%") && /\w/.exec(t) ? this.consumeSymbol() : this.consumeOperator();
  }
  consumeWhitespace() {
    this.consumeWhile(() => /\s/.exec(this.curr()));
  }
  consumeMultiLineComment() {
    let e = this.pos.index;
    return this.consumeWhile(() => this.curr() !== "*" || this.peek() !== "/"), this.advance(), this.advance(), this.buildToken("Comment", this.str.substring(e, this.pos.index));
  }
  consumeSingleLineComment() {
    return this.buildToken("Comment", this.consumeWhile(() => this.curr() !== `
`));
  }
  consumeString(e) {
    this.advance();
    let t = this.buildToken("String", this.consumeWhile(() => this.prev() === "\\" || this.curr() !== e));
    return this.advance(), t;
  }
  consumeBacktickSymbol() {
    this.advance();
    let e = this.buildToken("Symbol", this.consumeWhile(() => this.curr() !== "`"));
    return this.advance(), e;
  }
  consumeDateTime() {
    this.advance();
    let e = this.pos.index;
    this.consumeWhile(() => /[\d-]/.exec(this.curr()));
    let t = false, n = false;
    if (this.curr() === "T" && (t = true, this.advance(), this.consumeWhile(() => /[\d:]/.exec(this.curr())), this.curr() === "." && /\d/.exec(this.peek()) && (this.advance(), this.consumeWhile(() => /\d/.exec(this.curr()))), this.curr() === "Z" ? (n = true, this.advance()) : (this.curr() === "+" || this.curr() === "-") && (n = true, this.advance(), this.consumeWhile(() => /[\d:]/.exec(this.curr())))), this.pos.index === e) throw new Error("Invalid DateTime literal");
    let i = this.str.substring(e, this.pos.index);
    return i.endsWith("T") ? i = i.substring(0, i.length - 1) : !i.startsWith("T") && t && !n && (i += "Z"), this.buildToken("DateTime", i);
  }
  consumeNumber() {
    let e = this.pos.index, t = "Number";
    return this.consumeWhile(() => /\d/.exec(this.curr())), this.curr() === "." && /\d/.exec(this.peek()) && (this.advance(), this.consumeWhile(() => /\d/.exec(this.curr()))), this.curr() === "-" && this.dateTimeLiterals ? (this.pos.index = e - 1, this.consumeDateTime()) : (this.curr() === " " && rs(this.peekToken()) && (t = "Quantity", this.consumeToken()), this.buildToken(t, this.str.substring(e, this.pos.index)));
  }
  consumeSymbol() {
    var _a2;
    let e = this.consumeWhile(() => this.symbolRegex.exec(this.curr()));
    return ((_a2 = this.prevToken()) == null ? void 0 : _a2.value) !== "." && this.keywords.includes(e) ? this.buildToken(e, e) : this.buildToken("Symbol", e);
  }
  consumeOperator() {
    let e = this.curr(), t = this.peek(), n = e + t;
    return this.operators.includes(n) ? (this.advance(), this.advance(), this.buildToken(n, n)) : (this.advance(), this.buildToken(e, e));
  }
  consumeWhile(e) {
    let t = this.pos.index;
    for (; this.pos.index < this.str.length && e(); ) this.advance();
    return this.str.substring(t, this.pos.index);
  }
  curr() {
    return this.str[this.pos.index];
  }
  prev() {
    return this.str[this.pos.index - 1] ?? "";
  }
  peek() {
    return this.str[this.pos.index + 1] ?? "";
  }
  mark() {
    this.markStack.push({ ...this.pos });
  }
  reset() {
    let e = this.markStack.pop();
    if (!e) throw new Error("No mark to reset to");
    this.pos.index = e.index, this.pos.line = e.line, this.pos.column = e.column;
  }
  advance() {
    this.pos.index++, this.curr() === `
` ? (this.pos.line++, this.pos.column = 0) : this.pos.column++;
  }
  buildToken(e, t) {
    let n = this.markStack.pop();
    if (!n) throw new Error("No mark for token");
    return { id: e, value: t, ...n };
  }
};
function rs(r6) {
  return !!(r6 && (r6.id === "String" || r6.id === "Symbol" && ts.includes(r6.value)));
}
var Be = ["true", "false"];
var qe = ["!=", "!~", "<=", ">=", "{}", "->"];
function ei(r6) {
  return new ne(r6, Be, qe).tokenize();
}
var y = { FunctionCall: 0, Dot: 1, Indexer: 2, UnaryAdd: 3, UnarySubtract: 3, Multiply: 4, Divide: 4, IntegerDivide: 4, Modulo: 4, Add: 5, Subtract: 5, Ampersand: 5, Is: 6, As: 6, Union: 7, GreaterThan: 8, GreaterThanOrEquals: 8, LessThan: 8, LessThanOrEquals: 8, Equals: 9, Equivalent: 9, NotEquals: 9, NotEquivalent: 9, In: 10, Contains: 10, And: 11, Xor: 12, Or: 12, Implies: 13, Arrow: 100, Semicolon: 200 };
var ns = { parse(r6) {
  var _a2;
  let e = r6.consumeAndParse();
  if (!r6.match(")")) throw new Error("Parse error: expected `)` got `" + ((_a2 = r6.peek()) == null ? void 0 : _a2.value) + "`");
  return e;
} };
var is = { parse(r6, e) {
  let t = r6.consumeAndParse();
  if (!r6.match("]")) throw new Error("Parse error: expected `]`");
  return new xe(e, t);
}, precedence: y.Indexer };
var os = { parse(r6, e) {
  if (!(e instanceof q)) throw new Error("Unexpected parentheses");
  let t = [];
  for (; !r6.match(")"); ) t.push(r6.consumeAndParse()), r6.match(",");
  return new J(e.name, t);
}, precedence: y.FunctionCall };
function ss(r6) {
  let e = r6.split(" "), t = parseFloat(e[0]), n = e[1];
  return (n == null ? void 0 : n.startsWith("'")) && n.endsWith("'") ? n = n.substring(1, n.length - 1) : n = "{" + n + "}", { value: t, unit: n };
}
function je() {
  return new Je().registerPrefix("String", { parse: (r6, e) => new U({ type: l.string, value: e.value }) }).registerPrefix("DateTime", { parse: (r6, e) => new U({ type: l.dateTime, value: Oe(e.value) }) }).registerPrefix("Quantity", { parse: (r6, e) => new U({ type: l.Quantity, value: ss(e.value) }) }).registerPrefix("Number", { parse: (r6, e) => new U({ type: e.value.includes(".") ? l.decimal : l.integer, value: parseFloat(e.value) }) }).registerPrefix("true", { parse: () => new U({ type: l.boolean, value: true }) }).registerPrefix("false", { parse: () => new U({ type: l.boolean, value: false }) }).registerPrefix("Symbol", { parse: (r6, e) => new q(e.value) }).registerPrefix("{}", { parse: () => new dt() }).registerPrefix("(", ns).registerInfix("[", is).registerInfix("(", os).prefix("+", y.UnaryAdd, (r6, e) => new ft("+", e, (t) => t)).prefix("-", y.UnarySubtract, (r6, e) => new V("-", e, e, (t, n) => -n)).infixLeft(".", y.Dot, (r6, e, t) => new re(r6, t)).infixLeft("/", y.Divide, (r6, e, t) => new V("/", r6, t, (n, i) => n / i)).infixLeft("*", y.Multiply, (r6, e, t) => new V("*", r6, t, (n, i) => n * i)).infixLeft("+", y.Add, (r6, e, t) => new V("+", r6, t, (n, i) => n + i)).infixLeft("-", y.Subtract, (r6, e, t) => new V("-", r6, t, (n, i) => n - i)).infixLeft("|", y.Union, (r6, e, t) => new Ie(r6, t)).infixLeft("=", y.Equals, (r6, e, t) => new gt(r6, t)).infixLeft("!=", y.NotEquals, (r6, e, t) => new xt(r6, t)).infixLeft("~", y.Equivalent, (r6, e, t) => new vt(r6, t)).infixLeft("!~", y.NotEquivalent, (r6, e, t) => new Tt(r6, t)).infixLeft("<", y.LessThan, (r6, e, t) => new V("<", r6, t, (n, i) => n < i)).infixLeft("<=", y.LessThanOrEquals, (r6, e, t) => new V("<=", r6, t, (n, i) => n <= i)).infixLeft(">", y.GreaterThan, (r6, e, t) => new V(">", r6, t, (n, i) => n > i)).infixLeft(">=", y.GreaterThanOrEquals, (r6, e, t) => new V(">=", r6, t, (n, i) => n >= i)).infixLeft("&", y.Ampersand, (r6, e, t) => new mt(r6, t)).infixLeft("and", y.And, (r6, e, t) => new St(r6, t)).infixLeft("as", y.As, (r6, e, t) => new ye(r6, t)).infixLeft("contains", y.Contains, (r6, e, t) => new ht(r6, t)).infixLeft("div", y.Divide, (r6, e, t) => new V("div", r6, t, (n, i) => n / i | 0)).infixLeft("in", y.In, (r6, e, t) => new yt(r6, t)).infixLeft("is", y.Is, (r6, e, t) => new ge(r6, t)).infixLeft("mod", y.Modulo, (r6, e, t) => new V("mod", r6, t, (n, i) => n % i)).infixLeft("or", y.Or, (r6, e, t) => new Et(r6, t)).infixLeft("xor", y.Xor, (r6, e, t) => new bt(r6, t)).infixLeft("implies", y.Implies, (r6, e, t) => new Rt(r6, t));
}
var as = je();
function Or(r6) {
  return new pt(r6, as.construct(ei(r6)).consumeAndParse());
}
function ke(r6, e) {
  let t = Array.isArray(e) ? e : [e];
  for (let n = 0; n < t.length; n++) {
    let i = t[n];
    typeof i == "object" && "type" in i && "value" in i || (t[n] = g(t[n]));
  }
  return A(r6, t).map((n) => n.value);
}
function A(r6, e, t = {}) {
  return Or(r6).eval({ variables: t }, e).map((i) => {
    var _a2;
    return { type: i.type, value: (_a2 = i.value) == null ? void 0 : _a2.valueOf() };
  });
}
var ti = ((p) => (p.BOOLEAN = "BOOLEAN", p.NUMBER = "NUMBER", p.QUANTITY = "QUANTITY", p.TEXT = "TEXT", p.REFERENCE = "REFERENCE", p.CANONICAL = "CANONICAL", p.DATE = "DATE", p.DATETIME = "DATETIME", p.PERIOD = "PERIOD", p.UUID = "UUID", p))(ti || {});
function kr(r6, e) {
  var _a2, _b;
  let t = (_b = (_a2 = L.types[r6]) == null ? void 0 : _a2.searchParamsDetails) == null ? void 0 : _b[e.code];
  return t || (t = us(r6, e)), t;
}
function cs(r6, e, t) {
  let n = L.types[r6];
  n || (n = {}, L.types[r6] = n), n.searchParamsDetails || (n.searchParamsDetails = {}), n.searchParamsDetails[e] = t;
}
function us(r6, e) {
  let t = e.code, n = ds(t), i = ni(r6, e.expression), o = { elementDefinitions: [], propertyTypes: /* @__PURE__ */ new Set(), array: false };
  for (let a of i) {
    let c = We(a), u = Hn(() => c.join("."));
    c.length === 1 && c[0] instanceof C ? o.propertyTypes.add("boolean") : u().endsWith("extension.value.code") || u().endsWith("extension.value.coding.code") ? (o.array = true, o.propertyTypes.add("code")) : ri(o, We(a), r6, 1), u().endsWith("extension.valueDateTime") && (o.array = false);
  }
  let s = { columnName: n, type: fs(e, o.propertyTypes), elementDefinitions: o.elementDefinitions, array: o.array };
  return cs(r6, t, s), s;
}
function ri(r6, e, t, n) {
  let i = e[n];
  if (i instanceof ye) {
    r6.propertyTypes.add(i.right.toString());
    return;
  }
  if (i instanceof J) {
    ls(r6, i);
    return;
  }
  let o = i.toString(), s = st(t, o);
  if (!s) throw new Error(`Element definition not found for ${t} ${o}`);
  let a = false, c = n + 1;
  if (c < e.length && e[c] instanceof xe && (a = true, c++), s.isArray && !a && (r6.array = true), c >= e.length) {
    r6.elementDefinitions.push(s);
    for (let u of s.type) r6.propertyTypes.add(u.code);
    return;
  }
  for (let u of s.type) {
    let p = u.code;
    ps(p) && (p = s.type[0].code), ri(r6, e, p, c);
  }
}
function ls(r6, e) {
  if (e.name === "as") {
    r6.propertyTypes.add(e.args[0].toString());
    return;
  }
  if (e.name === "ofType") {
    r6.propertyTypes.add(e.args[0].toString());
    return;
  }
  if (e.name === "resolve") {
    r6.propertyTypes.add("string");
    return;
  }
  if (e.name === "where" && e.args[0] instanceof ge) {
    r6.propertyTypes.add(e.args[0].right.toString());
    return;
  }
  throw new Error(`Unhandled FHIRPath function: ${e.name}`);
}
function ps(r6) {
  return r6 === "Element" || r6 === "BackboneElement";
}
function ds(r6) {
  return r6.split("-").reduce((e, t, n) => e + (n ? w(t) : t), "");
}
function fs(r6, e) {
  switch (r6.type) {
    case "date":
      return e.size === 1 && e.has(l.date) ? "DATE" : "DATETIME";
    case "number":
      return "NUMBER";
    case "quantity":
      return "QUANTITY";
    case "reference":
      return e.has(l.canonical) ? "CANONICAL" : "REFERENCE";
    case "token":
      return e.size === 1 && e.has(l.boolean) ? "BOOLEAN" : "TEXT";
    default:
      return "TEXT";
  }
}
function ni(r6, e) {
  let t = [], n = Or(e);
  return Ir(r6, n.child, t), t;
}
function fp(r6, e) {
  let t = ni(r6, e);
  if (t.length !== 0) return t.map((n) => n.toString()).join(" | ");
}
function Ir(r6, e, t) {
  e instanceof Ie ? (Ir(r6, e.left, t), Ir(r6, e.right, t)) : e.toString().startsWith(r6 + ".") && t.push(e);
}
function We(r6) {
  if (r6 instanceof ye || r6 instanceof xe) return [We(r6.left), r6].flat();
  if (r6 instanceof C) return [r6];
  if (r6 instanceof re) return [We(r6.left), We(r6.right)].flat();
  if (r6 instanceof J) {
    if (r6.name === "where" && !(r6.args[0] instanceof ge)) return [];
    if (r6.name === "last") return [];
  }
  return [r6];
}
var Sp = 20;
var Ep = 1e3;
var ai = ((v) => (v.EQUALS = "eq", v.NOT_EQUALS = "ne", v.GREATER_THAN = "gt", v.LESS_THAN = "lt", v.GREATER_THAN_OR_EQUALS = "ge", v.LESS_THAN_OR_EQUALS = "le", v.STARTS_AFTER = "sa", v.ENDS_BEFORE = "eb", v.APPROXIMATELY = "ap", v.CONTAINS = "contains", v.STARTS_WITH = "sw", v.EXACT = "exact", v.TEXT = "text", v.NOT = "not", v.ABOVE = "above", v.BELOW = "below", v.IN = "in", v.NOT_IN = "not-in", v.OF_TYPE = "of-type", v.MISSING = "missing", v.PRESENT = "present", v.IDENTIFIER = "identifier", v.ITERATE = "iterate", v))(ai || {});
var ci = { contains: "contains", exact: "exact", above: "above", below: "below", text: "text", not: "not", in: "in", "not-in": "not-in", "of-type": "of-type", missing: "missing", identifier: "identifier", iterate: "iterate" };
var Vr = { eq: "eq", ne: "ne", lt: "lt", le: "le", gt: "gt", ge: "ge", sa: "sa", eb: "eb", ap: "ap", sw: "sw" };
function ie(r6, e) {
  if (!r6) throw new Error("Invalid search URL");
  let t = "", n;
  if (typeof r6 == "string") if (r6.includes("?")) {
    let [s, a] = r6.split("?");
    t = s, n = new URLSearchParams(a);
  } else t = r6;
  else typeof r6 == "object" && (t = r6.pathname, n = r6.searchParams);
  let i;
  t.includes("/") ? i = t.split("/").filter(Boolean).pop() : i = t;
  let o = [];
  if (n && o.push(...n.entries()), e) for (let [s, a] of Object.entries(e)) if (Array.isArray(a)) for (let c of a) o.push([s, c]);
  else o.push([s, a ?? ""]);
  return ms(i, o);
}
function bp(r6) {
  return ie(r6);
}
function Rp(r6) {
  return ie(r6);
}
function Cp(r6) {
  return ie(r6);
}
function ms(r6, e) {
  let t = { resourceType: r6 };
  for (let [n, i] of e) hs(t, n, i);
  return t;
}
function hs(r6, e, t) {
  var _a2, _b;
  let n, i, o = e.indexOf(":");
  if (o >= 0 ? (n = e.substring(0, o), i = e.substring(o + 1)) : (n = e, i = ""), n !== "_") {
    if (n === "_has" || e.includes(".")) {
      r6.filters = Ae(r6.filters, { code: e, operator: "eq", value: t });
      return;
    }
    switch (n) {
      case "_sort":
        ys(r6, t);
        break;
      case "_cursor":
        r6.cursor = t;
        break;
      case "_count":
        r6.count = parseInt(t, 10);
        break;
      case "_offset":
        r6.offset = parseInt(t, 10);
        break;
      case "_total":
        r6.total = t;
        break;
      case "_summary":
        t === "count" ? (r6.total = "accurate", r6.count = 0) : (t === "true" || t === "data" || t === "text") && (r6.summary = t);
        break;
      case "_include": {
        let s = ii(t);
        i === "iterate" && (s.modifier = "iterate"), r6.include = Ae(r6.include, s);
        break;
      }
      case "_revinclude": {
        let s = ii(t);
        i === "iterate" && (s.modifier = "iterate"), r6.revInclude = Ae(r6.revInclude, s);
        break;
      }
      case "_fields":
      case "_elements":
        r6.fields = t.split(",");
        break;
      case "_type":
        r6.types = t.split(",");
        break;
      case "_format":
        r6.format = t;
        break;
      case "_pretty":
        r6.pretty = t === "true";
        break;
      default: {
        let s = (_b = (_a2 = L.types[r6.resourceType]) == null ? void 0 : _a2.searchParams) == null ? void 0 : _b[n];
        s ? r6.filters = Ae(r6.filters, gs(s, i, t)) : r6.filters = Ae(r6.filters, xs(n, i, t));
      }
    }
  }
}
function ys(r6, e) {
  for (let t of e.split(",")) {
    let n, i = false;
    t.startsWith("-") ? (n = t.substring(1), i = true) : n = t, r6.sortRules || (r6.sortRules = []), r6.sortRules.push({ code: n, descending: i });
  }
}
function gs(r6, e, t) {
  if (e === "missing") return { code: r6.code, operator: "missing", value: t };
  switch (r6.type) {
    case "number":
    case "date":
    case "quantity": {
      let { operator: n, value: i } = vs(t);
      if (!oi(r6, i)) throw new d(E(`Invalid format for ${r6.type} search parameter: ${i}`));
      return { code: r6.code, operator: n, value: i };
    }
    case "reference":
    case "string":
    case "token":
    case "uri":
      if (!oi(r6, t)) throw new d(E(`Invalid format for ${r6.type} search parameter: ${t}`));
      return { code: r6.code, operator: Ts(e), value: t };
    default:
      throw new Error("Unrecognized search parameter type: " + r6.type);
  }
}
function xs(r6, e, t) {
  var _a2;
  let n = "eq";
  if (e) n = e;
  else if (t.length >= 2) {
    let i = t.substring(0, 2);
    i in Vr && (t.length === 2 || ((_a2 = t.at(2)) == null ? void 0 : _a2.match(/\d/))) && (n = i, t = t.substring(i.length));
  }
  return { code: r6, operator: n, value: t };
}
function vs(r6) {
  let e = r6.substring(0, 2), t = Vr[e];
  return t ? { operator: t, value: r6.substring(2) } : { operator: "eq", value: r6 };
}
function Ts(r6) {
  return ci[r6] ?? "eq";
}
function ii(r6) {
  let e = r6.split(":");
  if (e.includes("*")) throw new d(E("'*' is not supported as a value for search inclusion parameters"));
  if (e.length === 1) throw new d(E(`Invalid include value '${r6}': must be of the form ResourceType:search-parameter`));
  if (e.length === 2) return { resourceType: e[0], searchParam: e[1] };
  if (e.length === 3) return { resourceType: e[0], searchParam: e[1], targetType: e[2] };
  throw new d(E(`Invalid include value '${r6}'`));
}
function oi(r6, e) {
  switch (r6.type) {
    case "date":
      return Pe(e);
    default:
      return true;
  }
}
var Ss = /{{([^{}]+)}}/g;
function Pp(r6, e) {
  return r6 = r6.replaceAll(Ss, (t, n) => {
    let i = A(n, [], e);
    return i.length !== 1 ? "" : Xn(i[0]);
  }), ie(r6);
}
function wp(r6) {
  let e = [];
  return r6.fields && e.push("_fields=" + r6.fields.join(",")), r6.filters && r6.filters.forEach((t) => e.push(Es(t))), r6.sortRules && r6.sortRules.length > 0 && e.push(bs(r6.sortRules)), r6.cursor !== void 0 && e.push("_cursor=" + encodeURIComponent(r6.cursor)), r6.offset !== void 0 && r6.offset !== 0 && e.push("_offset=" + r6.offset), r6.count !== void 0 && e.push("_count=" + r6.count), r6.total !== void 0 && e.push("_total=" + r6.total), r6.include && r6.include.forEach((t) => e.push(si("_include", t))), r6.revInclude && r6.revInclude.forEach((t) => e.push(si("_revinclude", t))), e.length === 0 ? "" : (ut(e), "?" + e.join("&"));
}
function Es(r6) {
  let e = r6.operator in ci ? ":" + r6.operator : "", t = r6.operator !== "eq" && r6.operator in Vr ? r6.operator : "";
  return `${r6.code}${e}=${t}${encodeURIComponent(r6.value)}`;
}
function bs(r6) {
  return "_sort=" + r6.map((e) => e.descending ? "-" + e.code : e.code).join(",");
}
function si(r6, e) {
  return r6 + (e.modifier ? ":" + e.modifier : "") + "=" + e.resourceType + ":" + e.searchParam + (e.targetType ? ":" + e.targetType : "");
}
function Ct(r6) {
  let e = [], t = "", n = false;
  for (let i of r6) n ? (t += i, n = false) : i === "\\" ? n = true : i === "," ? (e.push(t), t = "") : t += i;
  return e.push(t), e;
}
function Pt(r6, e) {
  if (e.resourceType !== r6.resourceType) return false;
  if (e.filters) {
    for (let t of e.filters) if (!Rs(r6, e, t)) return false;
  }
  return true;
}
function Rs(r6, e, t) {
  var _a2, _b;
  let n = (_b = (_a2 = L.types[e.resourceType]) == null ? void 0 : _a2.searchParams) == null ? void 0 : _b[t.code];
  if (!n) return false;
  if (t.operator === "missing" || t.operator === "present") return Cs(r6, t, n);
  switch (n.type) {
    case "reference":
      return Ps(r6, t, n);
    case "string":
    case "uri":
      return ui(r6, t, n);
    case "token":
      return ws(r6, t, n);
    case "date":
      return ks(r6, t, n);
    default:
      return false;
  }
}
function Cs(r6, e, t) {
  let i = ke(t.expression, r6).length > 0;
  return (e.operator === "missing" && e.value === "false" || e.operator === "present" && e.value === "true") === i;
}
function Ps(r6, e, t) {
  let n = ke(t.expression, r6), i = wt(e.operator);
  if (e.value === "" && n.length === 0) return e.operator === "eq";
  let o = n.map((s) => typeof s == "string" ? s : s.reference);
  for (let s of Ct(e.value)) {
    let a = o.includes(s);
    if (!a && e.code === "_compartment" && (a = o.some((c) => c == null ? void 0 : c.endsWith("/" + s))), a) return !i;
  }
  return i;
}
function ws(r6, e, t) {
  return kr(r6.resourceType, t).type === "BOOLEAN" ? As(r6, e, t) : ui(r6, e, t, true);
}
function As(r6, e, t) {
  let n = ke(t.expression, r6), i = e.value === "true", o = n.includes(i);
  return wt(e.operator) ? !o : o;
}
function ui(r6, e, t, n) {
  var _a2, _b, _c2, _d;
  let o = (_d = (_c2 = (_b = (_a2 = kr(r6.resourceType, t).elementDefinitions) == null ? void 0 : _a2[0]) == null ? void 0 : _b.type) == null ? void 0 : _c2[0]) == null ? void 0 : _d.code, s = ke(t.expression, r6), a = Ct(e.value), c = wt(e.operator);
  for (let u of s) for (let p of a) {
    let m;
    if (o === l.Identifier ? m = Os(u, e.operator, p) : o === l.CodeableConcept ? m = Is(u, e.operator, p) : m = Dr(u, e.operator, p, n), m) return !c;
  }
  return c;
}
function Dr(r6, e, t, n) {
  if (n && t.includes("|")) {
    let [o, s] = t.split("|");
    return Dr(r6, e, o, false) && (!s || Dr(r6, e, s, false));
  }
  let i = "";
  return r6 && (typeof r6 == "string" ? i = r6 : typeof r6 == "object" && (i = JSON.stringify(r6))), i.toLowerCase().includes(t.toLowerCase());
}
function Os(r6, e, t) {
  var _a2, _b, _c2, _d;
  if (t.includes("|")) {
    let [n, i] = t.split("|").map((o) => o.toLowerCase());
    return !n && !i ? false : n ? ((_a2 = r6.system) == null ? void 0 : _a2.toLowerCase()) === n && (!i || ((_b = r6.value) == null ? void 0 : _b.toLowerCase()) === i) : !r6.system && ((_c2 = r6.value) == null ? void 0 : _c2.toLowerCase()) === i;
  }
  return ((_d = r6.value) == null ? void 0 : _d.toLowerCase()) === t.toLowerCase();
}
function Is(r6, e, t) {
  var _a2, _b, _c2, _d;
  if (t.includes("|")) {
    let [n, i] = t.split("|").map((o) => o.toLowerCase());
    return !n && !i ? false : n ? ((_a2 = r6.coding) == null ? void 0 : _a2.some((o) => {
      var _a3, _b2;
      return ((_a3 = o.system) == null ? void 0 : _a3.toLowerCase()) === n && (!i || ((_b2 = o.code) == null ? void 0 : _b2.toLowerCase()) === i);
    })) ?? false : ((_b = r6.coding) == null ? void 0 : _b.some((o) => {
      var _a3;
      return !o.system && ((_a3 = o.code) == null ? void 0 : _a3.toLowerCase()) === i;
    })) ?? false;
  }
  return ((_c2 = r6.text) == null ? void 0 : _c2.toLowerCase()) === t.toLowerCase() || (((_d = r6.coding) == null ? void 0 : _d.some((n) => {
    var _a3;
    return ((_a3 = n.code) == null ? void 0 : _a3.toLowerCase()) === t.toLowerCase();
  })) ?? false);
}
function ks(r6, e, t) {
  let n = ke(t.expression, r6), i = Ct(e.value), o = wt(e.operator);
  for (let s of n) for (let a of i) if (Vs(s, e.operator, a)) return !o;
  return o;
}
function Vs(r6, e, t) {
  switch (e) {
    case "sa":
    case "gt":
      return r6 > t;
    case "ge":
      return r6 >= t;
    case "eb":
    case "lt":
      return r6 < t;
    case "le":
      return r6 <= t;
    case "eq":
    case "ne":
      return r6 === t;
    default:
      return false;
  }
}
function wt(r6) {
  return r6 === "ne" || r6 === "not";
}
var Ds = { resourceType: "*" };
var Ms = ["DomainConfiguration", "JsonWebKey", "Login"];
var _s = ["PasswordChangeRequest", "UserSecurityRequest", "Project", "ProjectMembership", "User"];
var Ns = ((b) => (b.READ = "read", b.VREAD = "vread", b.UPDATE = "update", b.PATCH = "patch", b.DELETE = "delete", b.HISTORY = "history", b.HISTORY_INSTANCE = "history-instance", b.HISTORY_TYPE = "history-type", b.HISTORY_SYSTEM = "history-system", b.CREATE = "create", b.SEARCH = "search", b.SEARCH_TYPE = "search-type", b.SEARCH_SYSTEM = "search-system", b.SEARCH_COMPARTMENT = "search-compartment", b.CAPABILITIES = "capabilities", b.TRANSACTION = "transaction", b.BATCH = "batch", b.OPERATION = "operation", b))(Ns || {});
var Ls = ["read", "vread", "history", "history-instance"];
function Fp(r6, e) {
  if (r6.resource) {
    for (let t of r6.resource) if (Mr(t.resourceType, e)) return true;
  }
  return false;
}
function Fs(r6, e) {
  if (Ms.includes(e)) return false;
  if (r6.resource) {
    for (let t of r6.resource) if (Mr(t.resourceType, e) && !t.readonly) return true;
  }
  return false;
}
function Up(r6, e) {
  let t = e.resourceType;
  return Fs(r6, t) ? Us(r6, e, false) : false;
}
function Us(r6, e, t) {
  if (r6.resource) {
    for (let n of r6.resource) if (li(e, t ? "read" : "update", n)) return true;
  }
  return false;
}
function Bp(r6, e, t) {
  if (!t) return Ds;
  if (t.resource) {
    for (let n of t.resource) if (li(r6, e, n)) return n;
  }
}
function li(r6, e, t) {
  var _a2, _b;
  let n = r6.resourceType;
  return !(!Mr(t.resourceType, n) || t.readonly && !Ls.includes(e) || t.compartment && !((_b = (_a2 = r6.meta) == null ? void 0 : _a2.compartment) == null ? void 0 : _b.find((i) => {
    var _a3;
    return i.reference === ((_a3 = t.compartment) == null ? void 0 : _a3.reference);
  })) || t.criteria && !Pt(r6, ie(t.criteria)));
}
function Mr(r6, e) {
  return r6 === e || r6 === "*" && !_s.includes(e);
}
function pi(r6) {
  if (typeof window < "u") {
    let e = window.atob(r6), t = Uint8Array.from(e, (n) => n.charCodeAt(0));
    return new window.TextDecoder().decode(t);
  }
  if (typeof Buffer < "u") return Buffer.from(r6, "base64").toString("utf-8");
  throw new Error("Unable to decode base64");
}
function di(r6) {
  if (typeof window < "u") {
    let e = new window.TextEncoder().encode(r6), t = String.fromCharCode.apply(null, e);
    return window.btoa(t);
  }
  if (typeof Buffer < "u") return Buffer.from(r6, "utf8").toString("base64");
  throw new Error("Unable to encode base64");
}
function _r() {
  let r6 = new Uint32Array(28);
  return crypto.getRandomValues(r6), qn(r6.buffer);
}
async function fi(r6) {
  return crypto.subtle.digest("SHA-256", new TextEncoder().encode(r6));
}
function ve() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (r6) => {
    let e = Math.random() * 16 | 0;
    return (r6 === "x" ? e : e & 3 | 8).toString(16);
  });
}
function Bs(r6) {
  var _a2, _b, _c2;
  let e = {};
  r6 = de(r6);
  for (let i of r6.entry || []) {
    ((_a2 = i.resource) == null ? void 0 : _a2.meta) !== void 0 && (delete i.resource.meta.author, delete i.resource.meta.compartment, delete i.resource.meta.lastUpdated, delete i.resource.meta.project, delete i.resource.meta.versionId);
    let o = (_b = i.resource) == null ? void 0 : _b.id;
    o && (e[o] = ve(), i.fullUrl = "urn:uuid:" + e[o], (_c2 = i.resource) == null ? true : delete _c2.id);
  }
  let t = r6.entry, n = JSON.stringify({ resourceType: "Bundle", type: "transaction", entry: t == null ? void 0 : t.map((i) => ({ fullUrl: i.fullUrl, request: { method: "POST", url: i.resource.resourceType }, resource: i.resource })) }, (i, o) => qs(i, o, e), 2);
  return js(JSON.parse(n));
}
function qs(r6, e, t) {
  if (r6 === "reference" && typeof e == "string") {
    let n;
    if (e.includes("/") ? n = e.split("/")[1] : e.startsWith("urn:uuid:") ? n = e.slice(9) : e.startsWith("#") && (n = e.slice(1)), n) {
      let i = t[n];
      if (i) return "urn:uuid:" + i;
    }
  }
  return e;
}
function js(r6) {
  let e = $s(r6), { sorted: t, cycles: n } = Ws(e), i = {};
  for (let s of r6.entry ?? []) s.fullUrl && (i[s.fullUrl] = s);
  let o = t.map((s) => i[s]);
  for (let s of n) for (let a of s) {
    let c = i[a], u = { ...c, request: { ...c.request, method: "PUT" } };
    o.push(u);
  }
  return { ...r6, entry: o };
}
function Ws(r6) {
  let e = [], t = {}, n = [];
  for (let o of Object.keys(r6)) t[o] = 0;
  function i(o, s) {
    if (t[o] === 2) return true;
    if (t[o] === 1) {
      let c = s.lastIndexOf(o);
      return c !== -1 && n.push(s.slice(c)), true;
    }
    t[o] = 1, s.push(o);
    let a = false;
    for (let c of r6[o]) i(c, s) || (a = true);
    return t[o] = 2, s.pop(), e.unshift(o), !a;
  }
  for (let o in r6) t[o] === 0 && i(o, []);
  return { sorted: e, cycles: n };
}
function mi(r6, e) {
  for (let t in r6) if (r6[t] && typeof r6[t] == "object") {
    let n = r6[t];
    if (ue(n)) {
      let i = n.reference;
      i.startsWith("urn:uuid:") && e(i);
    } else mi(n, e);
  }
}
function $s(r6) {
  let e = {};
  for (let t of r6.entry || []) t.fullUrl && (e[t.fullUrl] = []);
  for (let t of r6.entry || []) {
    let n = t.fullUrl;
    t.resource && mi(t.resource, (i) => {
      e[i] && e[i].push(n);
    });
  }
  return e;
}
function Kp(r6) {
  r6 = de(r6);
  let e = { resourceType: "Bundle", type: "transaction", entry: [{ resource: r6 }] };
  if (r6.contained) {
    for (let t of r6.contained) e.entry.push({ resource: t });
    r6.contained = void 0;
  }
  for (let t of e.entry) t.resource && !t.resource.id && (t.resource.id = ve());
  return Bs(e);
}
var At = class {
  constructor(e = 10) {
    this.max = e, this.cache = /* @__PURE__ */ new Map();
  }
  clear() {
    this.cache.clear();
  }
  get(e) {
    let t = this.cache.get(e);
    return t && (this.cache.delete(e), this.cache.set(e, t)), t;
  }
  set(e, t) {
    this.cache.has(e) ? this.cache.delete(e) : this.cache.size >= this.max && this.cache.delete(this.first()), this.cache.set(e, t);
  }
  delete(e) {
    this.cache.delete(e);
  }
  keys() {
    return this.cache.keys();
  }
  first() {
    return this.cache.keys().next().value;
  }
};
var D = { CSS: "text/css", DICOM: "application/dicom", FAVICON: "image/vnd.microsoft.icon", FHIR_JSON: "application/fhir+json", FORM_URL_ENCODED: "application/x-www-form-urlencoded", HL7_V2: "x-application/hl7-v2+er7", HTML: "text/html", JAVASCRIPT: "text/javascript", JSON: "application/json", JSON_PATCH: "application/json-patch+json", PNG: "image/png", SCIM_JSON: "application/scim+json", SVG: "image/svg+xml", TEXT: "text/plain", TYPESCRIPT: "text/typescript", PING: "x-application/ping" };
var Nr = class {
  constructor() {
    this.listeners = {};
  }
  addEventListener(e, t) {
    this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t);
  }
  removeEventListener(e, t) {
    let n = this.listeners[e];
    if (n) {
      for (let i = 0; i < n.length; i++) if (n[i] === t) {
        n.splice(i, 1);
        return;
      }
    }
  }
  dispatchEvent(e) {
    let t = this.listeners[e.type];
    if (t) for (let n of t) n.call(this, e);
    return !e.defaultPrevented;
  }
  removeAllListeners() {
    this.listeners = {};
  }
};
var H = class {
  constructor() {
    this.emitter = new Nr();
  }
  dispatchEvent(e) {
    this.emitter.dispatchEvent(e);
  }
  addEventListener(e, t) {
    this.emitter.addEventListener(e, t);
  }
  removeEventListener(e, t) {
    this.emitter.removeEventListener(e, t);
  }
  removeAllListeners() {
    this.emitter.removeAllListeners();
  }
};
var Lr = { "Patient-open": "Patient-open", "Patient-close": "Patient-close", "ImagingStudy-open": "ImagingStudy-open", "ImagingStudy-close": "ImagingStudy-close", "Encounter-open": "Encounter-open", "Encounter-close": "Encounter-close", "DiagnosticReport-open": "DiagnosticReport-open", "DiagnosticReport-close": "DiagnosticReport-close", "DiagnosticReport-select": "DiagnosticReport-select", "DiagnosticReport-update": "DiagnosticReport-update", syncerror: "syncerror" };
var Gs = ["Patient", "Encounter", "ImagingStudy", "DiagnosticReport", "OperationOutcome", "Bundle"];
var Fr = ["DiagnosticReport-update"];
function yi(r6) {
  return Fr.includes(r6);
}
function gi(r6) {
  if (Fr.includes(r6)) throw new d(h(`'context.version' is required for '${r6}'.`));
}
var Hs = { "Patient-open": { patient: { resourceType: "Patient" }, encounter: { resourceType: "Encounter", optional: true } }, "Patient-close": { patient: { resourceType: "Patient" }, encounter: { resourceType: "Encounter", optional: true } }, "ImagingStudy-open": { study: { resourceType: "ImagingStudy" }, encounter: { resourceType: "Encounter", optional: true }, patient: { resourceType: "Patient", optional: true } }, "ImagingStudy-close": { study: { resourceType: "ImagingStudy" }, encounter: { resourceType: "Encounter", optional: true }, patient: { resourceType: "Patient", optional: true } }, "Encounter-open": { encounter: { resourceType: "Encounter" }, patient: { resourceType: "Patient" } }, "Encounter-close": { encounter: { resourceType: "Encounter" }, patient: { resourceType: "Patient" } }, "DiagnosticReport-open": { report: { resourceType: "DiagnosticReport" }, encounter: { resourceType: "Encounter", optional: true }, study: { resourceType: "ImagingStudy", optional: true, manyAllowed: true }, patient: { resourceType: "Patient" } }, "DiagnosticReport-close": { report: { resourceType: "DiagnosticReport" }, encounter: { resourceType: "Encounter", optional: true }, study: { resourceType: "ImagingStudy", optional: true, manyAllowed: true }, patient: { resourceType: "Patient" } }, "DiagnosticReport-select": { report: { resourceType: "DiagnosticReport" }, select: { resourceType: "*", isArray: true } }, "DiagnosticReport-update": { report: { resourceType: "DiagnosticReport" }, patient: { resourceType: "Patient", optional: true }, study: { resourceType: "ImagingStudy", optional: true }, updates: { resourceType: "Bundle" } }, syncerror: { operationoutcome: { resourceType: "OperationOutcome" } } };
function Qs(r6) {
  return Gs.includes(r6);
}
function xi(r6) {
  return !!r6.endpoint;
}
function Ur(r6) {
  if (!It(r6)) throw new d(h("subscriptionRequest must be an object conforming to SubscriptionRequest type."));
  let { channelType: e, mode: t, topic: n, events: i } = r6, o = { "hub.channel.type": e, "hub.mode": t, "hub.topic": n, "hub.events": i.join(",") };
  return xi(r6) && (o.endpoint = r6.endpoint), new URLSearchParams(o).toString();
}
function It(r6) {
  if (typeof r6 != "object") return false;
  let { channelType: e, mode: t, topic: n, events: i } = r6;
  if (!(e && t && n && i) || typeof n != "string" || typeof i != "object" || !Array.isArray(i) || i.length < 1 || e !== "websocket" || t !== "subscribe" && t !== "unsubscribe") return false;
  for (let o of i) if (!Lr[o]) return false;
  return !(xi(r6) && !(typeof r6.endpoint == "string" && r6.endpoint.startsWith("ws")));
}
function hi(r6, e, t, n) {
  if (typeof e != "object") throw new d(h(`context[${t}] is invalid. Context must contain a single valid FHIR resource! Resource is not an object.`));
  if (!(e.id && typeof e.id == "string")) throw new d(h(`context[${t}] is invalid. Resource must contain a valid string ID.`));
  if (!e.resourceType) throw new d(h(`context[${t}] is invalid. Resource must contain a resource type. No resource type found.`));
  let i = n.resourceType;
  if (i !== "*") {
    if (!Qs(e.resourceType)) throw new d(h(`context[${t}] is invalid. Resource must contain a valid FHIRcast resource type. Resource type is not a known resource type.`));
    if (i && e.resourceType !== i) throw new d(h(`context[${t}] is invalid. context[${t}] for the '${r6}' event should contain resource of type ${i}.`));
  }
}
function Ks(r6, e, t, n, i) {
  if (i.set(e.key, (i.get(e.key) ?? 0) + 1), !n.isArray) hi(r6, e.resource, t, n);
  else {
    let { resources: o } = e;
    if (!o) throw new d(h(`context[${t}] is invalid. context[${t}] for the '${r6}' with key '${String(e.key)}' should contain an array of resources on the key 'resources'.`));
    for (let s of o) hi(r6, s, t, n);
  }
}
function zs(r6, e) {
  let t = /* @__PURE__ */ new Map(), n = Hs[r6];
  for (let i = 0; i < e.length; i++) {
    let o = e[i].key;
    if (!n[o]) throw new d(h(`Key '${o}' not found for event '${r6}'. Make sure to add only valid keys.`));
    Ks(r6, e[i], i, n[o], t);
  }
  for (let [i, o] of Object.entries(n)) {
    if (!(o.optional || t.has(i))) throw new d(h(`Missing required key '${i}' on context for '${r6}' event.`));
    if (!o.manyAllowed && (t.get(i) || 0) > 1) throw new d(h(`${t.get(i)} context entries with key '${i}' found for the '${r6}' event when schema only allows for 1.`));
  }
}
function Br(r6, e, t, n) {
  if (!(r6 && typeof r6 == "string")) throw new d(h("Must provide a topic."));
  if (!Lr[e]) throw new d(h(`Must provide a valid FHIRcast event name. Supported events: ${Object.keys(Lr).join(", ")}`));
  if (typeof t != "object") throw new d(h("context must be a context object or array of context objects."));
  if (Fr.includes(e) && !n) throw new d(h(`The '${e}' event must contain a 'context.versionId'.`));
  let i = Array.isArray(t) ? t : [t];
  return zs(e, i), { timestamp: (/* @__PURE__ */ new Date()).toISOString(), id: ve(), event: { "hub.topic": r6, "hub.event": e, context: i, ...n ? { "context.versionId": n } : {} } };
}
var Ot = class extends H {
  constructor(e) {
    if (super(), this.subRequest = e, !e.endpoint) throw new d(h("Subscription request should contain an endpoint."));
    if (!It(e)) throw new d(h("Subscription request failed validation."));
    let t = new WebSocket(e.endpoint);
    t.addEventListener("open", () => {
      this.dispatchEvent({ type: "connect" }), t.addEventListener("message", (n) => {
        let i = JSON.parse(n.data);
        if (i["hub.topic"]) return;
        let o = i;
        o.event["hub.event"] !== "heartbeat" && (this.dispatchEvent({ type: "message", payload: o }), t.send(JSON.stringify({ id: i == null ? void 0 : i.id, timestamp: (/* @__PURE__ */ new Date()).toISOString() })));
      }), t.addEventListener("close", () => {
        this.dispatchEvent({ type: "disconnect" });
      });
    }), this.websocket = t;
  }
  disconnect() {
    this.websocket.close();
  }
};
function Js(r6) {
  let e = r6.replace(/-/g, "+").replace(/_/g, "/"), t = pi(e), n = Array.from(t).reduce((o, s) => {
    let a = ("00" + s.charCodeAt(0).toString(16)).slice(-2);
    return `${o}%${a}`;
  }, ""), i = decodeURIComponent(n);
  return JSON.parse(i);
}
function vi(r6) {
  return r6.split(".").length === 3;
}
function kt(r6) {
  let [e, t, n] = r6.split(".");
  return Js(t);
}
function Ti(r6) {
  try {
    return typeof kt(r6).login_id == "string";
  } catch {
    return false;
  }
}
function Si(r6) {
  try {
    let t = kt(r6).exp;
    return typeof t == "number" ? t * 1e3 : void 0;
  } catch {
    return;
  }
}
var Vt = class {
  constructor(e) {
    this.medplum = e;
  }
  async get(e) {
    return this.medplum.get(`keyvalue/v1/${e}`);
  }
  async set(e, t) {
    await this.medplum.put(`keyvalue/v1/${e}`, t, D.TEXT);
  }
  async delete(e) {
    await this.medplum.delete(`keyvalue/v1/${e}`);
  }
};
var Ei;
Ei = Symbol.toStringTag;
var M = class {
  constructor(e) {
    this[Ei] = "ReadablePromise";
    this.status = "pending";
    this.suspender = e.then((t) => (this.status = "success", this.response = t, t), (t) => {
      throw this.status = "error", this.error = t, t;
    });
  }
  isPending() {
    return this.status === "pending";
  }
  isOk() {
    return this.status === "success";
  }
  read() {
    switch (this.status) {
      case "pending":
        throw this.suspender;
      case "error":
        throw this.error;
      default:
        return this.response;
    }
  }
  then(e, t) {
    return this.suspender.then(e, t);
  }
  catch(e) {
    return this.suspender.catch(e);
  }
  finally(e) {
    return this.suspender.finally(e);
  }
};
var $e = class {
  constructor(e) {
    this.storage = e ?? (typeof localStorage < "u" ? localStorage : new qr());
  }
  clear() {
    this.storage.clear();
  }
  getString(e) {
    return this.storage.getItem(e) ?? void 0;
  }
  setString(e, t) {
    t ? this.storage.setItem(e, t) : this.storage.removeItem(e);
  }
  getObject(e) {
    let t = this.getString(e);
    return t ? JSON.parse(t) : void 0;
  }
  setObject(e, t) {
    this.setString(e, t ? Fn(t) : void 0);
  }
};
var qr = class {
  constructor() {
    this.data = /* @__PURE__ */ new Map();
  }
  get length() {
    return this.data.size;
  }
  clear() {
    this.data.clear();
  }
  getItem(e) {
    return this.data.get(e) ?? null;
  }
  setItem(e, t) {
    t ? this.data.set(e, t) : this.data.delete(e);
  }
  removeItem(e) {
    this.data.delete(e);
  }
  key(e) {
    return Array.from(this.data.keys())[e];
  }
};
var bi = class extends $e {
  constructor() {
    super();
    this.initResolve = () => {
    };
    this.initialized = false, this.initPromise = new Promise((t) => {
      this.initResolve = t;
    });
  }
  setInitialized() {
    this.initialized || (this.initResolve(), this.initialized = true);
  }
  getInitPromise() {
    return this.initPromise;
  }
  get isInitialized() {
    return this.initialized;
  }
};
var Ve = { Event: typeof globalThis.Event < "u" ? globalThis.Event : void 0, ErrorEvent: void 0, CloseEvent: void 0 };
var Ri = false;
function Ys() {
  if (typeof globalThis.Event > "u") throw new Error("Unable to lazy init events for ReconnectingWebSocket. globalThis.Event is not defined yet");
  Ve.Event = globalThis.Event, Ve.ErrorEvent = class extends Event {
    constructor(e, t) {
      super("error", t), this.message = e.message, this.error = e;
    }
  }, Ve.CloseEvent = class extends Event {
    constructor(t = 1e3, n = "", i) {
      super("close", i);
      this.wasClean = true;
      this.code = t, this.reason = n;
    }
  };
}
function Zs(r6, e) {
  if (!r6) throw new Error(e);
}
function Dt(r6) {
  return new r6.constructor(r6.type, r6);
}
var Te = { maxReconnectionDelay: 1e4, minReconnectionDelay: 1e3 + Math.random() * 4e3, minUptime: 5e3, reconnectionDelayGrowFactor: 1.3, connectionTimeout: 4e3, maxRetries: 1 / 0, maxEnqueuedMessages: 1 / 0, startClosed: false, debug: false };
var Ci = false;
var Mt = class r extends H {
  constructor(t, n, i = {}) {
    Ri || (Ys(), Ri = true);
    super();
    this._retryCount = -1;
    this._shouldReconnect = true;
    this._connectLock = false;
    this._closeCalled = false;
    this._messageQueue = [];
    this._debugLogger = console.log.bind(console);
    this.onclose = null;
    this.onerror = null;
    this.onmessage = null;
    this.onopen = null;
    this._handleOpen = (t2) => {
      this._debug("open event");
      let { minUptime: n2 = Te.minUptime } = this._options;
      clearTimeout(this._connectTimeout), this._uptimeTimeout = setTimeout(() => this._acceptOpen(), n2), Zs(this._ws, "WebSocket is not defined"), this._ws.binaryType = this._binaryType, this._messageQueue.forEach((i2) => {
        var _a2;
        return (_a2 = this._ws) == null ? void 0 : _a2.send(i2);
      }), this._messageQueue = [], this.onopen && this.onopen(t2), this.dispatchEvent(Dt(t2));
    };
    this._handleMessage = (t2) => {
      this._debug("message event"), this.onmessage && this.onmessage(t2), this.dispatchEvent(Dt(t2));
    };
    this._handleError = (t2) => {
      this._debug("error event", t2.message), this._disconnect(void 0, t2.message === "TIMEOUT" ? "timeout" : void 0), this.onerror && this.onerror(t2), this._debug("exec error listeners"), this.dispatchEvent(Dt(t2)), this._connect();
    };
    this._handleClose = (t2) => {
      this._debug("close event"), this._clearTimeouts(), this._shouldReconnect && this._connect(), this.onclose && this.onclose(t2), this.dispatchEvent(Dt(t2));
    };
    this._url = t, this._protocols = n, this._options = i, this._options.startClosed && (this._shouldReconnect = false), this._options.binaryType ? this._binaryType = this._options.binaryType : this._binaryType = "blob", this._options.debugLogger && (this._debugLogger = this._options.debugLogger), this._connect();
  }
  static get CONNECTING() {
    return 0;
  }
  static get OPEN() {
    return 1;
  }
  static get CLOSING() {
    return 2;
  }
  static get CLOSED() {
    return 3;
  }
  get CONNECTING() {
    return r.CONNECTING;
  }
  get OPEN() {
    return r.OPEN;
  }
  get CLOSING() {
    return r.CLOSING;
  }
  get CLOSED() {
    return r.CLOSED;
  }
  get binaryType() {
    return this._ws ? this._ws.binaryType : this._binaryType;
  }
  set binaryType(t) {
    this._binaryType = t, this._ws && (this._ws.binaryType = t);
  }
  get retryCount() {
    return Math.max(this._retryCount, 0);
  }
  get bufferedAmount() {
    var _a2;
    return this._messageQueue.reduce((n, i) => (typeof i == "string" ? n += i.length : i instanceof Blob ? n += i.size : n += i.byteLength, n), 0) + (((_a2 = this._ws) == null ? void 0 : _a2.bufferedAmount) ?? 0);
  }
  get extensions() {
    var _a2;
    return ((_a2 = this._ws) == null ? void 0 : _a2.extensions) ?? "";
  }
  get protocol() {
    var _a2;
    return ((_a2 = this._ws) == null ? void 0 : _a2.protocol) ?? "";
  }
  get readyState() {
    return this._ws ? this._ws.readyState : this._options.startClosed ? r.CLOSED : r.CONNECTING;
  }
  get url() {
    return this._ws ? this._ws.url : "";
  }
  get shouldReconnect() {
    return this._shouldReconnect;
  }
  close(t = 1e3, n) {
    if (this._closeCalled = true, this._shouldReconnect = false, this._clearTimeouts(), !this._ws) {
      this._debug("close enqueued: no ws instance");
      return;
    }
    if (this._ws.readyState === this.CLOSED) {
      this._debug("close: already closed");
      return;
    }
    this._ws.close(t, n);
  }
  reconnect(t, n) {
    this._shouldReconnect = true, this._closeCalled = false, this._retryCount = -1, !this._ws || this._ws.readyState === this.CLOSED ? this._connect() : (this._disconnect(t, n), this._connect());
  }
  send(t) {
    if (this._ws && this._ws.readyState === this.OPEN) this._debug("send", t), this._ws.send(t);
    else {
      let { maxEnqueuedMessages: n = Te.maxEnqueuedMessages } = this._options;
      this._messageQueue.length < n && (this._debug("enqueue", t), this._messageQueue.push(t));
    }
  }
  _debug(...t) {
    this._options.debug && this._debugLogger("RWS>", ...t);
  }
  _getNextDelay() {
    let { reconnectionDelayGrowFactor: t = Te.reconnectionDelayGrowFactor, minReconnectionDelay: n = Te.minReconnectionDelay, maxReconnectionDelay: i = Te.maxReconnectionDelay } = this._options, o = 0;
    return this._retryCount > 0 && (o = n * Math.pow(t, this._retryCount - 1), o > i && (o = i)), this._debug("next delay", o), o;
  }
  _wait() {
    return new Promise((t) => {
      setTimeout(t, this._getNextDelay());
    });
  }
  _connect() {
    if (this._connectLock || !this._shouldReconnect) return;
    this._connectLock = true;
    let { maxRetries: t = Te.maxRetries, connectionTimeout: n = Te.connectionTimeout } = this._options;
    if (this._retryCount >= t) {
      this._debug("max retries reached", this._retryCount, ">=", t);
      return;
    }
    this._retryCount++, this._debug("connect", this._retryCount), this._removeListeners(), this._wait().then(() => {
      if (this._closeCalled) {
        this._connectLock = false;
        return;
      }
      !this._options.WebSocket && typeof WebSocket > "u" && !Ci && (console.error("‼️ No WebSocket implementation available. You should define options.WebSocket."), Ci = true);
      let i = this._options.WebSocket || WebSocket;
      this._debug("connect", { url: this._url, protocols: this._protocols }), this._ws = this._protocols ? new i(this._url, this._protocols) : new i(this._url), this._ws.binaryType = this._binaryType, this._connectLock = false, this._addListeners(), this._connectTimeout = setTimeout(() => this._handleTimeout(), n);
    }).catch((i) => {
      this._connectLock = false, this._handleError(new Ve.ErrorEvent(Error(i.message), this));
    });
  }
  _handleTimeout() {
    this._debug("timeout event"), this._handleError(new Ve.ErrorEvent(Error("TIMEOUT"), this));
  }
  _disconnect(t = 1e3, n) {
    if (this._clearTimeouts(), !!this._ws) {
      this._removeListeners();
      try {
        this._ws.close(t, n), this._handleClose(new Ve.CloseEvent(t, n, this));
      } catch {
      }
    }
  }
  _acceptOpen() {
    this._debug("accept open"), this._retryCount = 0;
  }
  _removeListeners() {
    this._ws && (this._debug("removeListeners"), this._ws.removeEventListener("open", this._handleOpen), this._ws.removeEventListener("close", this._handleClose), this._ws.removeEventListener("message", this._handleMessage), this._ws.removeEventListener("error", this._handleError));
  }
  _addListeners() {
    this._ws && (this._debug("addListeners"), this._ws.addEventListener("open", this._handleOpen), this._ws.addEventListener("close", this._handleClose), this._ws.addEventListener("message", this._handleMessage), this._ws.addEventListener("error", this._handleError));
  }
  _clearTimeouts() {
    clearTimeout(this._connectTimeout), clearTimeout(this._uptimeTimeout);
  }
};
var Xs = 5e3;
var Ge = class extends H {
  constructor(...e) {
    super(), this.criteria = new Set(e);
  }
  getCriteria() {
    return this.criteria;
  }
  _addCriteria(e) {
    this.criteria.add(e);
  }
  _removeCriteria(e) {
    this.criteria.delete(e);
  }
};
var jr = class {
  constructor(e, t) {
    this.connecting = false;
    this.criteria = e, this.emitter = new Ge(e), this.refCount = 1, this.subscriptionProps = t ? { ...t } : void 0;
  }
  clearAttachedSubscription() {
    this.subscriptionId = void 0, this.token = void 0;
  }
};
var _t = class {
  constructor(e, t, n) {
    this.pingTimer = void 0;
    this.waitingForPong = false;
    if (!(e instanceof Nt)) throw new d(h("First arg of constructor should be a `MedplumClient`"));
    let i;
    try {
      i = new URL(t).toString();
    } catch {
      throw new d(h("Not a valid URL"));
    }
    let o = (n == null ? void 0 : n.ReconnectingWebSocket) ? new n.ReconnectingWebSocket(i, void 0, { debug: n == null ? void 0 : n.debug, debugLogger: n == null ? void 0 : n.debugLogger }) : new Mt(i, void 0, { debug: n == null ? void 0 : n.debug, debugLogger: n == null ? void 0 : n.debugLogger });
    this.medplum = e, this.ws = o, this.masterSubEmitter = new Ge(), this.criteriaEntries = /* @__PURE__ */ new Map(), this.criteriaEntriesBySubscriptionId = /* @__PURE__ */ new Map(), this.wsClosed = false, this.pingIntervalMs = (n == null ? void 0 : n.pingIntervalMs) ?? Xs, this.currentProfile = e.getProfile(), this.setupListeners();
  }
  setupListeners() {
    let e = this.ws;
    e.addEventListener("message", (t) => {
      var _a2, _b, _c2, _d, _e, _f;
      try {
        let n = JSON.parse(t.data);
        if (n.type === "pong") {
          this.waitingForPong = false;
          return;
        }
        let i = n, o = (_b = (_a2 = i == null ? void 0 : i.entry) == null ? void 0 : _a2[0]) == null ? void 0 : _b.resource;
        if (o.type === "heartbeat") {
          (_c2 = this.masterSubEmitter) == null ? void 0 : _c2.dispatchEvent({ type: "heartbeat", payload: i });
          return;
        }
        if (o.type === "handshake") {
          let a = pe(o.subscription), c = { type: "connect", payload: { subscriptionId: a } };
          (_d = this.masterSubEmitter) == null ? void 0 : _d.dispatchEvent(c);
          let u = this.criteriaEntriesBySubscriptionId.get(a);
          if (!u) {
            console.warn("Received handshake for criteria the SubscriptionManager is not listening for yet");
            return;
          }
          u.connecting = false, u.emitter.dispatchEvent({ ...c });
          return;
        }
        (_e = this.masterSubEmitter) == null ? void 0 : _e.dispatchEvent({ type: "message", payload: i });
        let s = this.criteriaEntriesBySubscriptionId.get(pe(o.subscription));
        if (!s) {
          console.warn("Received notification for criteria the SubscriptionManager is not listening for");
          return;
        }
        s.emitter.dispatchEvent({ type: "message", payload: i });
      } catch (n) {
        console.error(n);
        let i = { type: "error", payload: n };
        (_f = this.masterSubEmitter) == null ? void 0 : _f.dispatchEvent(i);
        for (let o of this.getAllCriteriaEmitters()) o.dispatchEvent({ ...i });
      }
    }), e.addEventListener("error", () => {
      var _a2;
      let t = { type: "error", payload: new d(an(new Error("WebSocket error"))) };
      (_a2 = this.masterSubEmitter) == null ? void 0 : _a2.dispatchEvent(t);
      for (let n of this.getAllCriteriaEmitters()) n.dispatchEvent({ ...t });
    }), e.addEventListener("close", () => {
      var _a2, _b;
      let t = { type: "close" };
      (_a2 = this.masterSubEmitter) == null ? void 0 : _a2.dispatchEvent(t);
      for (let n of this.getAllCriteriaEmitters()) n.dispatchEvent({ ...t });
      this.pingTimer && (clearInterval(this.pingTimer), this.pingTimer = void 0, this.waitingForPong = false), this.wsClosed && (this.criteriaEntries.clear(), this.criteriaEntriesBySubscriptionId.clear(), (_b = this.masterSubEmitter) == null ? void 0 : _b.removeAllListeners());
    }), e.addEventListener("open", () => {
      var _a2;
      let t = { type: "open" };
      (_a2 = this.masterSubEmitter) == null ? void 0 : _a2.dispatchEvent(t);
      for (let n of this.getAllCriteriaEmitters()) n.dispatchEvent({ ...t });
      this.refreshAllSubscriptions().catch(console.error), this.pingTimer || (this.pingTimer = setInterval(() => {
        if (this.waitingForPong) {
          this.waitingForPong = false, e.reconnect();
          return;
        }
        e.send(JSON.stringify({ type: "ping" })), this.waitingForPong = true;
      }, this.pingIntervalMs));
    }), this.medplum.addEventListener("change", () => {
      var _a2;
      let t = this.medplum.getProfile();
      this.currentProfile && t === void 0 ? this.ws.close() : t && ((_a2 = this.currentProfile) == null ? void 0 : _a2.id) !== t.id && this.ws.reconnect(), this.currentProfile = t;
    });
  }
  emitError(e, t) {
    var _a2;
    let n = { type: "error", payload: t };
    (_a2 = this.masterSubEmitter) == null ? void 0 : _a2.dispatchEvent(n), e.emitter.dispatchEvent({ ...n });
  }
  maybeEmitDisconnect(e) {
    var _a2;
    let { subscriptionId: t } = e;
    if (t) {
      let n = { type: "disconnect", payload: { subscriptionId: t } };
      (_a2 = this.masterSubEmitter) == null ? void 0 : _a2.dispatchEvent(n), e.emitter.dispatchEvent({ ...n });
    } else console.warn("Called disconnect for `CriteriaEntry` before `subscriptionId` was present.");
  }
  async getTokenForCriteria(e) {
    var _a2, _b;
    let t = e == null ? void 0 : e.subscriptionId;
    t || (t = (await this.medplum.createResource({ ...e.subscriptionProps, resourceType: "Subscription", status: "active", reason: `WebSocket subscription for ${le(this.medplum.getProfile())}`, channel: { type: "websocket" }, criteria: e.criteria })).id);
    let { parameter: n } = await this.medplum.get(`fhir/R4/Subscription/${t}/$get-ws-binding-token`), i = (_a2 = n == null ? void 0 : n.find((s) => s.name === "token")) == null ? void 0 : _a2.valueString, o = (_b = n == null ? void 0 : n.find((s) => s.name === "websocket-url")) == null ? void 0 : _b.valueUrl;
    if (!i) throw new d(h("Failed to get token"));
    if (!o) throw new d(h("Failed to get URL from $get-ws-binding-token"));
    return [t, i];
  }
  maybeGetCriteriaEntry(e, t) {
    let n = this.criteriaEntries.get(e);
    if (n) {
      if (!t) return n.bareCriteria;
      for (let i of n.criteriaWithProps) if (ee(t, i.subscriptionProps)) return i;
    }
  }
  getAllCriteriaEmitters() {
    let e = [];
    for (let t of this.criteriaEntries.values()) {
      t.bareCriteria && e.push(t.bareCriteria.emitter);
      for (let n of t.criteriaWithProps) e.push(n.emitter);
    }
    return e;
  }
  addCriteriaEntry(e) {
    let { criteria: t, subscriptionProps: n } = e, i;
    this.criteriaEntries.has(t) ? i = this.criteriaEntries.get(t) : (i = { criteriaWithProps: [] }, this.criteriaEntries.set(t, i)), n ? i.criteriaWithProps.push(e) : i.bareCriteria = e;
  }
  removeCriteriaEntry(e) {
    var _a2;
    let { criteria: t, subscriptionProps: n, subscriptionId: i, token: o } = e;
    if (!this.criteriaEntries.has(t)) return;
    let s = this.criteriaEntries.get(t);
    n ? s.criteriaWithProps = s.criteriaWithProps.filter((a) => {
      let c = a.subscriptionProps;
      return !ee(n, c);
    }) : s.bareCriteria = void 0, !s.bareCriteria && s.criteriaWithProps.length === 0 && (this.criteriaEntries.delete(t), (_a2 = this.masterSubEmitter) == null ? void 0 : _a2._removeCriteria(t)), i && this.criteriaEntriesBySubscriptionId.delete(i), o && this.ws.readyState === WebSocket.OPEN && this.ws.send(JSON.stringify({ type: "unbind-from-token", payload: { token: o } }));
  }
  async subscribeToCriteria(e) {
    if (!(this.ws.readyState !== WebSocket.OPEN || e.connecting)) {
      e.connecting = true;
      try {
        let [t, n] = await this.getTokenForCriteria(e);
        e.subscriptionId = t, e.token = n, this.criteriaEntriesBySubscriptionId.set(t, e), this.ws.send(JSON.stringify({ type: "bind-with-token", payload: { token: n } }));
      } catch (t) {
        console.error(Ne(t)), this.emitError(e, t), this.removeCriteriaEntry(e);
      }
    }
  }
  async refreshAllSubscriptions() {
    this.criteriaEntriesBySubscriptionId.clear();
    for (let e of this.criteriaEntries.values()) for (let t of [...e.bareCriteria ? [e.bareCriteria] : [], ...e.criteriaWithProps]) t.clearAttachedSubscription(), await this.subscribeToCriteria(t);
  }
  addCriteria(e, t) {
    this.masterSubEmitter && this.masterSubEmitter._addCriteria(e);
    let n = this.maybeGetCriteriaEntry(e, t);
    if (n) return n.refCount += 1, n.emitter;
    let i = new jr(e, t);
    return this.addCriteriaEntry(i), this.subscribeToCriteria(i).catch(console.error), i.emitter;
  }
  removeCriteria(e, t) {
    let n = this.maybeGetCriteriaEntry(e, t);
    if (!n) {
      console.warn("Criteria not known to `SubscriptionManager`. Possibly called remove too many times.");
      return;
    }
    n.refCount -= 1, !(n.refCount > 0) && (this.maybeEmitDisconnect(n), this.removeCriteriaEntry(n));
  }
  getWebSocket() {
    return this.ws;
  }
  closeWebSocket() {
    this.wsClosed || (this.wsClosed = true, this.ws.close());
  }
  reconnectWebSocket() {
    this.ws.reconnect(), this.wsClosed = false;
  }
  getCriteriaCount() {
    return this.getAllCriteriaEmitters().length;
  }
  getMasterEmitter() {
    return this.masterSubEmitter || (this.masterSubEmitter = new Ge(...Array.from(this.criteriaEntries.keys()))), this.masterSubEmitter;
  }
};
async function Pd({ resource: r6, subscription: e, context: t, getPreviousResource: n, logger: i }) {
  var _a2, _b, _c2;
  if (((_a2 = e.meta) == null ? void 0 : _a2.account) && ((_c2 = (_b = r6.meta) == null ? void 0 : _b.account) == null ? void 0 : _c2.reference) !== e.meta.account.reference) return i == null ? void 0 : i.debug("Ignore resource in different account compartment"), false;
  if (!ea(e, i)) return i == null ? void 0 : i.debug("Ignore subscription without recognized channel type"), false;
  let o = e.criteria;
  if (!o) return i == null ? void 0 : i.debug("Ignore rest hook missing criteria"), false;
  let s = ie(o);
  if (r6.resourceType !== s.resourceType) return i == null ? void 0 : i.debug(`Ignore rest hook for different resourceType (wanted "${s.resourceType}", received "${r6.resourceType}")`), false;
  if (!await ta(e, r6, n)) return i == null ? void 0 : i.debug("Ignore rest hook for criteria returning false"), false;
  let c = X(e, "https://medplum.com/fhir/StructureDefinition/subscription-supported-interaction");
  return c && c.valueCode !== t.interaction ? (i == null ? void 0 : i.debug(`Ignore rest hook for different interaction (wanted "${c.valueCode}", received "${t.interaction}")`), false) : Pt(r6, s);
}
function ea(r6, e) {
  var _a2, _b;
  let t = (_a2 = r6.channel) == null ? void 0 : _a2.type;
  return t === "rest-hook" ? ((_b = r6.channel) == null ? void 0 : _b.endpoint) ? true : (e == null ? void 0 : e.debug("Ignore rest-hook missing URL"), false) : t === "websocket";
}
async function ta(r6, e, t) {
  var _a2, _b;
  let n = X(r6, "https://medplum.com/fhir/StructureDefinition/fhir-path-criteria-expression");
  if (!(n == null ? void 0 : n.valueString)) return true;
  let i = await t(e), o = { "%current": g(e), "%previous": g(i ?? {}) };
  return ((_b = (_a2 = A(n.valueString, [g(e)], o)) == null ? void 0 : _a2[0]) == null ? void 0 : _b.value) === true;
}
var tf = "3.2.25-41ee56551";
var rf = "medplum-cli";
var ra = D.FHIR_JSON + ", */*; q=0.1";
var na = "https://api.medplum.com/";
var ia = 1e3;
var oa = 6e4;
var sa = 0;
var aa = 3e5;
var ca = "Binary/";
var Pi = { resourceType: "Device", id: "system", deviceName: [{ type: "model-name", name: "System" }] };
var ua = ((o) => (o.ClientCredentials = "client_credentials", o.AuthorizationCode = "authorization_code", o.RefreshToken = "refresh_token", o.JwtBearer = "urn:ietf:params:oauth:grant-type:jwt-bearer", o.TokenExchange = "urn:ietf:params:oauth:grant-type:token-exchange", o))(ua || {});
var la = ((o) => (o.AccessToken = "urn:ietf:params:oauth:token-type:access_token", o.RefreshToken = "urn:ietf:params:oauth:token-type:refresh_token", o.IdToken = "urn:ietf:params:oauth:token-type:id_token", o.Saml1Token = "urn:ietf:params:oauth:token-type:saml1", o.Saml2Token = "urn:ietf:params:oauth:token-type:saml2", o))(la || {});
var pa = ((o) => (o.ClientSecretBasic = "client_secret_basic", o.ClientSecretPost = "client_secret_post", o.ClientSecretJwt = "client_secret_jwt", o.PrivateKeyJwt = "private_key_jwt", o.None = "none", o))(pa || {});
var da = ((e) => (e.JwtBearer = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer", e))(da || {});
var Nt = class extends H {
  constructor(t) {
    super();
    this.initComplete = true;
    if ((t == null ? void 0 : t.baseUrl) && !t.baseUrl.startsWith("http")) throw new Error("Base URL must start with http or https");
    this.options = t ?? {}, this.fetch = (t == null ? void 0 : t.fetch) ?? fa(), this.storage = (t == null ? void 0 : t.storage) ?? new $e(), this.createPdfImpl = t == null ? void 0 : t.createPdf, this.baseUrl = Cr((t == null ? void 0 : t.baseUrl) ?? na), this.fhirBaseUrl = B(this.baseUrl, (t == null ? void 0 : t.fhirUrlPath) ?? "fhir/R4"), this.authorizeUrl = B(this.baseUrl, (t == null ? void 0 : t.authorizeUrl) ?? "oauth2/authorize"), this.tokenUrl = B(this.baseUrl, (t == null ? void 0 : t.tokenUrl) ?? "oauth2/token"), this.logoutUrl = B(this.baseUrl, (t == null ? void 0 : t.logoutUrl) ?? "oauth2/logout"), this.fhircastHubUrl = B(this.baseUrl, (t == null ? void 0 : t.fhircastHubUrl) ?? "fhircast/STU3"), this.clientId = (t == null ? void 0 : t.clientId) ?? "", this.clientSecret = (t == null ? void 0 : t.clientSecret) ?? "", this.defaultHeaders = (t == null ? void 0 : t.defaultHeaders) ?? {}, this.onUnauthenticated = t == null ? void 0 : t.onUnauthenticated, this.refreshGracePeriod = (t == null ? void 0 : t.refreshGracePeriod) ?? aa, this.cacheTime = (t == null ? void 0 : t.cacheTime) ?? (typeof window > "u" ? sa : oa), this.cacheTime > 0 ? this.requestCache = new At((t == null ? void 0 : t.resourceCacheSize) ?? ia) : this.requestCache = void 0, (t == null ? void 0 : t.autoBatchTime) ? (this.autoBatchTime = t.autoBatchTime, this.autoBatchQueue = []) : (this.autoBatchTime = 0, this.autoBatchQueue = void 0), (t == null ? void 0 : t.accessToken) && this.setAccessToken(t.accessToken), this.storage.getInitPromise === void 0 ? ((t == null ? void 0 : t.accessToken) || this.attemptResumeActiveLogin().catch(console.error), this.initPromise = Promise.resolve(), this.dispatchEvent({ type: "storageInitialized" })) : (this.initComplete = false, this.initPromise = this.storage.getInitPromise(), this.initPromise.then(() => {
      (t == null ? void 0 : t.accessToken) || this.attemptResumeActiveLogin().catch(console.error), this.initComplete = true, this.dispatchEvent({ type: "storageInitialized" });
    }).catch((n) => {
      console.error(n), this.initComplete = true, this.dispatchEvent({ type: "storageInitFailed", payload: { error: n } });
    })), this.setupStorageListener();
  }
  get isInitialized() {
    return this.initComplete;
  }
  getInitPromise() {
    return this.initPromise;
  }
  async attemptResumeActiveLogin() {
    let t = this.getActiveLogin();
    t && (this.setAccessToken(t.accessToken, t.refreshToken), await this.refreshProfile());
  }
  getBaseUrl() {
    return this.baseUrl;
  }
  getAuthorizeUrl() {
    return this.authorizeUrl;
  }
  getTokenUrl() {
    return this.tokenUrl;
  }
  getLogoutUrl() {
    return this.logoutUrl;
  }
  getFhircastHubUrl() {
    return this.fhircastHubUrl;
  }
  getDefaultHeaders() {
    return this.defaultHeaders;
  }
  clear() {
    this.storage.clear(), typeof window < "u" && sessionStorage.clear(), this.clearActiveLogin();
  }
  clearActiveLogin() {
    var _a2;
    this.storage.setString("activeLogin", void 0), (_a2 = this.requestCache) == null ? void 0 : _a2.clear(), this.accessToken = void 0, this.refreshToken = void 0, this.refreshPromise = void 0, this.accessTokenExpires = void 0, this.sessionDetails = void 0, this.medplumServer = void 0, this.dispatchEvent({ type: "change" });
  }
  invalidateUrl(t) {
    var _a2;
    t = t.toString(), (_a2 = this.requestCache) == null ? void 0 : _a2.delete(t);
  }
  invalidateAll() {
    var _a2;
    (_a2 = this.requestCache) == null ? void 0 : _a2.clear();
  }
  invalidateSearches(t) {
    let n = B(this.fhirBaseUrl, t);
    if (this.requestCache) for (let i of this.requestCache.keys()) (i.endsWith(n) || i.includes(n + "?")) && this.requestCache.delete(i);
  }
  get(t, n = {}) {
    t = t.toString();
    let i = this.getCacheEntry(t, n);
    if (i) return i.value;
    let o;
    t.startsWith(this.fhirBaseUrl) && this.autoBatchQueue ? o = new Promise((a, c) => {
      this.autoBatchQueue.push({ method: "GET", url: t.replace(this.fhirBaseUrl, ""), options: n, resolve: a, reject: c }), this.autoBatchTimerId || (this.autoBatchTimerId = setTimeout(() => this.executeAutoBatch(), this.autoBatchTime));
    }) : o = this.request("GET", t, n);
    let s = new M(o);
    return this.setCacheEntry(t, s), s;
  }
  post(t, n, i, o = {}) {
    return t = t.toString(), this.setRequestBody(o, n), i && this.setRequestContentType(o, i), this.invalidateUrl(t), this.request("POST", t, o);
  }
  put(t, n, i, o = {}) {
    return t = t.toString(), this.setRequestBody(o, n), i && this.setRequestContentType(o, i), this.invalidateUrl(t), this.request("PUT", t, o);
  }
  patch(t, n, i = {}) {
    return t = t.toString(), this.setRequestBody(i, n), this.setRequestContentType(i, D.JSON_PATCH), this.invalidateUrl(t), this.request("PATCH", t, i);
  }
  delete(t, n) {
    return t = t.toString(), this.invalidateUrl(t), this.request("DELETE", t, n);
  }
  async startNewUser(t, n) {
    let { codeChallengeMethod: i, codeChallenge: o } = await this.startPkce();
    return this.post("auth/newuser", { ...t, clientId: t.clientId ?? this.clientId, codeChallengeMethod: i, codeChallenge: o }, void 0, n);
  }
  async startNewProject(t, n) {
    return this.post("auth/newproject", t, void 0, n);
  }
  async startNewPatient(t, n) {
    return this.post("auth/newpatient", t, void 0, n);
  }
  async startLogin(t, n) {
    return this.post("auth/login", { ...await this.ensureCodeChallenge(t), clientId: t.clientId ?? this.clientId, scope: t.scope }, void 0, n);
  }
  async startGoogleLogin(t, n) {
    return this.post("auth/google", { ...await this.ensureCodeChallenge(t), clientId: t.clientId ?? this.clientId, scope: t.scope }, void 0, n);
  }
  async ensureCodeChallenge(t) {
    return t.codeChallenge ? t : { ...t, ...await this.startPkce() };
  }
  async signOut() {
    await this.post(this.logoutUrl, {}), this.clear();
  }
  async signInWithRedirect(t) {
    let i = new URLSearchParams(window.location.search).get("code");
    if (!i) {
      await this.requestAuthorization(t);
      return;
    }
    return this.processCode(i);
  }
  signOutWithRedirect() {
    window.location.assign(this.logoutUrl);
  }
  async signInWithExternalAuth(t, n, i, o, s = true) {
    let a = o;
    s && (a = await this.ensureCodeChallenge(o)), window.location.assign(this.getExternalAuthRedirectUri(t, n, i, a, s));
  }
  async exchangeExternalAccessToken(t, n) {
    if (n = n ?? this.clientId, !n) throw new Error("MedplumClient is missing clientId");
    let i = new URLSearchParams();
    return i.set("grant_type", "urn:ietf:params:oauth:grant-type:token-exchange"), i.set("subject_token_type", "urn:ietf:params:oauth:token-type:access_token"), i.set("client_id", n), i.set("subject_token", t), this.fetchTokens(i);
  }
  getExternalAuthRedirectUri(t, n, i, o, s = true) {
    let a = new URL(t);
    if (a.searchParams.set("response_type", "code"), a.searchParams.set("client_id", n), a.searchParams.set("redirect_uri", i), a.searchParams.set("scope", o.scope ?? "openid profile email"), a.searchParams.set("state", JSON.stringify(o)), s) {
      let { codeChallenge: c, codeChallengeMethod: u } = o;
      if (!u) throw new Error("`LoginRequest` for external auth must include a `codeChallengeMethod`.");
      if (!c) throw new Error("`LoginRequest` for external auth must include a `codeChallenge`.");
      a.searchParams.set("code_challenge_method", u), a.searchParams.set("code_challenge", c);
    }
    return a.toString();
  }
  fhirUrl(...t) {
    return new URL(B(this.fhirBaseUrl, t.join("/")));
  }
  fhirSearchUrl(t, n) {
    let i = this.fhirUrl(t);
    return n && (i.search = Kn(n)), i;
  }
  search(t, n, i) {
    let o = this.fhirSearchUrl(t, n), s = "search-" + o.toString(), a = this.getCacheEntry(s, i);
    if (a) return a.value;
    let c = new M((async () => {
      let u = await this.get(o, i);
      if (u.entry) for (let p of u.entry) this.cacheResource(p.resource);
      return u;
    })());
    return this.setCacheEntry(s, c), c;
  }
  searchOne(t, n, i) {
    let o = this.fhirSearchUrl(t, n);
    o.searchParams.set("_count", "1"), o.searchParams.sort();
    let s = "searchOne-" + o.toString(), a = this.getCacheEntry(s, i);
    if (a) return a.value;
    let c = new M(this.search(t, o.searchParams, i).then((u) => {
      var _a2, _b;
      return (_b = (_a2 = u.entry) == null ? void 0 : _a2[0]) == null ? void 0 : _b.resource;
    }));
    return this.setCacheEntry(s, c), c;
  }
  searchResources(t, n, i) {
    let s = "searchResources-" + this.fhirSearchUrl(t, n).toString(), a = this.getCacheEntry(s, i);
    if (a) return a.value;
    let c = new M(this.search(t, n, i).then(Oi));
    return this.setCacheEntry(s, c), c;
  }
  async *searchResourcePages(t, n, i) {
    var _a2, _b;
    let o = this.fhirSearchUrl(t, n);
    for (; o; ) {
      let s = new URL(o).searchParams, a = await this.search(t, s, i), c = (_a2 = a.link) == null ? void 0 : _a2.find((u) => u.relation === "next");
      if (!((_b = a.entry) == null ? void 0 : _b.length) && !c) break;
      yield Oi(a), o = (c == null ? void 0 : c.url) ? new URL(c.url) : void 0;
    }
  }
  searchValueSet(t, n, i) {
    return this.valueSetExpand({ url: t, filter: n }, i);
  }
  valueSetExpand(t, n) {
    let i = this.fhirUrl("ValueSet", "$expand");
    return i.search = new URLSearchParams(t).toString(), this.get(i.toString(), n);
  }
  getCached(t, n) {
    var _a2, _b;
    let i = (_b = (_a2 = this.requestCache) == null ? void 0 : _a2.get(this.fhirUrl(t, n).toString())) == null ? void 0 : _b.value;
    return (i == null ? void 0 : i.isOk()) ? i.read() : void 0;
  }
  getCachedReference(t) {
    let n = t.reference;
    if (!n) return;
    if (n === "system") return Pi;
    let [i, o] = n.split("/");
    if (!(!i || !o)) return this.getCached(i, o);
  }
  readResource(t, n, i) {
    if (!n) throw new Error('The "id" parameter cannot be null, undefined, or an empty string.');
    return this.get(this.fhirUrl(t, n), i);
  }
  readReference(t, n) {
    let i = t.reference;
    if (!i) return new M(Promise.reject(new Error("Missing reference")));
    if (i === "system") return new M(Promise.resolve(Pi));
    let [o, s] = i.split("/");
    return !o || !s ? new M(Promise.reject(new Error("Invalid reference"))) : this.readResource(o, s, n);
  }
  requestSchema(t) {
    if (vn(t)) return Promise.resolve();
    let n = t + "-requestSchema", i = this.getCacheEntry(n, void 0);
    if (i) return i.value;
    let o = new M((async () => {
      let s = `{
      StructureDefinitionList(name: "${t}") {
        resourceType,
        name,
        kind,
        description,
        type,
        url,
        snapshot {
          element {
            id,
            path,
            definition,
            min,
            max,
            base {
              path,
              min,
              max
            },
            contentReference,
            type {
              code,
              profile,
              targetProfile
            },
            binding {
              strength,
              valueSet
            }
          }
        }
      }
      SearchParameterList(base: "${t}", _count: 100) {
        base,
        code,
        type,
        expression,
        target
      }
    }`.replace(/\s+/g, " "), a = await this.graphql(s);
      cr(a.data.StructureDefinitionList.filter((c) => c.name === t));
      for (let c of a.data.SearchParameterList) Ar(c);
    })());
    return this.setCacheEntry(n, o), o;
  }
  requestProfileSchema(t, n) {
    if (!(n == null ? void 0 : n.expandProfile) && Sn(t)) return Promise.resolve();
    let i = t + "-requestSchema" + ((n == null ? void 0 : n.expandProfile) ? "-nested" : ""), o = this.getCacheEntry(i, void 0);
    if (o) return o.value;
    let s = new M((async () => {
      if (n == null ? void 0 : n.expandProfile) {
        let a = this.fhirUrl("StructureDefinition", "$expand-profile");
        a.search = new URLSearchParams({ url: t }).toString();
        let c = await this.post(a.toString(), {});
        cr(c);
      } else {
        let a = await this.searchOne("StructureDefinition", { url: t, _sort: "-_lastUpdated" });
        if (!a) {
          console.warn(`No StructureDefinition found for ${t}!`);
          return;
        }
        ur(a);
      }
    })());
    return this.setCacheEntry(i, s), s;
  }
  readHistory(t, n, i) {
    return this.get(this.fhirUrl(t, n, "_history"), i);
  }
  readVersion(t, n, i, o) {
    return this.get(this.fhirUrl(t, n, "_history", i), o);
  }
  readPatientEverything(t, n) {
    return this.get(this.fhirUrl("Patient", t, "$everything"), n);
  }
  createResource(t, n) {
    if (!t.resourceType) throw new Error("Missing resourceType");
    return this.invalidateSearches(t.resourceType), this.post(this.fhirUrl(t.resourceType), t, void 0, n);
  }
  async createResourceIfNoneExist(t, n, i) {
    let o = this.fhirUrl(t.resourceType);
    i ? i.headers ? Array.isArray(i.headers) ? i.headers.push(["If-None-Exist", n]) : i.headers instanceof Headers ? i.headers.set("If-None-Exist", n) : i.headers["If-None-Exist"] = n : i.headers = { "If-None-Exist": n } : i = { headers: { "If-None-Exist": n } };
    let s = await this.post(o, t, void 0, i);
    return this.cacheResource(s), this.invalidateUrl(this.fhirUrl(t.resourceType, t.id, "_history")), this.invalidateSearches(t.resourceType), s;
  }
  async upsertResource(t, n, i) {
    let o = this.fhirSearchUrl(t.resourceType, n), s = await this.put(o, t, void 0, i);
    return s || (s = t), this.cacheResource(s), this.invalidateUrl(this.fhirUrl(t.resourceType, t.id, "_history")), this.invalidateSearches(t.resourceType), s;
  }
  async createAttachment(t, n, i, o, s) {
    let a = Ii(t, n, i, o), c = s ?? (typeof n == "object" ? n : {}), u = await this.createBinary(a, c);
    return { contentType: a.contentType, url: u.url, title: a.filename };
  }
  createBinary(t, n, i, o, s) {
    let a = Ii(t, n, i, o), c = s ?? (typeof n == "object" ? n : {}), { data: u, contentType: p, filename: m, securityContext: x, onProgress: Q } = a, _e = this.fhirUrl("Binary");
    return m && _e.searchParams.set("_filename", m), (x == null ? void 0 : x.reference) && this.setRequestHeader(c, "X-Security-Context", x.reference), Q ? this.uploadwithProgress(_e, u, p, Q, c) : this.post(_e, u, p, c);
  }
  uploadwithProgress(t, n, i, o, s) {
    return new Promise((a, c) => {
      var _a2;
      let u = new XMLHttpRequest(), p = () => u.abort();
      (_a2 = s == null ? void 0 : s.signal) == null ? void 0 : _a2.addEventListener("abort", p);
      let m = (x) => {
        var _a3;
        (_a3 = s == null ? void 0 : s.signal) == null ? void 0 : _a3.removeEventListener("abort", p), x instanceof Error ? c(x) : a(x);
      };
      if (u.responseType = "json", u.onabort = () => m(new DOMException("Request aborted", "AbortError")), u.onerror = () => m(new Error("Request error")), o && (u.upload.onprogress = (x) => o(x), u.upload.onload = (x) => o(x)), u.onload = () => {
        u.status >= 200 && u.status < 300 ? m(u.response) : m(new d(Xe(u.response || u.statusText)));
      }, u.open("POST", t), u.withCredentials = true, u.setRequestHeader("Authorization", "Bearer " + this.accessToken), u.setRequestHeader("Cache-Control", "no-cache, no-store, max-age=0"), u.setRequestHeader("Content-Type", i), this.options.extendedMode !== false && u.setRequestHeader("X-Medplum", "extended"), s == null ? void 0 : s.headers) {
        let x = s.headers;
        for (let [Q, _e] of Object.entries(x)) u.setRequestHeader(Q, _e);
      }
      u.send(n);
    });
  }
  async createPdf(t, n, i, o) {
    if (!this.createPdfImpl) throw new Error("PDF creation not enabled");
    let s = ya(t, n, i, o), a = typeof n == "object" ? n : {}, { docDefinition: c, tableLayouts: u, fonts: p, ...m } = s, x = await this.createPdfImpl(c, u, p), Q = { ...m, data: x, contentType: "application/pdf" };
    return this.createBinary(Q, a);
  }
  createComment(t, n, i) {
    let o = this.getProfile(), s, a;
    return t.resourceType === "Encounter" && (s = te(t), a = t.subject), t.resourceType === "ServiceRequest" && (s = t.encounter, a = t.subject), t.resourceType === "Patient" && (a = te(t)), this.createResource({ resourceType: "Communication", status: "completed", basedOn: [te(t)], encounter: s, subject: a, sender: o ? te(o) : void 0, sent: (/* @__PURE__ */ new Date()).toISOString(), payload: [{ contentString: n }] }, i);
  }
  async updateResource(t, n) {
    if (!t.resourceType) throw new Error("Missing resourceType");
    if (!t.id) throw new Error("Missing id");
    let i = await this.put(this.fhirUrl(t.resourceType, t.id), t, void 0, n);
    return i || (i = t), this.cacheResource(i), this.invalidateUrl(this.fhirUrl(t.resourceType, t.id, "_history")), this.invalidateSearches(t.resourceType), i;
  }
  async patchResource(t, n, i, o) {
    let s = await this.patch(this.fhirUrl(t, n), i, o);
    return this.cacheResource(s), this.invalidateUrl(this.fhirUrl(t, n, "_history")), this.invalidateSearches(t), s;
  }
  deleteResource(t, n, i) {
    return this.deleteCacheEntry(this.fhirUrl(t, n).toString()), this.invalidateSearches(t), this.delete(this.fhirUrl(t, n), i);
  }
  validateResource(t, n) {
    return this.post(this.fhirUrl(t.resourceType, "$validate"), t, void 0, n);
  }
  executeBot(t, n, i, o) {
    let s;
    if (typeof t == "string") {
      let a = t;
      s = this.fhirUrl("Bot", a, "$execute");
    } else {
      let a = t;
      s = this.fhirUrl("Bot", "$execute"), s.searchParams.set("identifier", a.system + "|" + a.value);
    }
    return this.post(s, n, i, o);
  }
  executeBatch(t, n) {
    return this.post(this.fhirBaseUrl, t, void 0, n);
  }
  sendEmail(t, n) {
    return this.post("email/v1/send", t, D.JSON, n);
  }
  graphql(t, n, i, o) {
    return this.post(this.fhirUrl("$graphql"), { query: t, operationName: n, variables: i }, D.JSON, o);
  }
  readResourceGraph(t, n, i, o) {
    return this.get(`${this.fhirUrl(t, n)}/$graph?graph=${i}`, o);
  }
  pushToAgent(t, n, i, o, s, a) {
    return this.post(this.fhirUrl("Agent", pe(t), "$push"), { destination: typeof n == "string" ? n : le(n), body: i, contentType: o, waitForResponse: s }, D.FHIR_JSON, a);
  }
  getActiveLogin() {
    return this.storage.getObject("activeLogin");
  }
  async setActiveLogin(t) {
    var _a2, _b;
    (!((_a2 = this.sessionDetails) == null ? void 0 : _a2.profile) || le(this.sessionDetails.profile) !== ((_b = t.profile) == null ? void 0 : _b.reference)) && this.clearActiveLogin(), this.setAccessToken(t.accessToken, t.refreshToken), this.storage.setObject("activeLogin", t), this.addLogin(t), this.refreshPromise = void 0, await this.refreshProfile();
  }
  getAccessToken() {
    return this.accessToken;
  }
  setAccessToken(t, n) {
    this.accessToken = t, this.refreshToken = n, this.accessTokenExpires = Si(t), this.medplumServer = Ti(t);
  }
  getLogins() {
    return this.storage.getObject("logins") ?? [];
  }
  addLogin(t) {
    let n = this.getLogins().filter((i) => {
      var _a2, _b;
      return ((_a2 = i.profile) == null ? void 0 : _a2.reference) !== ((_b = t.profile) == null ? void 0 : _b.reference);
    });
    n.push(t), this.storage.setObject("logins", n);
  }
  async refreshProfile() {
    return this.medplumServer ? (this.profilePromise = new Promise((t, n) => {
      this.get("auth/me", { cache: "no-cache" }).then((i) => {
        var _a2, _b;
        this.profilePromise = void 0;
        let o = ((_b = (_a2 = this.sessionDetails) == null ? void 0 : _a2.profile) == null ? void 0 : _b.id) !== i.profile.id;
        this.sessionDetails = i, o && this.dispatchEvent({ type: "change" }), t(i.profile), this.dispatchEvent({ type: "profileRefreshed" });
      }).catch(n);
    }), this.dispatchEvent({ type: "profileRefreshing" }), this.profilePromise) : Promise.resolve(void 0);
  }
  isLoading() {
    var _a2;
    return !this.isInitialized || !!this.profilePromise && !((_a2 = this.sessionDetails) == null ? void 0 : _a2.profile);
  }
  isSuperAdmin() {
    var _a2;
    return !!((_a2 = this.sessionDetails) == null ? void 0 : _a2.project.superAdmin);
  }
  isProjectAdmin() {
    var _a2;
    return !!((_a2 = this.sessionDetails) == null ? void 0 : _a2.membership.admin);
  }
  getProject() {
    var _a2;
    return (_a2 = this.sessionDetails) == null ? void 0 : _a2.project;
  }
  getProjectMembership() {
    var _a2;
    return (_a2 = this.sessionDetails) == null ? void 0 : _a2.membership;
  }
  getProfile() {
    var _a2;
    return (_a2 = this.sessionDetails) == null ? void 0 : _a2.profile;
  }
  async getProfileAsync() {
    return this.profilePromise ? this.profilePromise : this.sessionDetails ? this.sessionDetails.profile : this.refreshProfile();
  }
  getUserConfiguration() {
    var _a2;
    return (_a2 = this.sessionDetails) == null ? void 0 : _a2.config;
  }
  getAccessPolicy() {
    var _a2;
    return (_a2 = this.sessionDetails) == null ? void 0 : _a2.accessPolicy;
  }
  async download(t, n = {}) {
    this.refreshPromise && await this.refreshPromise;
    let i = t.toString();
    i.startsWith(ca) && (t = this.fhirUrl(i));
    let o = n.headers;
    return o || (o = {}, n.headers = o), o.Accept || (o.Accept = "*/*"), this.addFetchOptionsDefaults(n), (await this.fetchWithRetry(t.toString(), n)).blob();
  }
  async createMedia(t, n) {
    let { additionalFields: i, ...o } = t, s = await this.createResource({ resourceType: "Media", status: "preparation", content: { contentType: t.contentType }, ...i });
    o.securityContext || (o.securityContext = te(s));
    let a = await this.createAttachment(o, n);
    return this.updateResource({ ...s, status: "completed", content: a });
  }
  async uploadMedia(t, n, i, o, s) {
    return this.createMedia({ data: t, contentType: n, filename: i, additionalFields: o }, s);
  }
  async bulkExport(t = "", n, i, o) {
    let s = t && `${t}/`, a = this.fhirUrl(`${s}$export`);
    return n && a.searchParams.set("_type", n), i && a.searchParams.set("_since", i), this.startAsyncRequest(a.toString(), o);
  }
  async startAsyncRequest(t, n = {}) {
    this.addFetchOptionsDefaults(n);
    let i = n.headers;
    return i.Prefer = "respond-async", this.request("POST", t, n);
  }
  get keyValue() {
    return this.keyValueClient || (this.keyValueClient = new Vt(this)), this.keyValueClient;
  }
  getCacheEntry(t, n) {
    if (!this.requestCache || (n == null ? void 0 : n.cache) === "no-cache" || (n == null ? void 0 : n.cache) === "reload") return;
    let i = this.requestCache.get(t);
    if (!(!i || i.requestTime + this.cacheTime < Date.now())) return i;
  }
  setCacheEntry(t, n) {
    this.requestCache && this.requestCache.set(t, { requestTime: Date.now(), value: n });
  }
  cacheResource(t) {
    var _a2, _b;
    (t == null ? void 0 : t.id) && !((_b = (_a2 = t.meta) == null ? void 0 : _a2.tag) == null ? void 0 : _b.some((n) => n.code === "SUBSETTED")) && this.setCacheEntry(this.fhirUrl(t.resourceType, t.id).toString(), new M(Promise.resolve(t)));
  }
  deleteCacheEntry(t) {
    this.requestCache && this.requestCache.delete(t);
  }
  async request(t, n, i = {}, o = {}) {
    var _a2;
    await this.refreshIfExpired(), i.method = t, this.addFetchOptionsDefaults(i);
    let s = await this.fetchWithRetry(n, i);
    if (s.status === 401) return this.handleUnauthenticated(t, n, i);
    if (s.status === 204 || s.status === 304) return;
    let c = (_a2 = s.headers.get("content-type")) == null ? void 0 : _a2.includes("json");
    if (s.status === 404 && !c) throw new d(on);
    let u = await this.parseBody(s, c);
    if (s.status === 200 && i.followRedirectOnOk || s.status === 201 && i.followRedirectOnCreated) {
      let p = await Ai(s, u);
      if (p) return this.request("GET", p, { ...i, body: void 0 });
    }
    if (s.status === 202 && i.pollStatusOnAccepted) {
      let m = await Ai(s, u) ?? o.statusUrl;
      if (m) return this.pollStatus(m, i, o);
    }
    if (s.status >= 400) throw new d(Xe(u));
    return u;
  }
  async parseBody(t, n) {
    let i;
    if (n) try {
      i = await t.json();
    } catch (o) {
      throw console.error("Error parsing response", t.status, o), o;
    }
    else i = await t.text();
    return i;
  }
  async fetchWithRetry(t, n) {
    t.startsWith("http") || (t = B(this.baseUrl, t));
    let i = (n == null ? void 0 : n.maxRetries) ?? 2, o = 200;
    for (let s = 0; s <= i; s++) {
      try {
        this.options.verbose && this.logRequest(t, n);
        let a = await this.fetch(t, n);
        if (this.options.verbose && this.logResponse(a), a.status < 500 || s === i) return a;
      } catch (a) {
        if (a.message === "Failed to fetch" && s === 0 && this.dispatchEvent({ type: "offline" }), a.name === "AbortError" || s === i) throw a;
      }
      await br(o);
    }
    throw new Error("Unreachable");
  }
  logRequest(t, n) {
    if (console.log(`> ${n.method} ${t}`), n.headers) {
      let i = n.headers;
      for (let o of ut(Object.keys(i))) console.log(`> ${o}: ${i[o]}`);
    }
  }
  logResponse(t) {
    console.log(`< ${t.status} ${t.statusText}`), t.headers && t.headers.forEach((n, i) => console.log(`< ${i}: ${n}`));
  }
  async pollStatus(t, n, i) {
    let o = { ...n, method: "GET", body: void 0, redirect: "follow" };
    if (i.pollCount === void 0) n.headers && typeof n.headers == "object" && "Prefer" in n.headers && (o.headers = { ...n.headers }, delete o.headers.Prefer), i.statusUrl = t, i.pollCount = 1;
    else {
      let s = n.pollStatusPeriod ?? 1e3;
      await br(s), i.pollCount++;
    }
    return this.request("GET", t, o, i);
  }
  async executeAutoBatch() {
    var _a2, _b;
    if (this.autoBatchQueue === void 0) return;
    let t = [...this.autoBatchQueue];
    if (this.autoBatchQueue.length = 0, this.autoBatchTimerId = void 0, t.length === 1) {
      let o = t[0];
      try {
        o.resolve(await this.request(o.method, B(this.fhirBaseUrl, o.url), o.options));
      } catch (s) {
        o.reject(new d(Xe(s)));
      }
      return;
    }
    let n = { resourceType: "Bundle", type: "batch", entry: t.map((o) => ({ request: { method: o.method, url: o.url }, resource: o.options.body ? JSON.parse(o.options.body) : void 0 })) }, i = await this.post(this.fhirBaseUrl, n);
    for (let o = 0; o < t.length; o++) {
      let s = t[o], a = (_a2 = i.entry) == null ? void 0 : _a2[o];
      ((_b = a == null ? void 0 : a.response) == null ? void 0 : _b.outcome) && !rr(a.response.outcome) ? s.reject(new d(a.response.outcome)) : s.resolve(a == null ? void 0 : a.resource);
    }
  }
  addFetchOptionsDefaults(t) {
    Object.entries(this.defaultHeaders).forEach(([n, i]) => {
      this.setRequestHeader(t, n, i);
    }), this.setRequestHeader(t, "Accept", ra, true), this.options.extendedMode !== false && this.setRequestHeader(t, "X-Medplum", "extended"), t.body && this.setRequestHeader(t, "Content-Type", D.FHIR_JSON, true), this.accessToken ? this.setRequestHeader(t, "Authorization", "Bearer " + this.accessToken) : this.basicAuth && this.setRequestHeader(t, "Authorization", "Basic " + this.basicAuth), t.cache || (t.cache = "no-cache"), t.credentials || (t.credentials = "include");
  }
  setRequestContentType(t, n) {
    this.setRequestHeader(t, "Content-Type", n);
  }
  setRequestHeader(t, n, i, o = false) {
    t.headers || (t.headers = {});
    let s = t.headers;
    o && s[n] || (s[n] = i);
  }
  setRequestBody(t, n) {
    typeof n == "string" || typeof Blob < "u" && (n instanceof Blob || (n == null ? void 0 : n.constructor.name) === "Blob") || typeof File < "u" && (n instanceof File || (n == null ? void 0 : n.constructor.name) === "File") || typeof Uint8Array < "u" && (n instanceof Uint8Array || (n == null ? void 0 : n.constructor.name) === "Uint8Array") ? t.body = n : n && (t.body = JSON.stringify(n));
  }
  handleUnauthenticated(t, n, i) {
    return this.refresh() ? this.request(t, n, i) : (this.clear(), this.onUnauthenticated && this.onUnauthenticated(), Promise.reject(new d(Ee)));
  }
  async startPkce() {
    let t = _r();
    sessionStorage.setItem("pkceState", t);
    let n = _r().slice(0, 128);
    sessionStorage.setItem("codeVerifier", n);
    let i = await fi(n), o = jn(i).replaceAll("+", "-").replaceAll("/", "_").replaceAll("=", "");
    return sessionStorage.setItem("codeChallenge", o), { codeChallengeMethod: "S256", codeChallenge: o };
  }
  async requestAuthorization(t) {
    let n = await this.ensureCodeChallenge(t ?? {}), i = new URL(this.authorizeUrl);
    i.searchParams.set("response_type", "code"), i.searchParams.set("state", sessionStorage.getItem("pkceState")), i.searchParams.set("client_id", n.clientId ?? this.clientId), i.searchParams.set("redirect_uri", n.redirectUri ?? wi()), i.searchParams.set("code_challenge_method", n.codeChallengeMethod), i.searchParams.set("code_challenge", n.codeChallenge), i.searchParams.set("scope", n.scope ?? "openid profile"), window.location.assign(i.toString());
  }
  processCode(t, n) {
    let i = new URLSearchParams();
    if (i.set("grant_type", "authorization_code"), i.set("code", t), i.set("client_id", (n == null ? void 0 : n.clientId) ?? this.clientId), i.set("redirect_uri", (n == null ? void 0 : n.redirectUri) ?? wi()), typeof sessionStorage < "u") {
      let o = sessionStorage.getItem("codeVerifier");
      o && i.set("code_verifier", o);
    }
    return this.fetchTokens(i);
  }
  refreshIfExpired(t) {
    return t === void 0 && (t = this.refreshGracePeriod), !this.refreshPromise && this.accessTokenExpires !== void 0 && Date.now() > this.accessTokenExpires - t && this.refresh(), this.refreshPromise ?? Promise.resolve();
  }
  refresh() {
    if (this.refreshPromise) return this.refreshPromise;
    if (this.refreshToken) {
      let t = new URLSearchParams();
      return t.set("grant_type", "refresh_token"), t.set("client_id", this.clientId), t.set("refresh_token", this.refreshToken), this.refreshPromise = this.fetchTokens(t), this.refreshPromise;
    }
    if (this.clientId && this.clientSecret) return this.refreshPromise = this.startClientLogin(this.clientId, this.clientSecret), this.refreshPromise;
  }
  async startClientLogin(t, n) {
    this.clientId = t, this.clientSecret = n;
    let i = new URLSearchParams();
    return i.set("grant_type", "client_credentials"), i.set("client_id", t), i.set("client_secret", n), this.fetchTokens(i);
  }
  async startJwtBearerLogin(t, n, i) {
    this.clientId = t;
    let o = new URLSearchParams();
    return o.set("grant_type", "urn:ietf:params:oauth:grant-type:jwt-bearer"), o.set("client_id", t), o.set("assertion", n), o.set("scope", i), this.fetchTokens(o);
  }
  async startJwtAssertionLogin(t) {
    let n = new URLSearchParams();
    return n.append("grant_type", "client_credentials"), n.append("client_assertion_type", "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"), n.append("client_assertion", t), this.fetchTokens(n);
  }
  setBasicAuth(t, n) {
    this.clientId = t, this.clientSecret = n, this.basicAuth = di(t + ":" + n);
  }
  async fhircastSubscribe(t, n) {
    if (!(typeof t == "string" && t !== "")) throw new d(h("Invalid topic provided. Topic must be a valid string."));
    if (!(typeof n == "object" && Array.isArray(n) && n.length > 0)) throw new d(h("Invalid events provided. Events must be an array of event names containing at least one event."));
    let i = { channelType: "websocket", mode: "subscribe", topic: t, events: n }, s = (await this.post(this.fhircastHubUrl, Ur(i), D.FORM_URL_ENCODED))["hub.channel.endpoint"];
    if (!s) throw new Error("Invalid response!");
    return i.endpoint = s, i;
  }
  async fhircastUnsubscribe(t) {
    if (!It(t)) throw new d(h("Invalid topic or subscriptionRequest. SubscriptionRequest must be an object."));
    if (!(t.endpoint && typeof t.endpoint == "string" && t.endpoint.startsWith("ws"))) throw new d(h("Provided subscription request must have an endpoint in order to unsubscribe."));
    t.mode = "unsubscribe", await this.post(this.fhircastHubUrl, Ur(t), D.FORM_URL_ENCODED);
  }
  fhircastConnect(t) {
    return new Ot(t);
  }
  async fhircastPublish(t, n, i, o) {
    return yi(n) ? this.post(this.fhircastHubUrl, Br(t, n, i, o), D.JSON) : (gi(n), this.post(this.fhircastHubUrl, Br(t, n, i), D.JSON));
  }
  async fhircastGetContext(t) {
    return this.get(`${this.fhircastHubUrl}/${t}`);
  }
  async invite(t, n) {
    return this.post("admin/projects/" + t + "/invite", n);
  }
  async fetchTokens(t) {
    let n = { method: "POST", headers: { "Content-Type": D.FORM_URL_ENCODED }, body: t.toString(), credentials: "include" }, i = n.headers;
    Object.assign(i, this.defaultHeaders), this.basicAuth && (i.Authorization = `Basic ${this.basicAuth}`);
    let o;
    try {
      o = await this.fetchWithRetry(this.tokenUrl, n);
    } catch (a) {
      throw this.refreshPromise = void 0, a;
    }
    if (!o.ok) {
      this.clearActiveLogin();
      try {
        let a = await o.json();
        throw new d(E(a.error_description));
      } catch (a) {
        throw new d(E("Failed to fetch tokens"), a);
      }
    }
    let s = await o.json();
    return await this.verifyTokens(s), this.getProfile();
  }
  async verifyTokens(t) {
    let n = t.access_token;
    if (vi(n)) {
      let i = kt(n);
      if (Date.now() >= i.exp * 1e3) throw this.clearActiveLogin(), new d(sn);
      if (i.cid) {
        if (i.cid !== this.clientId) throw this.clearActiveLogin(), new d(tr);
      } else if (this.clientId && i.client_id !== this.clientId) throw this.clearActiveLogin(), new d(tr);
    }
    return this.setActiveLogin({ accessToken: n, refreshToken: t.refresh_token, project: t.project, profile: t.profile });
  }
  checkSessionDetailsMatchLogin(t) {
    var _a2, _b;
    return this.sessionDetails && t ? ((_b = (_a2 = t.profile) == null ? void 0 : _a2.reference) == null ? void 0 : _b.endsWith(this.sessionDetails.profile.id)) ?? false : true;
  }
  setupStorageListener() {
    try {
      window.addEventListener("storage", (t) => {
        if (t.key === null) window.location.reload();
        else if (t.key === "activeLogin") {
          let n = t.oldValue ? JSON.parse(t.oldValue) : void 0, i = t.newValue ? JSON.parse(t.newValue) : void 0;
          (n == null ? void 0 : n.profile.reference) !== (i == null ? void 0 : i.profile.reference) || !this.checkSessionDetailsMatchLogin(i) ? window.location.reload() : i ? this.setAccessToken(i.accessToken, i.refreshToken) : this.clear();
        }
      });
    } catch {
    }
  }
  getSubscriptionManager() {
    return this.subscriptionManager || (this.subscriptionManager = new _t(this, Qn(this.baseUrl, "/ws/subscriptions-r4"))), this.subscriptionManager;
  }
  subscribeToCriteria(t, n) {
    return this.getSubscriptionManager().addCriteria(t, n);
  }
  unsubscribeFromCriteria(t, n) {
    this.subscriptionManager && (this.subscriptionManager.removeCriteria(t, n), this.subscriptionManager.getCriteriaCount() === 0 && this.subscriptionManager.closeWebSocket());
  }
  getMasterSubscriptionEmitter() {
    return this.getSubscriptionManager().getMasterEmitter();
  }
};
function fa() {
  if (!globalThis.fetch) throw new Error("Fetch not available in this environment");
  return globalThis.fetch.bind(globalThis);
}
function wi() {
  return typeof window > "u" ? "" : window.location.protocol + "//" + window.location.host + "/";
}
async function Ai(r6, e) {
  var _a2, _b;
  let t = r6.headers.get("content-location");
  if (t) return t;
  let n = r6.headers.get("location");
  if (n) return n;
  if (be(e) && ((_b = (_a2 = e.issue) == null ? void 0 : _a2[0]) == null ? void 0 : _b.diagnostics)) return e.issue[0].diagnostics;
}
function Oi(r6) {
  var _a2;
  let e = ((_a2 = r6.entry) == null ? void 0 : _a2.map((t) => t.resource)) ?? [];
  return Object.assign(e, { bundle: r6 });
}
function ma(r6) {
  return R(r6) && "data" in r6 && "contentType" in r6;
}
function Ii(r6, e, t, n) {
  return ma(r6) ? r6 : { data: r6, filename: e, contentType: t, onProgress: n };
}
function ha(r6) {
  return R(r6) && "docDefinition" in r6;
}
function ya(r6, e, t, n) {
  return ha(r6) ? r6 : { docDefinition: r6, filename: e, tableLayouts: t, fonts: n };
}
var of = { aws_ssm_parameter_store: "aws_ssm_parameter_store" };
function Wr({ parentContext: r6, path: e, elements: t, profileUrl: n, debugMode: i, accessPolicyResource: o }) {
  if (e === (r6 == null ? void 0 : r6.path)) return;
  i ?? (i = (r6 == null ? void 0 : r6.debugMode) ?? false), o ?? (o = r6 == null ? void 0 : r6.accessPolicyResource);
  let s = ga(e, t, r6, !!i), a = Rr(e, ".", 2)[1];
  s = xa(s, o, a), s = va(s, o, a);
  let c = /* @__PURE__ */ Object.create(null);
  for (let [p, m] of Object.entries(s)) c[e + "." + p] = m;
  let u;
  if (r6 && !r6.isDefaultContext) u = r6.getExtendedProps;
  else {
    let p = /* @__PURE__ */ Object.create(null);
    u = (m) => {
      let x = Rr(m, ".", 2)[1];
      if (x) {
        if (!p[x]) {
          let Q = Lt(x, o == null ? void 0 : o.hiddenFields);
          p[x] = { hidden: Q, readonly: Q || Lt(x, o == null ? void 0 : o.readonlyFields) };
        }
        return p[x];
      }
    };
  }
  return { path: e, elements: s, elementsByPath: c, profileUrl: n ?? (r6 == null ? void 0 : r6.profileUrl), debugMode: i, getExtendedProps: u, accessPolicyResource: o };
}
function ga(r6, e, t, n) {
  let i = /* @__PURE__ */ Object.create(null);
  if (t) for (let [s, a] of Object.entries(t.elementsByPath)) {
    let c = we(r6, s);
    c !== void 0 && (i[c] = a);
  }
  let o = false;
  if (e) for (let [s, a] of Object.entries(e)) s in i || (i[s] = a, o = true);
  return n && console.assert(o, "Unnecessary ElementsContext; not using any newly provided elements"), i;
}
function xa(r6, e, t) {
  var _a2;
  if (!((_a2 = e == null ? void 0 : e.hiddenFields) == null ? void 0 : _a2.length)) return r6;
  let n = t ? t + "." : "";
  return Object.fromEntries(Object.entries(r6).filter(([i]) => !Lt(n + i, e.hiddenFields)));
}
function va(r6, e, t) {
  var _a2;
  if (!((_a2 = e == null ? void 0 : e.readonlyFields) == null ? void 0 : _a2.length)) return r6;
  let n = /* @__PURE__ */ Object.create(null), i = t ? t + "." : "";
  for (let [o, s] of Object.entries(r6)) Lt(i + o, e.readonlyFields) ? n[o] = { ...s, readonly: true } : n[o] = s;
  return n;
}
function Lt(r6, e) {
  if (!(e == null ? void 0 : e.length)) return false;
  let t = r6.split(".");
  for (let n = 1; n <= t.length; n++) {
    let i = t.slice(0, n).join(".");
    if (e.includes(i)) return true;
  }
  return false;
}
function ki(r6) {
  return r6.type !== void 0 && r6.type.length > 0;
}
function Ta(r6, e, t, n) {
  var _a2;
  let i = Ce(r6, e.path, { profileUrl: n });
  if (i) {
    let o = ((_a2 = t.typeSchema) == null ? void 0 : _a2.elements) ?? t.elements;
    return i.some((s) => hr(s, e, t, o)) ?? false;
  }
  return console.assert(false, "getNestedProperty[%s] in isDiscriminatorComponentMatch missed", e.path), false;
}
function Vi(r6, e, t, n) {
  var _a2, _b;
  if (r6) for (let i of e) {
    let o = { value: r6, type: ((_a2 = i.typeSchema) == null ? void 0 : _a2.type) ?? ((_b = i.type) == null ? void 0 : _b[0].code) };
    if (t.every((s) => {
      var _a3;
      return Ta(o, s, i, ((_a3 = i.typeSchema) == null ? void 0 : _a3.url) ?? n);
    })) return i.name;
  }
}
var De = class {
  constructor(e, t, n) {
    if (e.type === void 0) throw new Error("schema must include a type");
    this.rootSchema = e;
    let i = Wr({ parentContext: void 0, path: this.rootSchema.type, elements: n ?? this.rootSchema.elements, profileUrl: this.rootSchema.name === this.rootSchema.type ? void 0 : this.rootSchema.url });
    if (i === void 0) throw new Error("Could not create root elements context");
    this.elementsContextStack = [i], this.visitor = t;
  }
  get elementsContext() {
    return this.elementsContextStack[this.elementsContextStack.length - 1];
  }
  crawlElement(e, t, n) {
    this.visitor.onEnterSchema && this.visitor.onEnterSchema(this.rootSchema);
    let i = Object.fromEntries(Object.entries(this.elementsContext.elements).filter(([o]) => o.startsWith(t)));
    this.crawlElementsImpl(i, n), this.visitor.onExitSchema && this.visitor.onExitSchema(this.rootSchema);
  }
  crawlSlice(e, t, n) {
    let i = this.prepareSlices(n.slices, n);
    if (!K(i.slices)) throw new Error(`cannot crawl slice ${t.name} since it has no type information`);
    this.visitor.onEnterSchema && this.visitor.onEnterSchema(this.rootSchema), this.sliceAllowList = [t], this.crawlSliceImpl(i.slices[0], t.path, i), this.sliceAllowList = void 0, this.visitor.onExitSchema && this.visitor.onExitSchema(this.rootSchema);
  }
  crawlResource() {
    this.visitor.onEnterSchema && this.visitor.onEnterSchema(this.rootSchema), this.crawlElementsImpl(this.rootSchema.elements, this.rootSchema.type), this.visitor.onExitSchema && this.visitor.onExitSchema(this.rootSchema);
  }
  crawlElementsImpl(e, t) {
    let n = Sa(e);
    for (let i of n) this.crawlElementNode(i, t);
  }
  crawlElementNode(e, t) {
    var _a2, _b;
    let n = t + "." + e.key;
    this.visitor.onEnterElement && this.visitor.onEnterElement(n, e.element, this.elementsContext);
    for (let i of e.children) this.crawlElementNode(i, t);
    K((_b = (_a2 = e.element) == null ? void 0 : _a2.slicing) == null ? void 0 : _b.slices) && this.crawlSlicingImpl(e.element.slicing, n), this.visitor.onExitElement && this.visitor.onExitElement(n, e.element, this.elementsContext);
  }
  prepareSlices(e, t) {
    var _a2, _b;
    let n = [];
    for (let o of e) {
      if (!ki(o)) continue;
      let s = (_b = (_a2 = o.type.find((a) => K(a.profile))) == null ? void 0 : _a2.profile) == null ? void 0 : _b[0];
      if (K(s)) {
        let a = En(s);
        a && (o.typeSchema = a);
      }
      n.push(o);
    }
    return { ...t, slices: n };
  }
  crawlSlicingImpl(e, t) {
    let n = this.prepareSlices(e.slices, e);
    for (let i of n.slices) (this.sliceAllowList === void 0 || this.sliceAllowList.includes(i)) && this.crawlSliceImpl(i, t, n);
  }
  crawlSliceImpl(e, t, n) {
    let i = e.typeSchema;
    i && this.visitor.onEnterSchema && this.visitor.onEnterSchema(i), this.visitor.onEnterSlice && this.visitor.onEnterSlice(t, e, n);
    let o, s = (i == null ? void 0 : i.elements) ?? e.elements;
    K(s) && (o = Wr({ path: t, parentContext: this.elementsContext, elements: s })), o && this.elementsContextStack.push(o), this.crawlElementsImpl(s, t), o && this.elementsContextStack.pop(), this.visitor.onExitSlice && this.visitor.onExitSlice(t, e, n), i && this.visitor.onExitSchema && this.visitor.onExitSchema(i);
  }
};
function Sa(r6) {
  let e = [];
  function t(o, s) {
    return s.startsWith(o + ".");
  }
  function n(o, s) {
    for (let a of o.children) if (t(a.key, s.key)) {
      n(a, s);
      return;
    }
    o.children.push(s);
  }
  let i = Object.entries(r6);
  i.sort((o, s) => o[0].localeCompare(s[0]));
  for (let [o, s] of i) {
    let a = { key: o, element: s, children: [] }, c = false;
    for (let u of e) if (t(u.key, o)) {
      n(u, a), c = true;
      break;
    }
    c || e.push(a);
  }
  return e;
}
var Ft = "__sliceName";
function Of(r6, e) {
  let t = new He(r6, r6.resourceType, "resource");
  return new De(e, t).crawlResource(), t.getDefaultValue();
}
function If(r6, e, t) {
  for (let [n, i] of Object.entries(e)) {
    if (t === void 0 || t === n) {
      qt(r6, n, i, e);
      continue;
    }
    let o = we(t, n);
    o !== void 0 && qt(r6, o, i, e);
  }
  return r6;
}
function kf(r6, e, t, n, i) {
  let o = r6 ?? /* @__PURE__ */ Object.create(null), [s, a] = ba(e, "."), c = /* @__PURE__ */ Object.create(null);
  Ut(c, o, a, t);
  let u = new He(c, s, "element");
  new De(i, u, n).crawlElement(t, a, s);
  let m = u.getDefaultValue();
  return Bt(m, a, t, n);
}
function Vf(r6, e, t, n) {
  let i = new He([{ [Ft]: e.name }], e.path, "element");
  return new De(n, i).crawlSlice(r6, e, t), i.getDefaultValue()[0];
}
var He = class {
  constructor(e, t, n) {
    this.schemaStack = [], this.valueStack = [], this.rootValue = de(e), this.valueStack.splice(0, this.valueStack.length, { type: n, path: t, values: [this.rootValue] });
  }
  get schema() {
    return this.schemaStack[this.schemaStack.length - 1];
  }
  get value() {
    return this.valueStack[this.valueStack.length - 1];
  }
  onEnterSchema(e) {
    this.schemaStack.push(e);
  }
  onExitSchema() {
    this.schemaStack.pop();
  }
  onEnterElement(e, t, n) {
    let i = this.value.values, o = this.value.path, s = we(o, e);
    if (s === void 0) throw new Error(`Expected ${e} to be prefixed by ${o}`);
    let a = [];
    for (let c of i) {
      if (c === void 0) continue;
      let u = Array.isArray(c) ? c : [c];
      for (let p of u) {
        Ea(p, s, t, n.elements), qt(p, s, t, n.elements);
        let m = Bt(p, s, t, n.elements);
        m !== void 0 && a.push(m);
      }
    }
    this.valueStack.push({ type: "element", path: e, values: a });
  }
  onExitElement(e, t, n) {
    if (!this.valueStack.pop()) throw new Error("Expected value context to exist when exiting element");
    let o = we(this.value.path, e);
    if (o === void 0) throw new Error(`Expected ${e} to be prefixed by ${this.value.path}`);
    for (let s of this.value.values) {
      let a = Bt(s, o, t, n.elements);
      if (Array.isArray(a)) for (let c = a.length - 1; c >= 0; c--) {
        let u = a[c];
        K(u) || a.splice(c, 1);
      }
      S(a) && Ut(s, void 0, o, t);
    }
  }
  onEnterSlice(e, t, n) {
    let i = this.value.values, o = [];
    for (let s of i) if (s !== void 0) {
      let a = Array.isArray(s) ? s : [s], c = this.getMatchingSliceValues(a, t, n);
      o.push(c);
    }
    this.valueStack.push({ type: "slice", path: e, values: o });
  }
  getMatchingSliceValues(e, t, n) {
    let i = [];
    for (let o of e) (o[Ft] ?? Vi(o, [t], n.discriminator, this.schema.url)) === t.name && i.push(o);
    for (let o = i.length; o < t.min; o++) if (Er(t.type[0].code)) {
      let s = /* @__PURE__ */ Object.create(null);
      i.push(s), e.push(s);
    }
    return i;
  }
  onExitSlice() {
    let e = this.valueStack.pop();
    if (!e) throw new Error("Expected value context to exist in onExitSlice");
    for (let t of e.values) for (let n = t.length - 1; n >= 0; n--) {
      let i = t[n];
      Ft in i && delete i[Ft];
    }
  }
  getDefaultValue() {
    return this.rootValue;
  }
};
function Ea(r6, e, t, n) {
  let i = Bt(r6, e, t, n);
  t.min > 0 && i === void 0 && Er(t.type[0].code) && (t.isArray ? Ut(r6, [/* @__PURE__ */ Object.create(null)], e, t) : Ut(r6, /* @__PURE__ */ Object.create(null), e, t));
}
function Ut(r6, e, t, n) {
  if (t.includes(".")) throw new Error("key cannot be nested");
  let i = t;
  if (t.includes("[x]")) {
    let o = n.type[0].code;
    i = t.replace("[x]", w(o));
  }
  e === void 0 ? delete r6[i] : r6[i] = e;
}
function Bt(r6, e, t, n) {
  let i = e.split("."), o = r6, s;
  for (let a = 0; a < i.length; a++) {
    let c = i[a];
    if (c.includes("[x]")) {
      let p = n[i.slice(0, a + 1).join(".")].type[0].code;
      c = c.replace("[x]", w(p));
    }
    if (a === i.length - 1) {
      Array.isArray(o) ? s = o.map((u) => u[c]) : s = o[c];
      continue;
    }
    if (Array.isArray(o)) o = o.map((u) => u[c]);
    else if (R(o)) {
      if (o[c] === void 0) return;
      o = o[c];
    } else return;
  }
  return s;
}
function qt(r6, e, t, n) {
  if (!(t.fixed || t.pattern)) return r6;
  if (Array.isArray(r6)) return r6.map((a) => qt(a, e, t, n));
  r6 == null && (r6 = /* @__PURE__ */ Object.create(null));
  let i = r6, o = e.split("."), s = i;
  for (let a = 0; a < o.length; a++) {
    let c = o[a];
    if (c.includes("[x]")) {
      let p = n[o.slice(0, a + 1).join(".")].type[0].code;
      c = c.replace("[x]", w(p));
    }
    if (a === o.length - 1) {
      let u = Array.isArray(s) ? s : [s];
      for (let p of u) t.fixed ? p[c] ?? (p[c] = t.fixed.value) : t.pattern && (p[c] = Di(p[c], t.pattern.value));
    } else {
      if (!(c in s)) {
        let u = o.slice(0, a + 1).join(".");
        s[c] = n[u].isArray ? [/* @__PURE__ */ Object.create(null)] : /* @__PURE__ */ Object.create(null);
      }
      s = s[c];
    }
  }
  return i;
}
function Di(r6, e) {
  if (Array.isArray(e) && (Array.isArray(r6) || r6 === void 0)) return ((r6 == null ? void 0 : r6.length) ?? 0) > 0 ? r6 : de(e);
  if (R(e) && (R(r6) && !Array.isArray(r6) || r6 === void 0)) {
    let t = de(r6) ?? /* @__PURE__ */ Object.create(null);
    for (let n of Object.keys(e)) t[n] = Di(t[n], e[n]);
    return t;
  }
  return r6;
}
function ba(r6, e) {
  let t = r6.lastIndexOf(e);
  if (t === -1) return ["", r6];
  let n = r6.substring(0, t), i = r6.substring(t + e.length);
  return [n, i];
}
function Mi(r6, e) {
  if (!r6.group) throw new d(E("ConceptMap does not specify a mapping group", "ConceptMap.group"));
  let t = Ra(e);
  if (be(t)) throw new d(t);
  let n = Pa(t, e.targetsystem ? r6.group.filter((o) => o.target === e.targetsystem) : r6.group), i = n.length > 0;
  return { result: i, match: i ? n : void 0 };
}
function Ra(r6) {
  return r6.code && !r6.coding && !r6.codeableConcept ? r6.system === void 0 ? E("Missing required 'system' input parameter with 'code' parameter") : { [r6.system]: [r6.code] } : r6.coding && !r6.code && !r6.codeableConcept ? { [r6.coding.system ?? ""]: [r6.coding.code ?? ""] } : r6.codeableConcept && !r6.code && !r6.coding ? Ca(r6.codeableConcept) : r6.code || r6.coding || r6.codeableConcept ? E("Ambiguous input: multiple source codings provided") : E("No source provided: 'code'+'system', 'coding', or 'codeableConcept' input parameter is required");
}
function Ca(r6) {
  var _a2;
  let e = /* @__PURE__ */ Object.create(null);
  if (!((_a2 = r6.coding) == null ? void 0 : _a2.length)) return e;
  for (let { system: t, code: n } of r6.coding) {
    if (!n) continue;
    let i = t ?? "";
    e[i] = e[i] ? [...e[i], n] : [n];
  }
  return e;
}
function Pa(r6, e) {
  var _a2;
  let t = [];
  for (let [n, i] of Object.entries(r6)) for (let o of e.filter((s) => (s.source ?? "") === n)) {
    let s = (_a2 = o.element) == null ? void 0 : _a2.filter((a) => i.includes(a.code)).flatMap((a) => {
      var _a3;
      return ((_a3 = a.target) == null ? void 0 : _a3.map((c) => ({ equivalence: c.equivalence, concept: { system: o.target, code: c.code, display: c.display } }))) ?? [];
    });
    (s == null ? void 0 : s.length) || (s = wa(i, o)), s && t.push(...s);
  }
  return t;
}
function wa(r6, e) {
  var _a2;
  switch ((_a2 = e.unmapped) == null ? void 0 : _a2.mode) {
    case "provided":
      return r6.map((t) => ({ equivalence: "equal", concept: { system: e.target, code: t } }));
    case "fixed":
      return [{ equivalence: "equivalent", concept: { system: e.target, code: e.unmapped.code, display: e.unmapped.display } }];
    default:
      return;
  }
}
var Aa = [...qe, "->", "<<", ">>", "=="];
function _i(r6) {
  return new ne(r6, Be, Aa).tokenize();
}
var Oa = { "-": "disjoint", "==": "equal" };
var $r = class {
  constructor(e) {
    this.parser = e;
    this.structureMap = { resourceType: "StructureMap", status: "active" };
  }
  parse() {
    var _a2;
    for (; this.parser.hasMore(); ) {
      let e = (_a2 = this.parser.peek()) == null ? void 0 : _a2.value;
      switch (e) {
        case "map":
          this.parseMap();
          break;
        case "uses":
          this.parseUses();
          break;
        case "imports":
          this.parseImport();
          break;
        case "group":
          this.parseGroup();
          break;
        case "conceptmap":
          this.parseConceptMap();
          break;
        default:
          throw new Error(`Unexpected token: ${e}`);
      }
    }
    return this.structureMap;
  }
  parseMap() {
    this.parser.consume("Symbol", "map"), this.structureMap.url = this.parser.consume("String").value, this.parser.consume("="), this.structureMap.name = this.parser.consume().value;
  }
  parseUses() {
    var _a2;
    this.parser.consume("Symbol", "uses");
    let e = {};
    e.url = this.parser.consume("String").value, ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "alias" && (this.parser.consume("Symbol", "alias"), e.alias = this.parser.consume("Symbol").value), this.parser.consume("Symbol", "as"), e.mode = this.parser.consume().value, this.structureMap.structure || (this.structureMap.structure = []), this.structureMap.structure.push(e);
  }
  parseImport() {
    this.parser.consume("Symbol", "imports"), this.structureMap.import || (this.structureMap.import = []), this.structureMap.import.push(this.parser.consume("String").value);
  }
  parseGroup() {
    var _a2, _b, _c2;
    let e = {};
    this.parser.consume("Symbol", "group"), e.name = this.parser.consume("Symbol").value, e.input = this.parseParameters(), ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "extends" && (this.parser.consume("Symbol", "extends"), e.extends = this.parser.consume("Symbol").value), ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "<<" ? (this.parser.consume("<<"), e.typeMode = this.parser.consume().value, ((_c2 = this.parser.peek()) == null ? void 0 : _c2.value) === "+" && (this.parser.consume("+"), e.typeMode = "type-and-types"), this.parser.consume(">>")) : e.typeMode = "none", e.rule = this.parseRules(), this.structureMap.group || (this.structureMap.group = []), this.structureMap.group.push(e);
  }
  parseParameters() {
    var _a2, _b;
    let e = [];
    for (this.parser.consume("("); this.parser.hasMore() && ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) !== ")"; ) e.push(this.parseParameter()), ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "," && this.parser.consume(",");
    return this.parser.consume(")"), e;
  }
  parseParameter() {
    var _a2;
    let e = {};
    return e.mode = this.parser.consume().value, e.name = this.parser.consume("Symbol").value, ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === ":" && (this.parser.consume(":"), e.type = this.parser.consume("Symbol").value), e;
  }
  parseRules() {
    var _a2;
    let e = [];
    for (this.parser.consume("{"); this.parser.hasMore() && ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) !== "}"; ) e.push(this.parseRule());
    return this.parser.consume("}"), e;
  }
  parseRule() {
    var _a2, _b, _c2, _d, _e, _f;
    let e = { source: this.parseRuleSources() };
    return ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "->" && (this.parser.consume("->"), e.target = this.parseRuleTargets()), ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "then" && (this.parser.consume("Symbol", "then"), ((_c2 = this.parser.peek()) == null ? void 0 : _c2.id) === "{" ? e.rule = this.parseRules() : e.dependent = this.parseRuleDependents()), ((_d = this.parser.peek()) == null ? void 0 : _d.id) === "String" ? e.name = this.parser.consume().value : e.name = (_f = (_e = e.source) == null ? void 0 : _e[0]) == null ? void 0 : _f.element, this.parser.consume(";"), e;
  }
  parseRuleSources() {
    var _a2, _b;
    this.parser.hasMore() && ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "for" && this.parser.consume("Symbol", "for");
    let e = [this.parseRuleSource()];
    for (; this.parser.hasMore() && ((_b = this.parser.peek()) == null ? void 0 : _b.value) === ","; ) this.parser.consume(","), e.push(this.parseRuleSource());
    return e;
  }
  parseRuleSource() {
    var _a2, _b, _c2, _d, _e, _f, _g, _h, _i2, _j, _k;
    let e = {}, n = this.parseRuleContext().split(".");
    if (e.context = n[0], e.element = n[1], this.parser.hasMore() && ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === ":" && (this.parser.consume(":"), e.type = this.parser.consume().value), this.parser.hasMore() && ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "default" && (this.parser.consume("Symbol", "default"), e.defaultValueString = this.parser.consume("String").value), (((_c2 = this.parser.peek()) == null ? void 0 : _c2.value) === "first" || ((_d = this.parser.peek()) == null ? void 0 : _d.value) === "not_first" || ((_e = this.parser.peek()) == null ? void 0 : _e.value) === "last" || ((_f = this.parser.peek()) == null ? void 0 : _f.value) === "not_last" || ((_g = this.parser.peek()) == null ? void 0 : _g.value) === "only_one") && (e.listMode = this.parser.consume().value), ((_h = this.parser.peek()) == null ? void 0 : _h.value) === "as" && (this.parser.consume("Symbol", "as"), e.variable = this.parser.consume().value), ((_i2 = this.parser.peek()) == null ? void 0 : _i2.value) === "log" && (this.parser.consume("Symbol", "log"), e.logMessage = this.parser.consume().value), ((_j = this.parser.peek()) == null ? void 0 : _j.value) === "where") {
      this.parser.consume("Symbol", "where");
      let i = this.parser.consumeAndParse(y.Arrow);
      e.condition = i.toString();
    }
    if (((_k = this.parser.peek()) == null ? void 0 : _k.value) === "check") {
      this.parser.consume("Symbol", "check");
      let i = this.parser.consumeAndParse(y.Arrow);
      e.check = i.toString();
    }
    return e;
  }
  parseRuleTargets() {
    var _a2;
    let e = [this.parseRuleTarget()];
    for (; this.parser.hasMore() && ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === ","; ) this.parser.consume(","), e.push(this.parseRuleTarget());
    return e;
  }
  parseRuleTarget() {
    var _a2, _b, _c2, _d, _e, _f;
    let e = {}, n = this.parseRuleContext().split(".");
    return e.contextType = "variable", e.context = n[0], e.element = n[1], ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "=" && (this.parser.consume("="), this.parseRuleTargetTransform(e)), ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "as" && (this.parser.consume("Symbol", "as"), e.variable = this.parser.consume().value), ((_c2 = this.parser.peek()) == null ? void 0 : _c2.value) === "share" && (this.parser.consume("Symbol", "share"), e.listMode = ["share"], this.parser.consume("Symbol")), (((_d = this.parser.peek()) == null ? void 0 : _d.value) === "first" || ((_e = this.parser.peek()) == null ? void 0 : _e.value) === "last" || ((_f = this.parser.peek()) == null ? void 0 : _f.value) === "collate") && (e.listMode = [this.parser.consume().value]), e;
  }
  parseRuleTargetTransform(e) {
    var _a2;
    let t = this.parser.consumeAndParse(y.As);
    t instanceof J ? (e.transform = t.name, e.parameter = (_a2 = t.args) == null ? void 0 : _a2.map(Ni)) : t instanceof U || t instanceof q ? (e.transform = "copy", e.parameter = [Ni(t)]) : (e.transform = "evaluate", e.parameter = [{ valueString: t.toString() }]);
  }
  parseRuleContext() {
    var _a2;
    let e = this.parser.consume().value;
    for (; ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "."; ) this.parser.consume("."), e += "." + this.parser.consume().value;
    return e;
  }
  parseRuleDependents() {
    let e = this.parser.consumeAndParse(y.Arrow);
    return [{ name: e.name, variable: e.args.map((t) => t.name) }];
  }
  parseConceptMap() {
    var _a2, _b;
    this.parser.consume("Symbol", "conceptmap");
    let e = { resourceType: "ConceptMap", status: "active", url: "#" + this.parser.consume("String").value };
    this.parser.consume("{");
    let t = {}, n = (_a2 = this.parser.peek()) == null ? void 0 : _a2.value;
    for (; n !== "}"; ) n === "prefix" ? this.parseConceptMapPrefix(t) : this.parseConceptMapRule(e, t), n = (_b = this.parser.peek()) == null ? void 0 : _b.value;
    this.parser.consume("}"), this.structureMap.contained || (this.structureMap.contained = []), this.structureMap.contained.push(e);
  }
  parseConceptMapPrefix(e) {
    this.parser.consume("Symbol", "prefix");
    let t = this.parser.consume().value;
    this.parser.consume("=");
    let n = this.parser.consume().value;
    e[t] = n;
  }
  parseConceptMapRule(e, t) {
    var _a2;
    let n = this.parser.consume().value, i = t[n];
    this.parser.consume(":");
    let o = this.parser.consume().value, s = Oa[this.parser.consume().value], a = this.parser.consume().value, c = t[a];
    this.parser.consume(":");
    let u = this.parser.consume().value, p = (_a2 = e == null ? void 0 : e.group) == null ? void 0 : _a2.find((m) => m.source === i && m.target === c);
    p || (p = { source: i, target: c, element: [] }, e.group || (e.group = []), e.group.push(p)), p.element || (p.element = []), p.element.push({ code: o, target: [{ code: u, equivalence: s }] });
  }
};
function Ni(r6) {
  if (r6 instanceof q) return { valueId: r6.name };
  if (r6 instanceof U) return Ia(r6);
  throw new Error(`Unknown parameter atom type: ${r6.constructor.name} (${r6.toString()})`);
}
function Ia(r6) {
  switch (r6.value.type) {
    case "boolean":
      return { valueBoolean: r6.value.value };
    case "decimal":
      return { valueDecimal: r6.value.value };
    case "integer":
      return { valueInteger: r6.value.value };
    case "dateTime":
    case "string":
      return { valueString: r6.value.value };
    default:
      throw new Error("Unknown target literal type: " + r6.value.type);
  }
}
var ka = je().registerInfix("->", { precedence: y.Arrow }).registerInfix(";", { precedence: y.Semicolon });
function Wf(r6) {
  let e = ka.construct(_i(r6));
  return e.removeComments(), new $r(e).parse();
}
var Gr = class {
  constructor(e = []) {
    this.resources = e;
  }
  get(e, t) {
    let n = [];
    for (let i of this.resources) i.resourceType === e && i.url && this.matchesUrl(i.url, t) && n.push(i);
    return n;
  }
  matchesUrl(e, t) {
    if (t.includes("*")) {
      let n = t.split("*");
      return e.startsWith(n[0]) && e.endsWith(n[1]);
    } else return e === t;
  }
};
function Yf(r6, e, t = new Gr()) {
  return Va({ root: r6, transformMaps: t }, r6, e);
}
function Va(r6, e, t) {
  return Da(r6, e), Fi(r6, e), Qr(r6, e.group[0], t);
}
function Da(r6, e) {
  let t = Wt(r6);
  if (t && e.import) for (let n of e.import) {
    let i = t.get("StructureMap", n);
    for (let o of i) Fi(r6, o);
  }
}
function Fi(r6, e) {
  let t = Wt(r6);
  if (t && e.contained) for (let n of e.contained) (n.resourceType === "StructureMap" || n.resourceType === "ConceptMap") && t.resources.push(n);
  if (e.group) for (let n of e.group) jt(r6, n.name, { type: "StructureMapGroup", value: n });
}
function Qr(r6, e, t) {
  let n = [], i = [];
  for (let u of e.input) u.mode === "source" && n.push(u), u.mode === "target" && i.push(u);
  if (n.length === 0) throw new Error("Missing source definitions");
  if (i.length === 0) throw new Error("Missing target definitions");
  if (t.length < n.length) throw new Error(`Not enough arguments (got ${t.length}, min ${n.length})`);
  if (t.length > n.length + i.length) throw new Error(`Too many arguments (got ${t.length}, max ${n.length + i.length})`);
  let o = {}, s = [], a = 0;
  for (let u of n) Qe(o, u.name, t[a++]);
  for (let u of i) {
    let p = t[a++] ?? { type: u.type ?? "BackboneElement", value: {} };
    Qe(o, u.name, p), s.push(p);
  }
  let c = { root: r6.root, parent: r6, variables: o };
  if (e.rule) for (let u of e.rule) Ui(c, u);
  return s;
}
function Ui(r6, e) {
  e.source && Bi(r6, e, 0);
}
function Bi(r6, e, t) {
  let n = e.source[t];
  for (let i of La(r6, n)) jt(r6, "_", i), n.variable && jt(r6, n.variable, i), t < e.source.length - 1 ? Bi(r6, e, t + 1) : Ma(r6, e);
}
function Ma(r6, e) {
  if (!_a(r6, e)) {
    if (e.target) for (let t of e.target) qi(r6, t);
    if (e.rule) for (let t of e.rule) Ui(r6, t);
    if (e.dependent) for (let t of e.dependent) Qa(r6, t);
  }
}
function _a(r6, e) {
  if (!e.target || e.target.length !== 1 || e.target[0].transform || e.rule || e.dependent) return false;
  let t = oe(r6, "_");
  if (Array.isArray(t) && (t = t[0]), !t) return false;
  let n = Na(r6, t);
  if (!n) return qi(r6, { ...e.target[0], transform: "copy", parameter: [{ valueId: "_" }] }), true;
  let i = e.target[0], o = oe(r6, i.context), s = o.value[i.element], a = Wi(o, i.element) || Array.isArray(s), c = { root: r6.root, parent: r6, variables: {} }, u = Qr(c, n, [t]);
  return ji(r6, i, o, u, a, s), true;
}
function Na(r6, e) {
  let t = r6;
  for (; t; ) {
    if (t.variables) for (let n of Object.values(t.variables)) {
      let i = Hr(n);
      for (let o of i) if (o.type === "StructureMapGroup") {
        let s = o.value;
        if ((s.typeMode === "types" || s.typeMode === "type-and-types") && s.input.length === 2 && s.input[0].mode === "source" && s.input[0].type === e.type && s.input[1].mode === "target") return s;
      }
    }
    t = t.parent;
  }
}
function La(r6, e) {
  let t = oe(r6, e.context);
  if (!t) return [];
  let n = e.element;
  if (!n) return [t];
  let i = A(n, [t]);
  if (!i || i.length === 0) return [];
  if (e.condition && !Li(t, { [e.variable]: i[0] }, e.condition)) return [];
  if (e.check && !Li(t, { [e.variable]: i[0] }, e.check)) throw new Error("Check failed: " + e.check);
  return e.listMode && (i = Fa(e, i)), i;
}
function Li(r6, e, t) {
  return N(A(t, [r6], e));
}
function Fa(r6, e) {
  switch (r6.listMode) {
    case "first":
      return [e[0]];
    case "not_first":
      return e.slice(1);
    case "last":
      return [e[e.length - 1]];
    case "not_last":
      return e.slice(0, e.length - 1);
    case "only_one":
      if (e.length !== 1) throw new Error("Expected only one value");
      break;
  }
  return e;
}
function qi(r6, e) {
  var _a2;
  let t = oe(r6, e.context);
  if (!t) throw new Error("Target not found: " + e.context);
  let n = t.value[e.element], i, o = Wi(t, e.element) || Array.isArray(n);
  if (e.transform) switch (e.transform) {
    case "append":
      i = Ua(r6, e);
      break;
    case "cast":
      i = Ba(r6, e);
      break;
    case "cc":
      i = qa(r6, e);
      break;
    case "copy":
      i = ja(r6, e);
      break;
    case "create":
      i = Wa(r6, e);
      break;
    case "evaluate":
      i = $a(r6, e);
      break;
    case "translate":
      i = Ga(r6, e);
      break;
    case "truncate":
      i = Ha(r6, e);
      break;
    case "uuid":
      i = [{ type: "string", value: ve() }];
      break;
    default:
      throw new Error(`Unsupported transform: ${e.transform}`);
  }
  else {
    let s = (_a2 = $i(t, e.element)) == null ? void 0 : _a2.type, a = (s == null ? void 0 : s.length) === 1 ? s[0].code : void 0;
    o || n === void 0 ? i = [a ? { type: a, value: {} } : g({})] : i = [a ? { type: a, value: n } : g(n)];
  }
  ji(r6, e, t, i, o, n);
}
function ji(r6, e, t, n, i, o) {
  if (n.length !== 0) {
    if (i) {
      o || (o = [], Qe(t.value, e.element, o));
      for (let s of n) o.push(s.value);
    } else Qe(t.value, e.element, n[0].value);
    e.variable && jt(r6, e.variable, Ka(n));
  }
}
function Wi(r6, e) {
  var _a2;
  return (_a2 = $i(r6, e)) == null ? void 0 : _a2.isArray;
}
function $i(r6, e) {
  var _a2, _b;
  return (_b = (_a2 = Le(r6.type)) == null ? void 0 : _a2.elements) == null ? void 0 : _b[e];
}
function Ua(r6, e) {
  var _a2, _b, _c2, _d, _e, _f;
  let t = (_c2 = (_b = _(r6, (_a2 = e.parameter) == null ? void 0 : _a2[0])) == null ? void 0 : _b[0]) == null ? void 0 : _c2.value, n = (_f = (_e = _(r6, (_d = e.parameter) == null ? void 0 : _d[1])) == null ? void 0 : _e[0]) == null ? void 0 : _f.value;
  return [{ type: "string", value: (t ?? "").toString() + (n ?? "").toString() }];
}
function Ba(r6, e) {
  var _a2, _b, _c2, _d, _e, _f;
  let t = (_b = _(r6, (_a2 = e.parameter) == null ? void 0 : _a2[0])) == null ? void 0 : _b[0];
  return ((_e = (_d = _(r6, (_c2 = e.parameter) == null ? void 0 : _c2[1])) == null ? void 0 : _d[0]) == null ? void 0 : _e.value) === "string" ? [{ type: "string", value: (_f = t == null ? void 0 : t.value) == null ? void 0 : _f.toString() }] : [t];
}
function qa(r6, e) {
  var _a2, _b, _c2, _d, _e, _f;
  let t = e.parameter;
  if (t.length === 2) {
    let n = (_b = (_a2 = _(r6, t[0])) == null ? void 0 : _a2[0]) == null ? void 0 : _b.value, i = (_d = (_c2 = _(r6, t[1])) == null ? void 0 : _c2[0]) == null ? void 0 : _d.value;
    return [{ type: "CodeableConcept", value: { coding: [{ system: n, code: i }] } }];
  } else return [{ type: "CodeableConcept", value: { text: (_f = (_e = _(r6, t[0])) == null ? void 0 : _e[0]) == null ? void 0 : _f.value } }];
}
function ja(r6, e) {
  return e.parameter.flatMap((t) => _(r6, t));
}
function Wa(r6, e) {
  var _a2, _b, _c2;
  let t = {};
  return e.parameter && e.parameter.length > 0 && (t.resourceType = (_c2 = (_b = _(r6, (_a2 = e.parameter) == null ? void 0 : _a2[0])) == null ? void 0 : _b[0]) == null ? void 0 : _c2.value), [g(t)];
}
function $a(r6, e) {
  var _a2;
  let n = _(r6, (_a2 = e.parameter) == null ? void 0 : _a2[0])[0].value;
  return A(n, [], Gi(r6));
}
function Ga(r6, e) {
  var _a2, _b, _c2, _d, _e, _f;
  let t = e.parameter.flatMap((c) => _(r6, c)), n = t[0].value, i = t[1].value, s = (_a2 = Wt(r6)) == null ? void 0 : _a2.get("ConceptMap", i)[0];
  if (!s) throw new Error("ConceptMap not found: " + i);
  let a = Mi(s, { system: (_c2 = (_b = s.group) == null ? void 0 : _b[0]) == null ? void 0 : _c2.source, code: n });
  return [g((_f = (_e = (_d = a.match) == null ? void 0 : _d[0]) == null ? void 0 : _e.concept) == null ? void 0 : _f.code)];
}
function Ha(r6, e) {
  var _a2, _b, _c2, _d, _e;
  let t = (_b = _(r6, (_a2 = e.parameter) == null ? void 0 : _a2[0])) == null ? void 0 : _b[0], n = (_e = (_d = _(r6, (_c2 = e.parameter) == null ? void 0 : _c2[1])) == null ? void 0 : _d[0]) == null ? void 0 : _e.value;
  return t.type === "string" ? [{ type: "string", value: t.value.substring(0, n) }] : [t];
}
function Qa(r6, e) {
  let t = oe(r6, e.name);
  if (!t) throw new Error("Dependent group not found: " + e.name);
  let n = e.variable, i = [];
  for (let s of n) {
    let a = oe(r6, s);
    if (!a) throw new Error("Dependent variable not found: " + s);
    i.push(a);
  }
  let o = { root: r6.root, parent: r6, variables: {} };
  Qr(o, t.value, i);
}
function Wt(r6) {
  if (r6.transformMaps) return r6.transformMaps;
  if (r6.parent) return Wt(r6.parent);
}
function _(r6, e) {
  let n = P({ type: "StructureMapGroupRuleTargetParameter", value: e }, "value");
  if (!n) throw new Error("Missing target parameter: " + JSON.stringify(e));
  if (n = Hr(n), n.length === 1 && n[0].type === "id") {
    let i = oe(r6, n[0].value);
    if (!i) throw new Error("Variable not found: " + n[0].value);
    return Hr(i);
  }
  return n;
}
function oe(r6, e) {
  var _a2;
  let t = (_a2 = r6.variables) == null ? void 0 : _a2[e];
  if (t) return t;
  if (r6.parent) return oe(r6.parent, e);
}
function Gi(r6, e = {}) {
  if (r6.parent && Gi(r6.parent, e), r6.variables) for (let [t, n] of Object.entries(r6.variables)) e[t] = n, e["%" + t] = n;
  return e;
}
function jt(r6, e, t) {
  r6.variables || (r6.variables = {}), Qe(r6.variables, e, t);
}
function Qe(r6, e, t) {
  if (e === "__proto__" || e === "constructor" || e === "prototype") throw new Error("Invalid key: " + e);
  r6[e] = t;
}
function Hr(r6) {
  return Array.isArray(r6) ? r6 : [r6];
}
function Ka(r6) {
  return r6.length === 1 ? r6[0] : r6;
}
var za = [...qe, "eq", "ne", "co"];
function Hi(r6) {
  return new ne(r6, Be, za, { dateTimeLiterals: true, symbolRegex: /[^\s\])]/ }).tokenize();
}
var $t = class {
  constructor(e, t, n) {
    this.path = e;
    this.operator = t;
    this.value = n;
  }
};
var Gt = class {
  constructor(e) {
    this.child = e;
  }
};
var Ht = class {
  constructor(e, t, n) {
    this.keyword = e;
    this.left = t;
    this.right = n;
  }
};
var Ja = { eq: "eq", ne: "ne", co: "contains", sw: "sw", ew: void 0, gt: "gt", lt: "lt", ge: "ge", le: "le", ap: "ap", sa: "sa", eb: "eb", pr: "present", po: void 0, ss: void 0, sb: void 0, in: "in", ni: "not-in", re: "eq", identifier: "identifier" };
function Ya(r6) {
  let e = Ja[r6];
  if (!e) throw new d(E("Invalid operator: " + r6));
  return e;
}
var Kr = class {
  constructor(e) {
    this.parser = e;
  }
  parse() {
    var _a2, _b, _c2;
    let e;
    ((_a2 = this.parser.peek()) == null ? void 0 : _a2.value) === "(" ? (this.parser.consume("("), e = this.parse(), this.parser.consume(")")) : ((_b = this.parser.peek()) == null ? void 0 : _b.value) === "not" ? (this.parser.consume("Symbol", "not"), this.parser.consume("("), e = new Gt(this.parse()), this.parser.consume(")")) : e = new $t(this.parser.consume("Symbol").value, Ya(this.parser.consume("Symbol").value), this.parser.consume().value);
    let t = (_c2 = this.parser.peek()) == null ? void 0 : _c2.value;
    return t === "and" || t === "or" ? (this.parser.consume("Symbol", t), new Ht(t, e, this.parse())) : e;
  }
};
var Za = je();
function um(r6) {
  let e = Za.construct(Hi(r6));
  return e.removeComments(), new Kr(e).parse();
}
var se = class {
  constructor(e = "\r", t = "|", n = "^", i = "~", o = "\\", s = "&") {
    this.segmentSeparator = e;
    this.fieldSeparator = t;
    this.componentSeparator = n;
    this.repetitionSeparator = i;
    this.escapeCharacter = o;
    this.subcomponentSeparator = s;
  }
  getMsh1() {
    return this.fieldSeparator;
  }
  getMsh2() {
    return this.componentSeparator + this.repetitionSeparator + this.escapeCharacter + this.subcomponentSeparator;
  }
};
var Qi = class r2 {
  constructor(e, t = new se()) {
    this.context = t, this.segments = e;
  }
  get header() {
    return this.segments[0];
  }
  get(e) {
    return this.getSegment(e);
  }
  getAll(e) {
    return this.getAllSegments(e);
  }
  getSegment(e) {
    return typeof e == "number" ? this.segments[e] : this.segments.find((t) => t.name === e);
  }
  getAllSegments(e) {
    return this.segments.filter((t) => t.name === e);
  }
  toString() {
    return this.segments.map((e) => e.toString()).join(this.context.segmentSeparator);
  }
  buildAck() {
    var _a2, _b, _c2, _d, _e, _f;
    let e = /* @__PURE__ */ new Date(), t = this.getSegment("MSH"), n = ((_a2 = t == null ? void 0 : t.getField(3)) == null ? void 0 : _a2.toString()) ?? "", i = ((_b = t == null ? void 0 : t.getField(4)) == null ? void 0 : _b.toString()) ?? "", o = ((_c2 = t == null ? void 0 : t.getField(5)) == null ? void 0 : _c2.toString()) ?? "", s = ((_d = t == null ? void 0 : t.getField(6)) == null ? void 0 : _d.toString()) ?? "", a = ((_e = t == null ? void 0 : t.getField(10)) == null ? void 0 : _e.toString()) ?? "", c = ((_f = t == null ? void 0 : t.getField(12)) == null ? void 0 : _f.toString()) ?? "2.5.1";
    return new r2([new Ke(["MSH", this.context.getMsh2(), o, s, n, i, ec(e), "", this.buildAckMessageType(t), e.getTime().toString(), "P", c], this.context), new Ke(["MSA", "AA", a, "OK"], this.context)]);
  }
  buildAckMessageType(e) {
    let t = e == null ? void 0 : e.getField(9), n = t == null ? void 0 : t.getComponent(2), i = t == null ? void 0 : t.getComponent(3), o = "ACK";
    return n && i ? o = `ACK^${n}^ACK` : n && (o = `ACK^${n}`), o;
  }
  static parse(e) {
    if (!e.startsWith("MSH")) {
      let n = new Error("Invalid HL7 message");
      throw n.type = "entity.parse.failed", n;
    }
    let t = new se("\r", e.charAt(3), e.charAt(4), e.charAt(5), e.charAt(6), e.charAt(7));
    return new r2(e.split(/[\r\n]+/).map((n) => Ke.parse(n, t)), t);
  }
};
var Ke = class r3 {
  constructor(e, t = new se()) {
    this.context = t, Un(e) ? this.fields = e.map((n) => Me.parse(n, t)) : this.fields = e, this.name = this.fields[0].components[0][0];
  }
  get(e) {
    return this.fields[e];
  }
  getField(e) {
    if (this.name === "MSH") {
      if (e === 1) return new Me([[this.context.getMsh1()]], this.context);
      if (e === 2) return new Me([[this.context.getMsh2()]], this.context);
      if (e > 2) return this.fields[e - 1];
    }
    return this.fields[e];
  }
  getComponent(e, t, n, i = 0) {
    var _a2;
    return ((_a2 = this.getField(e)) == null ? void 0 : _a2.getComponent(t, n, i)) ?? "";
  }
  toString() {
    return this.fields.map((e) => e.toString()).join(this.context.fieldSeparator);
  }
  static parse(e, t = new se()) {
    return new r3(e.split(t.fieldSeparator).map((n) => Me.parse(n, t)), t);
  }
};
var Me = class r4 {
  constructor(e, t = new se()) {
    this.context = t, this.components = e;
  }
  get(e, t, n = 0) {
    return this.getComponent(e + 1, t, n);
  }
  getComponent(e, t, n = 0) {
    let i = this.components[n][e - 1] ?? "";
    return t !== void 0 && (i = i.split(this.context.subcomponentSeparator)[t] ?? ""), i;
  }
  toString() {
    return this.components.map((e) => e.join(this.context.componentSeparator)).join(this.context.repetitionSeparator);
  }
  static parse(e, t = new se()) {
    return new r4(e.split(t.repetitionSeparator).map((n) => n.split(t.componentSeparator)), t);
  }
};
function dm(r6, e) {
  if (!r6) return;
  let t = Se(r6.slice(0, 4), 0), n = Se(r6.slice(4, 6), 1) - 1, i = Se(r6.slice(6, 8), 1), o = Se(r6.slice(8, 10), 0), s = Se(r6.slice(10, 12), 0), a = Se(r6.slice(12, 14), 0), c = 0;
  r6.includes(".") && (c = Se(r6.slice(15, 19), 0));
  let u = new Date(Date.UTC(t, n, i, o, s, a, c)), p = Xa(r6, e == null ? void 0 : e.tzOffset);
  return p !== 0 && (u = new Date(u.getTime() - p)), u.toISOString();
}
function Se(r6, e) {
  let t = parseInt(r6, 10);
  return isNaN(t) ? e : t;
}
function Xa(r6, e) {
  let t = e, n = r6.indexOf("+");
  n !== -1 && (t = r6.slice(n));
  let i = r6.indexOf("-");
  if (i !== -1 && (t = r6.slice(i)), !t) return 0;
  let o = t.startsWith("-") ? -1 : 1;
  t = t.slice(1).replace(":", "");
  let s = parseInt(t.slice(0, 2), 10), a = parseInt(t.slice(2, 4), 10);
  return o * (s * 60 * 60 * 1e3 + a * 60 * 1e3);
}
function ec(r6) {
  let e = r6 instanceof Date ? r6 : new Date(r6), n = e.toISOString().replace(/[-:T]/g, "").replace(/(\.\d+)?Z$/, ""), i = e.getUTCMilliseconds();
  return i > 0 && (n += "." + i.toString()), n;
}
var zr = ((o) => (o[o.NONE = 0] = "NONE", o[o.ERROR = 1] = "ERROR", o[o.WARN = 2] = "WARN", o[o.INFO = 3] = "INFO", o[o.DEBUG = 4] = "DEBUG", o))(zr || {});
var Ki = class r5 {
  constructor(e, t = {}, n = 3, i) {
    this.write = e;
    this.metadata = t;
    this.level = n;
    this.options = i;
    (i == null ? void 0 : i.prefix) && (this.prefix = i.prefix), this.error = this.error.bind(this), this.warn = this.warn.bind(this), this.info = this.info.bind(this), this.debug = this.debug.bind(this), this.log = this.log.bind(this);
  }
  clone(e) {
    let t = this.getLoggerConfig(), n = e ? { ...t, override: e, options: { ...t.options, ...e.options } } : t;
    return new r5(n.write, n.metadata, n.level, n.options);
  }
  getLoggerConfig() {
    let { write: e, metadata: t, level: n, options: i } = this;
    return { write: e, metadata: t, level: n, options: i };
  }
  error(e, t) {
    this.log(1, e, t);
  }
  warn(e, t) {
    this.log(2, e, t);
  }
  info(e, t) {
    this.log(3, e, t);
  }
  debug(e, t) {
    this.log(4, e, t);
  }
  log(e, t, n) {
    var _a2;
    e > this.level || (n instanceof Error && (n = { error: n.toString(), stack: (_a2 = n.stack) == null ? void 0 : _a2.split(`
`) }), this.write(JSON.stringify({ level: zr[e], timestamp: (/* @__PURE__ */ new Date()).toISOString(), msg: this.prefix ? `${this.prefix}${t}` : t, ...n, ...this.metadata })));
  }
};
function mm(r6) {
  let e = zr[r6.toUpperCase()];
  if (e === void 0) throw new Error(`Invalid log level: ${r6}`);
  return e;
}
function xm(r6) {
  if (!r6) throw new d(h("Resource type is null"));
  if (!Tn(r6)) throw new d(h("Unknown resource type"));
}
function zi(r6, e, t) {
  r6 === null ? t.push(T(e, "Invalid null value")) : Array.isArray(r6) ? tc(r6, e, t) : typeof r6 == "object" && rc(r6, e, t);
}
function tc(r6, e, t) {
  for (let n = 0; n < r6.length; n++) r6[n] === void 0 ? t.push(T(`${e}[${n}]`, "Invalid undefined value")) : zi(r6[n], `${e}[${n}]`, t);
}
function rc(r6, e, t) {
  for (let [n, i] of Object.entries(r6)) zi(i, `${e}${e ? "." : ""}${n}`, t);
}
function Tm(r6) {
  let e = [];
  return new Promise((t, n) => {
    r6.on("data", (i) => e.push(Buffer.from(i))), r6.on("error", (i) => {
      r6.destroy(), n(i);
    }), r6.on("end", () => {
      t(Buffer.concat(e));
    }), r6.on("close", () => {
      r6.destroy();
    });
  });
}
function Rm(r6, e) {
  let t = [];
  for (let n of e) t.push(...nc(r6, n));
  return t;
}
function nc(r6, e) {
  if (!r6.resource) throw new Error("Resource type is required");
  if (r6.resource !== e.resourceType) return [];
  let t = {};
  if (r6.constant) for (let i of r6.constant) {
    let o = { type: "ViewDefinitionConstant", value: i };
    t["%" + i.name] = P(o, "value");
  }
  let n = g(e);
  if (r6.where) for (let i of r6.where) {
    let o = A(i.path, [n], t);
    if (o.length !== 1) return [];
    if (o[0].type !== "boolean") throw new Error("WHERE clause must evaluate to a boolean");
    if (!o[0].value) return [];
  }
  return Jr(r6, n, t);
}
function Jr(r6, e, t) {
  let n = [], i;
  r6.forEach ? i = A(r6.forEach, [e], t) : r6.forEachOrNull ? i = A(r6.forEachOrNull, [e], t) : i = [e];
  for (let o of i) {
    let s = [];
    for (let a of r6.column ?? []) {
      let c = A(a.path, [o], t), u;
      if (c.length === 0) u = { [a.name]: null };
      else if (a.collection) u = { [a.name]: c.map((p) => p.value) };
      else if (c.length === 1) u = { [a.name]: c[0].value };
      else throw new Error("Multiple values found but not expected for column");
      s.push([u]);
    }
    for (let a of r6.select ?? []) {
      let c = Jr(a, o, t);
      s.push(c);
    }
    if (r6.unionAll) {
      let a = [];
      for (let c of r6.unionAll) for (let u of Jr(c, o, t)) a.push(u);
      s.push(a);
    }
    n.push(...ic(s));
  }
  if (i.length === 0 && r6.forEachOrNull) {
    let o = {};
    for (let s of r6.column ?? []) o[s.name] = null;
    n.push(o);
  }
  return n;
}
function ic(r6) {
  if (r6.length === 0) return [];
  let e = r6[0];
  for (let t = 1; t < r6.length; t++) e = oc(e, r6[t]);
  return e;
}
function oc(r6, e) {
  let t = [];
  for (let n of r6) for (let i of e) t.push(sc(n, i));
  return t;
}
function sc(r6, e) {
  let t = {};
  return Object.assign(t, r6), Object.assign(t, e), t;
}
var ac = "https://api.github.com/repos/medplum/medplum/releases";
var Qt = /* @__PURE__ */ new Map();
function wm() {
  Qt.clear();
}
function cc(r6) {
  let e = r6;
  if (!e.tag_name) throw new Error("Manifest missing tag_name");
  let t = e.assets;
  if (!(t == null ? void 0 : t.length)) throw new Error("Manifest missing assets list");
  for (let n of t) {
    if (!n.browser_download_url) throw new Error("Asset missing browser download URL");
    if (!n.name) throw new Error("Asset missing name");
  }
}
async function Ji(r6) {
  let e = Qt.get(r6 ?? "latest");
  if (!e) {
    let t = r6 ? `tags/v${r6}` : "latest", n = await fetch(`${ac}/${t}`);
    if (n.status !== 200) {
      let o;
      try {
        o = (await n.json()).message;
      } catch (s) {
        console.error(`Failed to parse message from body: ${Ne(s)}`);
      }
      throw new Error(`Received status code ${n.status} while fetching manifest for version '${r6 ?? "latest"}'. Message: ${o}`);
    }
    let i = await n.json();
    cc(i), e = i, Qt.set(r6 ?? "latest", e), r6 || Qt.set(e.tag_name.slice(1), e);
  }
  return e;
}
function uc(r6) {
  return /^\d+\.\d+\.\d+$/.test(r6);
}
async function Am(r6) {
  if (!uc(r6)) return false;
  try {
    await Ji(r6);
  } catch {
    return false;
  }
  return true;
}
async function Om() {
  let r6 = await Ji();
  if (!r6.tag_name.startsWith("v")) throw new Error(`Invalid release name found. Release tag '${r6.tag_name}' did not start with 'v'`);
  return r6.tag_name.slice(1);
}

export {
  ze,
  Y,
  Je,
  Kt,
  Yr,
  pc,
  dc,
  fc,
  mc,
  hc,
  yc,
  Zr,
  gc,
  vc,
  Tc,
  Sc,
  on,
  Ee,
  sn,
  tr,
  Ec,
  bc,
  Rc,
  Cc,
  Pc,
  wc,
  E,
  Ac,
  h,
  an,
  Oc,
  be,
  rr,
  Ic,
  kc,
  Vc,
  Dc,
  Mc,
  _c,
  Nc,
  Lc,
  d,
  Xe,
  Ne,
  cn,
  Yi,
  ae,
  T,
  un,
  ln,
  Uc,
  Xi,
  pn,
  sr,
  cr,
  ur,
  xn,
  vn,
  Le,
  Z,
  Tn,
  Sn,
  En,
  Jc,
  su,
  au,
  et,
  bn,
  Ce,
  co,
  fr,
  tt,
  nt,
  Pu,
  wu,
  hr,
  f,
  g,
  N,
  j,
  P,
  go,
  xo,
  it,
  On,
  In,
  kn,
  yr,
  gr,
  vo,
  ot,
  Vn,
  Pe,
  Dn,
  Du,
  k,
  Mn,
  te,
  le,
  pe,
  Uu,
  So,
  Eo,
  Bu,
  qu,
  ct,
  ju,
  Wu,
  $u,
  Co,
  Gu,
  Hu,
  X,
  Fn,
  S,
  K,
  ee,
  Ue,
  de,
  Qu,
  R,
  Un,
  Vo,
  vr,
  Tr,
  Do,
  qn,
  jn,
  Wn,
  w,
  Ku,
  Er,
  we,
  Sr,
  zu,
  Ju,
  Yu,
  Gn,
  Zu,
  Xu,
  el,
  tl,
  Lo,
  Fo,
  rl,
  Fe,
  nl,
  br,
  Rr,
  Hn,
  Ae,
  ut,
  Cr,
  Uo,
  B,
  Qn,
  Kn,
  Bo,
  il,
  ol,
  sl,
  al,
  zn,
  ll,
  lt,
  pl,
  dl,
  wr,
  fl,
  qo,
  Pr,
  ml,
  hl,
  yl,
  fe,
  gl,
  at,
  Ho,
  Qo,
  l,
  Rl,
  Cl,
  Ar,
  or,
  Jo,
  lr,
  Pl,
  wl,
  Al,
  Ol,
  Yo,
  st,
  es,
  I,
  ue,
  L,
  Xn,
  pt,
  U,
  q,
  dt,
  ft,
  ye,
  C,
  V,
  mt,
  ht,
  yt,
  re,
  Ie,
  gt,
  xt,
  vt,
  Tt,
  ge,
  St,
  Et,
  bt,
  Rt,
  J,
  xe,
  ne,
  y,
  je,
  Or,
  ke,
  A,
  ti,
  kr,
  ni,
  fp,
  Sp,
  Ep,
  ai,
  ie,
  bp,
  Rp,
  Cp,
  gs,
  Pp,
  wp,
  Ct,
  Pt,
  Ms,
  _s,
  Ns,
  Fp,
  Fs,
  Up,
  Us,
  Bp,
  pi,
  di,
  _r,
  fi,
  ve,
  Bs,
  js,
  Kp,
  At,
  D,
  Nr,
  H,
  Lr,
  Gs,
  Fr,
  yi,
  gi,
  Hs,
  Qs,
  xi,
  Ur,
  It,
  Br,
  Ot,
  vi,
  kt,
  Ti,
  Si,
  Vt,
  M,
  $e,
  qr,
  bi,
  Zs,
  Mt,
  Ge,
  _t,
  Pd,
  ta,
  tf,
  rf,
  ra,
  ua,
  la,
  pa,
  da,
  Nt,
  Ii,
  ya,
  of,
  Wr,
  ki,
  Vi,
  Of,
  If,
  kf,
  Vf,
  qt,
  Mi,
  Wf,
  Gr,
  Yf,
  $t,
  Gt,
  Ht,
  um,
  se,
  Qi,
  Ke,
  Me,
  dm,
  ec,
  zr,
  Ki,
  mm,
  xm,
  zi,
  Tm,
  Rm,
  ac,
  wm,
  cc,
  Ji,
  uc,
  Am,
  Om
};
/*! Bundled license information:

@medplum/core/dist/esm/index.mjs:
  (*!
   * Reconnecting WebSocket
   * by Pedro Ladaria <pedro.ladaria@gmail.com>
   * https://github.com/pladaria/reconnecting-websocket
   * License MIT
   *
   * Copy of "partysocket" from Partykit team, a fork of the original "Reconnecting WebSocket"
   * https://github.com/partykit/partykit/blob/main/packages/partysocket
   *)
*/
//# sourceMappingURL=chunk-KJT3S4CS.js.map
